{"files":{"cc/trees/layer_tree_host_unittest_context.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":8,"num_removed":3,"messages":[{"author":"danakj","author_email":"danakj@chromium.org","text":"nit: how about output_surface->Context3d()->set_have...","draft":false,"lineno":984,"date":"2013-04-22 18:03:41.536660","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> nit: how about output_surface->Context3d()->set_have...\n\nThese are methods on the test context, so need to do a cast. I think not changing this is safer.","draft":false,"lineno":984,"date":"2013-04-22 23:32:05.643240","left":false}],"id":106012,"is_binary":false},"cc/trees/proxy.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":12,"messages":[],"id":106013,"is_binary":false},"cc/test/fake_proxy.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":4,"messages":[{"author":"danakj","author_email":"danakj@chromium.org","text":"nit: SetLayerTreeHost","draft":false,"lineno":20,"date":"2013-04-22 18:03:41.533710","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"nit: layer_tree_host_","draft":false,"lineno":50,"date":"2013-04-22 18:03:41.533950","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> nit: SetLayerTreeHost\n\nDone.","draft":false,"lineno":20,"date":"2013-04-22 23:32:05.639760","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> nit: layer_tree_host_\n\nDone.","draft":false,"lineno":50,"date":"2013-04-22 23:32:05.640020","left":false}],"id":106008,"is_binary":false},"cc/trees/thread_proxy.cc":{"status":"M","num_chunks":11,"no_base_file":false,"property_changes":"","num_added":111,"num_removed":135,"messages":[{"author":"danakj","author_email":"danakj@chromium.org","text":"s/Context/OutputSurface/\n\nThis \"Context\" reference is a hold-over from before we had output surfaces.","draft":false,"lineno":182,"date":"2013-04-22 18:03:41.537460","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Move this below the early out if it's not used","draft":false,"lineno":191,"date":"2013-04-22 18:03:41.537620","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"s/Context/OutputSurface/","draft":false,"lineno":230,"date":"2013-04-22 18:03:41.537780","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"style nit: please do if (variable == ConstantValue) throughout this CL. (also saw this in SchedulerStateMachine)","draft":false,"lineno":243,"date":"2013-04-22 18:03:41.537970","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Can you add a DCHECK(IsMainThread()) in here?","draft":false,"lineno":251,"date":"2013-04-22 18:03:41.538150","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Don't change this. We want the DidLose stuff to happen outside the callback from the GraphicsContext3d.","draft":false,"lineno":288,"date":"2013-04-22 18:03:41.538330","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Why? It seems like passing NULL is valid according to the line below, to disable VsyncNotification","draft":false,"lineno":335,"date":"2013-04-22 18:03:41.538540","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"can this be if(layer_tree_host_impl_->renderer())?\n\nThis variable is a main thread variable. using it here without locks is not great.","draft":false,"lineno":561,"date":"2013-04-22 18:03:41.538760","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"How can this be false? In the readback case, we called InitRendererIfNeeded(). In the non-readback case, we don't schedule begin frame while the surface is lost.\n\nCan this if block just go away? Feel free to dcheck !output_surface_lost_ in LTH::UpdateLayers() if you want..\n\nIf this can go away, I think the LTH::HasOutputSurface() method can go away as well (once LTH::had_output_surface_ goes too).","draft":false,"lineno":671,"date":"2013-04-22 18:03:41.538920","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"s/Context/OutputSurface/","draft":false,"lineno":1100,"date":"2013-04-22 18:03:41.539090","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> s/Context/OutputSurface/\n> \n> This \"Context\" reference is a hold-over from before we had output surfaces.\n\nDone.","draft":false,"lineno":182,"date":"2013-04-22 23:32:05.644500","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Move this below the early out if it's not used\n\nDone.","draft":false,"lineno":191,"date":"2013-04-22 23:32:05.644740","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> s/Context/OutputSurface/\n\nDone.","draft":false,"lineno":230,"date":"2013-04-22 23:32:05.645030","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> style nit: please do if (variable == ConstantValue) throughout this CL. (also\n> saw this in SchedulerStateMachine)\n\nDone.\n\nFor reference, my habit of doing ConstValue == var comes from safety of not being able to mistakely miss an equal sign and make it an assignment.","draft":false,"lineno":243,"date":"2013-04-22 23:32:05.645270","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Can you add a DCHECK(IsMainThread()) in here?\n\nDone.","draft":false,"lineno":251,"date":"2013-04-22 23:32:05.645460","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Don't change this. We want the DidLose stuff to happen outside the callback from\n> the GraphicsContext3d.\n\nDone.","draft":false,"lineno":288,"date":"2013-04-22 23:32:05.645970","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Why? It seems like passing NULL is valid according to the line below, to disable\n> VsyncNotification\n\nMy bad, this was for debugging weeks ago. Removed.","draft":false,"lineno":335,"date":"2013-04-22 23:32:05.646190","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> can this be if(layer_tree_host_impl_->renderer())?\n> \n> This variable is a main thread variable. using it here without locks is not\n> great.\n\nMoved the if check into main thread function above, then change this to renderer().","draft":false,"lineno":561,"date":"2013-04-22 23:32:05.646360","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> How can this be false? In the readback case, we called InitRendererIfNeeded().\n> In the non-readback case, we don't schedule begin frame while the surface is\n> lost.\n> \n> Can this if block just go away? Feel free to dcheck !output_surface_lost_ in\n> LTH::UpdateLayers() if you want..\n> \n> If this can go away, I think the LTH::HasOutputSurface() method can go away as\n> well (once LTH::had_output_surface_ goes too).\n\nAll true. Done done done.","draft":false,"lineno":671,"date":"2013-04-22 23:32:05.646590","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> s/Context/OutputSurface/\n\nDone.","draft":false,"lineno":1100,"date":"2013-04-22 23:32:05.646750","left":false}],"id":106016,"is_binary":false},"cc/scheduler/scheduler.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":5,"num_removed":5,"messages":[],"id":106001,"is_binary":false},"cc/test/fake_proxy.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":8,"num_removed":5,"messages":[],"id":106007,"is_binary":false},"cc/scheduler/scheduler.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":2,"messages":[],"id":106002,"is_binary":false},"cc/scheduler/scheduler_unittest.cc":{"status":"M","num_chunks":14,"no_base_file":false,"property_changes":"","num_added":33,"num_removed":5,"messages":[],"id":106006,"is_binary":false},"cc/scheduler/scheduler_state_machine_unittest.cc":{"status":"M","num_chunks":38,"no_base_file":false,"property_changes":"","num_added":88,"num_removed":11,"messages":[{"author":"danakj","author_email":"danakj@chromium.org","text":"Should you just do this CanBeginFrame/CreateOutputSurface dance once at the start of the test? The surface isn't being lost in this test.","draft":false,"lineno":387,"date":"2013-04-22 18:03:41.532690","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Do you need to do it again here?","draft":false,"lineno":413,"date":"2013-04-22 18:03:41.532880","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Same question here and on the next test below.","draft":false,"lineno":458,"date":"2013-04-22 18:03:41.533070","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Can you add a unit test that verifies NextAction() is what we expect it to be before calling UpdateState() like this? And that NextAction() changes appropriately then after DidCreateOS()?","draft":false,"lineno":724,"date":"2013-04-22 18:03:41.533240","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Can you verify what NextAction() is before calling DidLoseOS()? So we can see it changes to BEGIN_O_S_CREATION afterward.","draft":false,"lineno":729,"date":"2013-04-22 18:03:41.533400","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Same here please verify NextAction()","draft":false,"lineno":756,"date":"2013-04-22 18:03:41.533550","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Should you just do this CanBeginFrame/CreateOutputSurface dance once at the\n> start of the test? The surface isn't being lost in this test.\n\nA new state machine is created in each loop. I don't think I can move this any earlier.\n\nAre you proposing re-using the same object in each loop?","draft":false,"lineno":387,"date":"2013-04-22 23:32:05.638760","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Can you add a unit test that verifies NextAction() is what we expect it to be\n> before calling UpdateState() like this? And that NextAction() changes\n> appropriately then after DidCreateOS()?\n\nDone.","draft":false,"lineno":724,"date":"2013-04-22 23:32:05.638980","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Can you verify what NextAction() is before calling DidLoseOS()? So we can see it\n> changes to BEGIN_O_S_CREATION afterward.\n\nVerify it's not BEGIN_O_S_CREATION","draft":false,"lineno":729,"date":"2013-04-22 23:32:05.639140","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Same here please verify NextAction()\n\nDone.","draft":false,"lineno":756,"date":"2013-04-22 23:32:05.639500","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"On 2013/04/22 23:32:05, boliu wrote:\n> On 2013/04/22 18:03:41, danakj wrote:\n> > Should you just do this CanBeginFrame/CreateOutputSurface dance once at the\n> > start of the test? The surface isn't being lost in this test.\n> \n> A new state machine is created in each loop. I don't think I can move this any\n> earlier.\n> \n> Are you proposing re-using the same object in each loop?\n\nOh, I didn't notice that :) Never mind my comment here.","draft":false,"lineno":387,"date":"2013-04-23 18:22:40.052410","left":false}],"id":106005,"is_binary":false},"cc/trees/single_thread_proxy.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":8,"messages":[],"id":106015,"is_binary":false},"cc/scheduler/scheduler_state_machine.cc":{"status":"M","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":19,"num_removed":10,"messages":[{"author":"danakj","author_email":"danakj@chromium.org","text":"We should follow up with a rename for this variable, and the whole SetSurfaceReady() thing, I think. This is \"embedder ready\" or \"lth client ready\" really.","draft":false,"lineno":184,"date":"2013-04-22 18:03:41.531750","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Do you need can_begin_frame_ here? How about checking OUTPUT_SURFACE_ACTIVE instead? Since now, O_S_LOST doesn't imply that we report BEGIN_O_S_CREATION anymore.","draft":false,"lineno":197,"date":"2013-04-22 18:03:41.531950","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"This variable gets set true here, then stays true forever. So, we're SetNeedsCommit() when we create the first output surface, but not when we recreate after a loss? Why is that? We used to SetNeedsCommit() after a loss.","draft":false,"lineno":429,"date":"2013-04-22 18:03:41.532140","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> We should follow up with a rename for this variable, and the whole\n> SetSurfaceReady() thing, I think. This is \"embedder ready\" or \"lth client ready\"\n> really.\n\nRenamed this from Scheduler down to SetCanStart. Also removed the param, since nothing calls it with false.","draft":false,"lineno":184,"date":"2013-04-22 23:32:05.637610","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Do you need can_begin_frame_ here? How about checking OUTPUT_SURFACE_ACTIVE\n> instead? Since now, O_S_LOST doesn't imply that we report BEGIN_O_S_CREATION\n> anymore.\n\nBoth done.","draft":false,"lineno":197,"date":"2013-04-22 23:32:05.637850","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> This variable gets set true here, then stays true forever. So, we're\n> SetNeedsCommit() when we create the first output surface, but not when we\n> ecreate after a loss?\n\nWait, it should be the exact opposite. We are not setting need commit on first output surface create, but do set it on all recreates after.\n\n> Why is that?\n\nThis is to match old behavior, where first init used to be outside of scheduler creation and did not SetNeedsCommit.\n\nAlso note that LTH::DidStartOutputSurfaceCreation (name in current PS), it also calls SetNeedsCommit. These are duplicates but I'm guessing single_thread_proxy needs the LTH call. But there are also implications for deleting this line too, so I'm not sure if anything should be done about this.","draft":false,"lineno":429,"date":"2013-04-22 23:32:05.638070","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"On 2013/04/22 23:32:05, boliu wrote:\n> On 2013/04/22 18:03:41, danakj wrote:\n> > This variable gets set true here, then stays true forever. So, we're\n> > SetNeedsCommit() when we create the first output surface, but not when we\n> > ecreate after a loss?\n> \n> Wait, it should be the exact opposite. We are not setting need commit on first\n> output surface create, but do set it on all recreates after.\n\nOh, I misread that!\n\n> > Why is that?\n> \n> This is to match old behavior, where first init used to be outside of scheduler\n> creation and did not SetNeedsCommit.\n> \n> Also note that LTH::DidStartOutputSurfaceCreation (name in current PS), it also\n> calls SetNeedsCommit. These are duplicates but I'm guessing single_thread_proxy\n> needs the LTH call. But there are also implications for deleting this line too,\n> so I'm not sure if anything should be done about this.\n\nYa, DidStartOutputSurfaceCreation causes a commit in order to make sure the single thread proxy does its recreation since the embedder doesn't keep track of anything really beyond \"needs composite\".\n\nI guess the point here is that you are not allowed to begin frame until you've created/init one output surface+renderer. So there's nothing that needs to be re-committed after its created for the first time.\n\nI think once we get impl-side painting on all the time, maybe the main thread won't have to do any work when the renderer/surface changes, and we can just remove this SetNeedsCommit().\n\nI'm sad to see another bool in this already-too-many-bools class. But I also am not sure how to remove it without adding a useless SetNeedsCommit() during startup.","draft":false,"lineno":429,"date":"2013-04-23 18:22:40.052090","left":false}],"id":106003,"is_binary":false},"cc/scheduler/scheduler_state_machine.h":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":5,"num_removed":3,"messages":[{"author":"danakj","author_email":"danakj@chromium.org","text":"nit: DidCreateAndInitializeOutputSurface?","draft":false,"lineno":142,"date":"2013-04-22 18:03:41.532300","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"nit: HasInitializedOutputSurface?","draft":false,"lineno":143,"date":"2013-04-22 18:03:41.532460","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> nit: DidCreateAndInitializeOutputSurface?\n\nDone.","draft":false,"lineno":142,"date":"2013-04-22 23:32:05.638300","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> nit: HasInitializedOutputSurface?\n\nDone.","draft":false,"lineno":143,"date":"2013-04-22 23:32:05.638500","left":false}],"id":106004,"is_binary":false},"cc/trees/layer_tree_host.cc":{"status":"M","num_chunks":6,"no_base_file":false,"property_changes":"","num_added":72,"num_removed":74,"messages":[{"author":"danakj","author_email":"danakj@chromium.org","text":"I'd like this variable to go away, and I think it's possible. I've commented at each site what I think could replace it.","draft":false,"lineno":86,"date":"2013-04-22 18:03:41.534170","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Should this start true now? Then HasOutputSurface() can just check this variable.","draft":false,"lineno":87,"date":"2013-04-22 18:03:41.534330","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"If this is always true, then the method should not return a bool, and LTH::Create() should never return NULL.\n\nThat might be a rather large change of it's own, touching embedders etc, so probably makes sense as a followup patch.","draft":false,"lineno":126,"date":"2013-04-22 18:03:41.534510","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"It would make unit testing better if this was called always, but I realize that might mess with the current embedder implementations. Did you try it?","draft":false,"lineno":158,"date":"2013-04-22 18:03:41.534750","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"How about if (!contents_texture_manager) {} ?","draft":false,"lineno":175,"date":"2013-04-22 18:03:41.534920","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"No need for else when the if block returned.","draft":false,"lineno":194,"date":"2013-04-22 18:03:41.535120","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"Rename this WillRetryCreateOutputSurface() and call this always here. It will help you unit test failure recovery during the first initialization.","draft":false,"lineno":196,"date":"2013-04-22 18:03:41.535330","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"What is the advantage of unifying this code if we don't allow it to retry the same way? I don't think we want the !had_output_surface_ here.","draft":false,"lineno":202,"date":"2013-04-22 18:03:41.535530","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"how about just if (contents_texture_manager_)","draft":false,"lineno":221,"date":"2013-04-22 18:03:41.535800","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"if (!output_surface_lost_) ?","draft":false,"lineno":503,"date":"2013-04-22 18:03:41.536070","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"I think this if can just go away. The LTHI will early out as appropriate.\n\n(And it would be nice to minimize our dependence on had_output_surface_ so we can see what is really depending on it)","draft":false,"lineno":525,"date":"2013-04-22 18:03:41.536340","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> I'd like this variable to go away, and I think it's possible. I've commented at\n> each site what I think could replace it.\n\nDone. Had to fix some tests but had_output_surface_ is no more.","draft":false,"lineno":86,"date":"2013-04-22 23:32:05.640270","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Should this start true now? Then HasOutputSurface() can just check this\n> variable.\n\nDone.","draft":false,"lineno":87,"date":"2013-04-22 23:32:05.640550","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> If this is always true, then the method should not return a bool, and\n> LTH::Create() should never return NULL.\n> \n> That might be a rather large change of it's own, touching embedders etc, so\n> probably makes sense as a followup patch.\n\nLeft a TODO","draft":false,"lineno":126,"date":"2013-04-22 23:32:05.640810","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> It would make unit testing better if this was called always, but I realize that\n> might mess with the current embedder implementations. Did you try it?\n\nAndroid and ui compositors are no-ops, render widget only calls out to webkit if it failed so safe from embedder persective.","draft":false,"lineno":158,"date":"2013-04-22 23:32:05.641040","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> How about if (!contents_texture_manager) {} ?\n\nDone.","draft":false,"lineno":175,"date":"2013-04-22 23:32:05.641260","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> No need for else when the if block returned.\n\nDone.","draft":false,"lineno":194,"date":"2013-04-22 23:32:05.641630","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Rename this WillRetryCreateOutputSurface() and call this always here. It will\n> help you unit test failure recovery during the first initialization.\n\nDone.","draft":false,"lineno":196,"date":"2013-04-22 23:32:05.641870","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> What is the advantage of unifying this code if we don't allow it to retry the\n> same way? I don't think we want the !had_output_surface_ here.\n\nDone. My original thought was don't introduce additional behavior changes, but this patch already is a mix bag of changes.\n\nThis change might break more linux_chromeos tests. I was told that it is intentional to have the renderer compositor fail on linux_chromeos. This will delay the failure message by 5 retries.","draft":false,"lineno":202,"date":"2013-04-22 23:32:05.642130","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> how about just if (contents_texture_manager_)\n\nDone.","draft":false,"lineno":221,"date":"2013-04-22 23:32:05.642330","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> if (!output_surface_lost_) ?\n\nThis depends on output_surface_lost_ defaulting to true. Done","draft":false,"lineno":503,"date":"2013-04-22 23:32:05.642570","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> I think this if can just go away. The LTHI will early out as appropriate.\n> \n> (And it would be nice to minimize our dependence on had_output_surface_ so we\n> can see what is really depending on it)\n\nDone.","draft":false,"lineno":525,"date":"2013-04-22 23:32:05.642820","left":false}],"id":106009,"is_binary":false},"cc/trees/layer_tree_host.h":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":8,"num_removed":8,"messages":[{"author":"danakj","author_email":"danakj@chromium.org","text":"OnCreateAndInitializeOutputSurfaceAttempted()","draft":false,"lineno":125,"date":"2013-04-22 18:03:41.536500","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> OnCreateAndInitializeOutputSurfaceAttempted()\n\nDone.","draft":false,"lineno":125,"date":"2013-04-22 23:32:05.643010","left":false}],"id":106010,"is_binary":false},"cc/trees/thread_proxy.h":{"status":"M","num_chunks":6,"no_base_file":false,"property_changes":"","num_added":17,"num_removed":24,"messages":[{"author":"danakj","author_email":"danakj@chromium.org","text":"has_renderer_capabilities_on_main_thread?","draft":false,"lineno":197,"date":"2013-04-22 18:03:41.539260","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> has_renderer_capabilities_on_main_thread?\n\nJames suggested that has_cap makes no sense after output surface is lost.","draft":false,"lineno":197,"date":"2013-04-22 23:32:05.646920","left":false}],"id":106017,"is_binary":false},"cc/trees/single_thread_proxy.cc":{"status":"M","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":42,"num_removed":53,"messages":[{"author":"danakj","author_email":"danakj@chromium.org","text":"Why doesn't this call DidStartOutputSurfaceCreation() like the thread proxy? Should we test that?","draft":false,"lineno":103,"date":"2013-04-22 18:03:41.536830","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"I don't think this needs to be inside the if(had_renderer_caps) block. LTH does the right thing. And this implicitly ties the proxy \"had_renderer_capabilities\" to state in the LTH which I dislike. Can we just call this always when we get this far? Maybe do this just before InitializeRenderer()?","draft":false,"lineno":130,"date":"2013-04-22 18:03:41.536990","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"I think this if() isn't serving much purpose, can we remove it and just call set_offscreen_c_p() always here? We'll always have one thanks to the early-out above if we're supposed to have one. And setting it to NULL when we don't is fine.","draft":false,"lineno":147,"date":"2013-04-22 18:03:41.537150","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"else if(offscreen_context_provider) is enough.","draft":false,"lineno":151,"date":"2013-04-22 18:03:41.537300","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> Why doesn't this call DidStartOutputSurfaceCreation() like the thread proxy?\n> Should we test that?\n\nI think it's because single thread proxy recreates output surface as a result of SetNeedsCommit, so there is no need to call SetNeedsCommit again. Also there is no retry on failure logic.","draft":false,"lineno":103,"date":"2013-04-22 23:32:05.643600","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> I don't think this needs to be inside the if(had_renderer_caps) block. LTH does\n> the right thing. And this implicitly ties the proxy \"had_renderer_capabilities\"\n> to state in the LTH which I dislike. Can we just call this always when we get\n> this far? Maybe do this just before InitializeRenderer()?\n\nDone.\n\nAlso removed the had_renderer_capabilities check above since it's redundant as well.\n","draft":false,"lineno":130,"date":"2013-04-22 23:32:05.643840","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> I think this if() isn't serving much purpose, can we remove it and just call\n> set_offscreen_c_p() always here? We'll always have one thanks to the early-out\n> above if we're supposed to have one. And setting it to NULL when we don't is\n> fine.\n\nDone.","draft":false,"lineno":147,"date":"2013-04-22 23:32:05.644030","left":false},{"author":"boliu","author_email":"boliu@chromium.org","text":"On 2013/04/22 18:03:41, danakj wrote:\n> else if(offscreen_context_provider) is enough.\n\nDone.\n\nWith all the clean up in this function, it looks a lot like ThreadProxy::InitializeContextOnImplThread (name in this PS). Is it a good idea to try to move this into the common superclass?","draft":false,"lineno":151,"date":"2013-04-22 23:32:05.644260","left":false},{"author":"danakj","author_email":"danakj@chromium.org","text":"On 2013/04/22 23:32:05, boliu wrote:\n> On 2013/04/22 18:03:41, danakj wrote:\n> > else if(offscreen_context_provider) is enough.\n> \n> Done.\n> \n> With all the clean up in this function, it looks a lot like\n> ThreadProxy::InitializeContextOnImplThread (name in this PS). Is it a good idea\n> to try to move this into the common superclass?\n\nI wanna say no, this class is going to just be deleted at some point, and there may be subtle differences, and debug scoping things.","draft":false,"lineno":151,"date":"2013-04-23 18:22:40.052740","left":false}],"id":106014,"is_binary":false},"cc/trees/layer_tree_host_unittest.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":5,"messages":[],"id":106011,"is_binary":false}},"owner_email":"boliu@chromium.org","owner":"boliu","message":"Clean ups","try_job_results":[{"parent_name":null,"tests":[],"slave":"slave352-c4","url":"http://build.chromium.org/p/tryserver.chromium/builders/linux_rel/builds/119088","timestamp":"2013-04-22 03:02:46.775618","builder":"linux_rel","clobber":false,"project":"Chromium Try Server","reason":"","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIyCxIFSXNzdWUYoND9BQwLEghQYXRjaFNldBiptAYMCxIMVHJ5Sm9iUmVzdWx0GKu0Bgw","requester":"boliu@chromium.org","buildnumber":"119088","revision":"195426"},{"parent_name":null,"tests":[],"slave":"slave392-c4","url":"http://build.chromium.org/p/tryserver.chromium/builders/linux_chromeos/builds/105133","timestamp":"2013-04-22 03:00:42.000923","builder":"linux_chromeos","clobber":false,"project":"Chromium Try Server","reason":"","result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIyCxIFSXNzdWUYoND9BQwLEghQYXRjaFNldBiptAYMCxIMVHJ5Sm9iUmVzdWx0GKq0Bgw","requester":"boliu@chromium.org","buildnumber":"105133","revision":"195426"}],"created":"2013-04-22 02:11:30.137130","url":null,"num_comments":83,"modified":"2013-04-23 18:22:40.106040","patchset":105001,"issue":12544032}