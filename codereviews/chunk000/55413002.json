{"description":"Don't demote top match for certain match types.\n\nBUG=\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=232979","cc":["chromium-reviews@chromium.org","suzhe@chromium.org"],"reviewers":["pkasting@chromium.org","mpearson@chromium.org"],"messages":[{"sender":"hfung@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"This is what I have so far to not demote the top suggestion as discussed earlier this week.  I'm sending this out now to see if there are objections to the approach.  I'll add tests tomorrow.","disapproval":false,"date":"2013-10-31 23:15:18.414600","approval":false},{"sender":"pkasting@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"https://codereview.chromium.org/55413002/diff/20001/chrome/browser/autocomplete/autocomplete_result.cc\nFile chrome/browser/autocomplete/autocomplete_result.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/20001/chrome/browser/autocomplete/autocomplete_result.cc#newcode164\nchrome/browser/autocomplete/autocomplete_result.cc:164: matches_.begin()->demoteable = false;\nIs this basically only used by code called from the block below?\n\nBecause if so, rather than add a new member to AutocompleteMatch, perhaps we could simply pull off the front match here, run the sort/demote on the rest, and then put the front match back.","disapproval":false,"date":"2013-10-31 23:27:59.010560","approval":false},{"sender":"hfung@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"I've added tests now.  PTAL.\n\nhttps://codereview.chromium.org/55413002/diff/20001/chrome/browser/autocomplete/autocomplete_result.cc\nFile chrome/browser/autocomplete/autocomplete_result.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/20001/chrome/browser/autocomplete/autocomplete_result.cc#newcode164\nchrome/browser/autocomplete/autocomplete_result.cc:164: matches_.begin()->demoteable = false;\nOn 2013/10/31 23:27:59, Peter Kasting wrote:\n> Is this basically only used by code called from the block below?\n> \n> Because if so, rather than add a new member to AutocompleteMatch, perhaps we\n> could simply pull off the front match here, run the sort/demote on the rest, and\n> then put the front match back.\n\nYes, thanks.  I've made the change.","disapproval":false,"date":"2013-11-01 23:42:56.440970","approval":false},{"sender":"mpearson@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"https://codereview.chromium.org/55413002/diff/110001/chrome/browser/autocomplete/autocomplete_result.cc\nFile chrome/browser/autocomplete/autocomplete_result.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/110001/chrome/browser/autocomplete/autocomplete_result.cc#newcode156\nchrome/browser/autocomplete/autocomplete_result.cc:156: size_t max_num_matches = std::min(kMaxMatches, matches_.size());\nCan you put this \"don't demote top match under certain conditions\" logic in the ComparingObject somehow?\n\nThe reason for my request is that ComparingObject is used in two places.  You've corrected to make one not do the demotion.  I'm not sure if you noticed the other place, a place you didn't change.  See line 334.\n\nI'd prefer the logic in ComparingObject but if you can't manage to do that you can put logic as necessary around line 334.  (Logic may or may not actually be necessary; I haven't thought about it.  Regardless, something needs to go there, if only a comment explaining why nothing is needed there.)\n\nhttps://codereview.chromium.org/55413002/diff/110001/chrome/browser/omnibox/omnibox_field_trial.cc\nFile chrome/browser/omnibox/omnibox_field_trial.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/110001/chrome/browser/omnibox/omnibox_field_trial.cc#newcode276\nchrome/browser/omnibox/omnibox_field_trial.cc:276: std::vector<std::string> types;\nPlease explicitly comment on the format for the value of the rule and what the value means, a la lines 247-251.","disapproval":false,"date":"2013-11-04 18:47:55.785170","approval":false},{"sender":"hfung@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"https://codereview.chromium.org/55413002/diff/110001/chrome/browser/autocomplete/autocomplete_result.cc\nFile chrome/browser/autocomplete/autocomplete_result.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/110001/chrome/browser/autocomplete/autocomplete_result.cc#newcode156\nchrome/browser/autocomplete/autocomplete_result.cc:156: size_t max_num_matches = std::min(kMaxMatches, matches_.size());\nOn 2013/11/04 18:47:56, Mark P wrote:\n> Can you put this \"don't demote top match under certain conditions\" logic in the\n> ComparingObject somehow?\n\nI think that would require CompareWithDemoteByType to know whether AutocompleteMatch was the first match.  I originally added an extra variable in AutocompleteMatch but Peter suggested removing it.  (I think both solutions are kind of messy)\n\n> The reason for my request is that ComparingObject is used in two places.  You've\n> corrected to make one not do the demotion.  I'm not sure if you noticed the\n> other place, a place you didn't change.  See line 334.\n> \n> I'd prefer the logic in ComparingObject but if you can't manage to do that you\n> can put logic as necessary around line 334.  (Logic may or may not actually be\n> necessary; I haven't thought about it.  Regardless, something needs to go there,\n> if only a comment explaining why nothing is needed there.)\n\nComment added.  I only found one non-test where AddMatch is called (CopyOldMatches calls MergeMatchesByProvider calls AddMatch, and CopyOldMatches calls SortAndCull afterwards)\n\nhttps://codereview.chromium.org/55413002/diff/110001/chrome/browser/omnibox/omnibox_field_trial.cc\nFile chrome/browser/omnibox/omnibox_field_trial.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/110001/chrome/browser/omnibox/omnibox_field_trial.cc#newcode276\nchrome/browser/omnibox/omnibox_field_trial.cc:276: std::vector<std::string> types;\nOn 2013/11/04 18:47:56, Mark P wrote:\n> Please explicitly comment on the format for the value of the rule and what the\n> value means, a la lines 247-251.\n\nDone.","disapproval":false,"date":"2013-11-04 19:44:08.250610","approval":false},{"sender":"mpearson@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"once you fix comments below (no need to wait for me to look at those fixes), lgtm, but please wait for Peter's okay too.\n\n--mark\n\nhttps://codereview.chromium.org/55413002/diff/300001/chrome/browser/autocomplete/autocomplete_result.cc\nFile chrome/browser/autocomplete/autocomplete_result.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/300001/chrome/browser/autocomplete/autocomplete_result.cc#newcode164\nchrome/browser/autocomplete/autocomplete_result.cc:164: undemotable_top_types.end();\nnit: parens around != please\n\nhttps://codereview.chromium.org/55413002/diff/300001/chrome/browser/autocomplete/autocomplete_result.cc#newcode337\nchrome/browser/autocomplete/autocomplete_result.cc:337: // this function is called.\nThis comment made me realize the comment in autocomplet_result.h by the declaration of AddMatch() is wrong:\n  // Adds a single match. The match is inserted at the appropriate position\n  // based on relevancy and display order. This is ONLY for use after\n  // SortAndCull() has been invoked, and preserves default_match_.\nCan you fix it and replace the last sentence of that comment with this sentence:\n // It preserves default_match_.\n(after all, it's never used after SortAndCull, only before)\n\nAs for the comment here, how about replacing your comment with this?\n(or combining your comment with this suggestion:)\n// GetUndemotableTopTypes() is not used here because we're only worried about preserving the top result when calculating the default match, which happens in SortAndCull().  Because AddMatch() does not change the default match, there is no need think about undemotable types here.\n\nhttps://codereview.chromium.org/55413002/diff/300001/chrome/browser/omnibox/omnibox_field_trial.cc\nFile chrome/browser/omnibox/omnibox_field_trial.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/300001/chrome/browser/omnibox/omnibox_field_trial.cc#newcode277\nchrome/browser/omnibox/omnibox_field_trial.cc:277: // AutocompleteMatchType::Type enums represented as an integer.\nPerhaps add something about demotion scores (refer to GetDemotionsByType) don't get applied to a top match if the top match is of a type on this list.","disapproval":false,"date":"2013-11-04 20:30:12.194830","approval":true},{"sender":"hfung@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"Thanks Mark for the quick comments.  I'm not sure your suggested changes to comments are all correct, though.  I also simplified the code that preserves the top match.  PTAL.\n\nhttps://codereview.chromium.org/55413002/diff/300001/chrome/browser/autocomplete/autocomplete_result.cc\nFile chrome/browser/autocomplete/autocomplete_result.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/300001/chrome/browser/autocomplete/autocomplete_result.cc#newcode164\nchrome/browser/autocomplete/autocomplete_result.cc:164: undemotable_top_types.end();\nOn 2013/11/04 20:30:12, Mark P wrote:\n> nit: parens around != please\n\nDone.\n\nhttps://codereview.chromium.org/55413002/diff/300001/chrome/browser/autocomplete/autocomplete_result.cc#newcode337\nchrome/browser/autocomplete/autocomplete_result.cc:337: // this function is called.\nOn 2013/11/04 20:30:12, Mark P wrote:\n> This comment made me realize the comment in autocomplet_result.h by the\n> declaration of AddMatch() is wrong:\n>   // Adds a single match. The match is inserted at the appropriate position\n>   // based on relevancy and display order. This is ONLY for use after\n>   // SortAndCull() has been invoked, and preserves default_match_.\n> Can you fix it and replace the last sentence of that comment with this sentence:\n>  // It preserves default_match_.\n> (after all, it's never used after SortAndCull, only before)\n\nActually, SortAndCull() is called both before and after AddMatch().   AutocompleteController::UpdateResult() calls SortAndCull() before CopyOldMatches() (which calls MergeMatchesByProvider() which calls AddMatch).  The only other caller to CopyOldMatches() is a test.\n\n> As for the comment here, how about replacing your comment with this?\n> (or combining your comment with this suggestion:)\n> // GetUndemotableTopTypes() is not used here because we're only worried about\n> preserving the top result when calculating the default match, which happens in\n> SortAndCull().  Because AddMatch() does not change the default match, there is\n> no need think about undemotable types here.\n\nI'm not sure that's true.  What |default_match_| points to is not changed here (even if the match is added to the top position), but |default_match_| can get reset in SortAndCull().\n\nhttps://codereview.chromium.org/55413002/diff/300001/chrome/browser/omnibox/omnibox_field_trial.cc\nFile chrome/browser/omnibox/omnibox_field_trial.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/300001/chrome/browser/omnibox/omnibox_field_trial.cc#newcode277\nchrome/browser/omnibox/omnibox_field_trial.cc:277: // AutocompleteMatchType::Type enums represented as an integer.\nOn 2013/11/04 20:30:12, Mark P wrote:\n> Perhaps add something about demotion scores (refer to GetDemotionsByType) don't\n> get applied to a top match if the top match is of a type on this list.\n\nDone.","disapproval":false,"date":"2013-11-04 21:39:56.955410","approval":false},{"sender":"mpearson@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"lgtm, but again please wait for Peter.  (I'll leave it up to him to debate the best explanation for those comments.)\n\nBTW, your code simplification in SortAndCull() is very nice.\n\n--mark","disapproval":false,"date":"2013-11-04 21:50:42.326830","approval":true},{"sender":"hfung@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"After some more testing, I realized there was a bug and uploaded a fix and modified a test.\nI was relying on the matches to be sorted before hand (it was, but it was using destination URL).\n\nOn 2013/11/04 21:50:42, Mark P wrote:\n> lgtm, but again please wait for Peter.  (I'll leave it up to him to debate the\n> best explanation for those comments.)\n> \n> BTW, your code simplification in SortAndCull() is very nice.\n\nThanks.  (It's partially because the original implementation wasn't very good. :)\n\n> \n> --mark","disapproval":false,"date":"2013-11-05 00:43:47.293080","approval":false},{"sender":"pkasting@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"LGTM\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result.cc\nFile chrome/browser/autocomplete/autocomplete_result.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result.cc#newcode162\nchrome/browser/autocomplete/autocomplete_result.cc:162: (undemotable_top_types.find(matches_.begin()->type) !=\nNit: Instead of using find(), use count() and check for the result being nonzero.\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result.cc#newcode168\nchrome/browser/autocomplete/autocomplete_result.cc:168: std::sort(preserve_top_match ? matches_.begin() + 1 : matches_.begin(),\nNit: Slightly briefer: matches.begin() + (preserve_top_match ? 1 : 0)\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result_unittest.cc\nFile chrome/browser/autocomplete/autocomplete_result_unittest.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result_unittest.cc#newcode383\nchrome/browser/autocomplete/autocomplete_result_unittest.cc:383: {\nNit: Rather than these sub-blocks, you could simply create |matches| as a 3-element vector, then modify matches[0], matches[1], and matches[2].  This would be both briefer and slightly more efficient (not that that matters...)\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result_unittest.cc#newcode412\nchrome/browser/autocomplete/autocomplete_result_unittest.cc:412: \"1:50\";  // 3 == HOME_PAGE\nNit: Since the '3' is not on the same physical line as the comment, this might actually be better as a single comment above these two statements.  Or just don't comment them -- if someone doesn't know what the \"3\" is, the \":\" and \":*\" and \"1:50\" and such aren't going to be clear either.\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/omnibox/omnibox_field_trial.cc\nFile chrome/browser/omnibox/omnibox_field_trial.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/omnibox/omnibox_field_trial.cc#newcode268\nchrome/browser/omnibox/omnibox_field_trial.cc:268: void OmniboxFieldTrial::GetUndemotableTopTypes(\nThis should return by value rather than outparam.  I assume you're trying to use outparams for efficiency reasons, but in this case the RVO should eliminate any performance difference, and this function reads better and would have simpler callsites with return-by-value.\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/omnibox/omnibox_field_trial.cc#newcode285\nchrome/browser/omnibox/omnibox_field_trial.cc:285: // downloaded from the server to be perfect.  There's no need for handle\nNit: for -> to (and fix above code also)","disapproval":false,"date":"2013-11-05 04:09:55.532390","approval":true},{"sender":"hfung@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"Thanks for the reviews!\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result.cc\nFile chrome/browser/autocomplete/autocomplete_result.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result.cc#newcode162\nchrome/browser/autocomplete/autocomplete_result.cc:162: (undemotable_top_types.find(matches_.begin()->type) !=\nOn 2013/11/05 04:09:55, Peter Kasting wrote:\n> Nit: Instead of using find(), use count() and check for the result being\n> nonzero.\n\nDone.  Actually, should ContainsKey() be used instead?  I won't do it now since I don't see it used too often and might commit this change soon.\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result.cc#newcode168\nchrome/browser/autocomplete/autocomplete_result.cc:168: std::sort(preserve_top_match ? matches_.begin() + 1 : matches_.begin(),\nOn 2013/11/05 04:09:55, Peter Kasting wrote:\n> Nit: Slightly briefer: matches.begin() + (preserve_top_match ? 1 : 0)\n\nDone.\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result_unittest.cc\nFile chrome/browser/autocomplete/autocomplete_result_unittest.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result_unittest.cc#newcode383\nchrome/browser/autocomplete/autocomplete_result_unittest.cc:383: {\nOn 2013/11/05 04:09:55, Peter Kasting wrote:\n> Nit: Rather than these sub-blocks, you could simply create |matches| as a\n> 3-element vector, then modify matches[0], matches[1], and matches[2].  This\n> would be both briefer and slightly more efficient (not that that matters...)\n\nDone.\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result_unittest.cc#newcode412\nchrome/browser/autocomplete/autocomplete_result_unittest.cc:412: \"1:50\";  // 3 == HOME_PAGE\nOn 2013/11/05 04:09:55, Peter Kasting wrote:\n> Nit: Since the '3' is not on the same physical line as the comment, this might\n> actually be better as a single comment above these two statements.  Or just\n> don't comment them -- if someone doesn't know what the \"3\" is, the \":\" and \":*\"\n> and \"1:50\" and such aren't going to be clear either.\n\nDone.  I kept the comment since HOME_PAGE is used below.\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/omnibox/omnibox_field_trial.cc\nFile chrome/browser/omnibox/omnibox_field_trial.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/omnibox/omnibox_field_trial.cc#newcode268\nchrome/browser/omnibox/omnibox_field_trial.cc:268: void OmniboxFieldTrial::GetUndemotableTopTypes(\nOn 2013/11/05 04:09:55, Peter Kasting wrote:\n> This should return by value rather than outparam.  I assume you're trying to use\n> outparams for efficiency reasons, but in this case the RVO should eliminate any\n> performance difference, and this function reads better and would have simpler\n> callsites with return-by-value.\n\nDone.\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/omnibox/omnibox_field_trial.cc#newcode285\nchrome/browser/omnibox/omnibox_field_trial.cc:285: // downloaded from the server to be perfect.  There's no need for handle\nOn 2013/11/05 04:09:55, Peter Kasting wrote:\n> Nit: for -> to (and fix above code also)\n\nDone.","disapproval":false,"date":"2013-11-05 06:11:26.735100","approval":false},{"sender":"commit-bot@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/hfung@chromium.org/55413002/700002","disapproval":false,"date":"2013-11-05 06:23:53.066260","approval":false},{"sender":"commit-bot@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"Retried try job too often on linux_aura for step(s) browser_tests\nhttp://build.chromium.org/p/tryserver.chromium/buildstatus?builder=linux_aura&number=93817","disapproval":false,"date":"2013-11-05 10:12:11.884890","approval":false},{"sender":"commit-bot@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/hfung@chromium.org/55413002/700002","disapproval":false,"date":"2013-11-05 11:26:09.517900","approval":false},{"sender":"commit-bot@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"Change committed as 232979","disapproval":false,"date":"2013-11-05 14:21:57.840680","approval":false},{"sender":"pkasting@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","bartn@chromium.org"],"text":"https://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result.cc\nFile chrome/browser/autocomplete/autocomplete_result.cc (right):\n\nhttps://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result.cc#newcode162\nchrome/browser/autocomplete/autocomplete_result.cc:162: (undemotable_top_types.find(matches_.begin()->type) !=\nOn 2013/11/05 06:11:27, H Fung wrote:\n> On 2013/11/05 04:09:55, Peter Kasting wrote:\n> > Nit: Instead of using find(), use count() and check for the result being\n> > nonzero.\n> \n> Done.  Actually, should ContainsKey() be used instead?  I won't do it now since\n> I don't see it used too often and might commit this change soon.\n\nFrom stl_util.h?  I don't really know why we have that -- it's not particularly shorter, less complicated, or more efficient than using count().  We should probably just remove that.\n\nThe only advantage I could see would be if this supports more containers than expose count(), and thus makes code a bit more \"type-agnostic\" in case the container type is changed later.","disapproval":false,"date":"2013-11-05 20:00:33.628900","approval":false},{"sender":"bartn@chromium.org","recipients":["hfung@chromium.org","pkasting@chromium.org","mpearson@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org"],"text":"On 2013/11/05 20:00:33, Peter Kasting wrote:\n> https://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result.cc\n> File chrome/browser/autocomplete/autocomplete_result.cc (right):\n> \n> https://codereview.chromium.org/55413002/diff/420001/chrome/browser/autocomplete/autocomplete_result.cc#newcode162\n> chrome/browser/autocomplete/autocomplete_result.cc:162:\n> (undemotable_top_types.find(matches_.begin()->type) !=\n> On 2013/11/05 06:11:27, H Fung wrote:\n> > On 2013/11/05 04:09:55, Peter Kasting wrote:\n> > > Nit: Instead of using find(), use count() and check for the result being\n> > > nonzero.\n> > \n> > Done.  Actually, should ContainsKey() be used instead?  I won't do it now\n> since\n> > I don't see it used too often and might commit this change soon.\n> \n> From stl_util.h?  I don't really know why we have that -- it's not particularly\n> shorter, less complicated, or more efficient than using count().  We should\n> probably just remove that.\n> \n> The only advantage I could see would be if this supports more containers than\n> expose count(), and thus makes code a bit more \"type-agnostic\" in case the\n> container type is changed later.\nUsing count() here is a perfect example of bad coding. I'll save my time of explaining why, but we can chat offline :)","disapproval":false,"date":"2013-11-05 20:52:47.211790","approval":false}],"owner_email":"hfung@chromium.org","private":false,"base_url":"https://chromium.googlesource.com/chromium/src.git@master","owner":"H Fung","subject":"Don't demote top match for certain match types.","created":"2013-10-31 22:31:22.082630","patchsets":[20001,110001,300001,420001,630001,700002],"modified":"2013-11-05 20:52:47.605700","closed":true,"commit":false,"issue":55413002}