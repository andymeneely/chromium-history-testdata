{"description":"First stab at touch optimized omnibox auto-complete per sgabriel's mocks.\n\nThis builds on varunjain@'s work from r75157 and r75414 that\nrefactored the auto-complete classes to allow subclasses like this,\nand introduced a subclass based on older mocks.  I think the code had\nat some point been disconnected and it had bitrotted a little, but\nmostly it still worked.\n\nBUG=126132,125547\n\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=137009","cc":["chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"reviewers":["pkasting@chromium.org","sky@chromium.org"],"messages":[{"sender":"joi@chromium.org","recipients":["joi@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"","disapproval":false,"date":"2012-05-04 17:20:27.203259","approval":false},{"sender":"sky@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Peter should review this one.","disapproval":false,"date":"2012-05-04 19:06:43.629355","approval":false},{"sender":"pkasting@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"http://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc#newcode26\nchrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc:26: #include \"ui/base/layout.h\"\nNit: I think this goes below the next #include?\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc#newcode83\nchrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc:83: AutocompletePopupContentsView::CreateForEnvironment(\nNit: Indent 4\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc#newcode89\nchrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc:89: switch (ui::GetDisplayLayout()) {\nNit: Use if/else rather than switch\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_result_view.h\nFile chrome/browser/ui/views/autocomplete/autocomplete_result_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_result_view.h#newcode92\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.h:92: // Default values cached here, may be overridden by subclasses.\nNit: The Google style guide says to use overrideable accessors or else setters rather than exposing data members to subclasses directly.\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode18\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:18: // Colors for a light-gray 3D-looking divider made up of two lines.\nIt's not safe to use hardcoded colors because everything else in the omnibox uses shades of system colors.\n\nYou can try to adjust these based on the background color but it's going to be tricky to make this look right.  Perhaps you want to use some of the predefined system colors for 3D objects?\n\nNit: Define these in the function that uses them and use SkColorSetRGB().\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode51\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:51: if (!description)\nNit: if (match.description.empty()) { ... } else { ... }\n\nThis avoids the temp and shortens this stuff a bit\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode71\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:71: // need to adjust the bounds when there are two lines.\nDon't we need to do this all the time, not just when there's a description?  Otherwise won't the icon paint in the top half of the box when we have a single centered line?\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode74\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:74: 2 + minimum_text_vertical_padding_);\nNit: The linebreak makes it look as if you're dividing by \"2 + x\" rather than dividing by 2, then adding.  Break/indent differently?\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h#newcode31\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h:31: using AutocompleteResultView::GetState;\nNit: I tend to prefer avoiding using statements, and I think they may be banned entirely in headers anyway.  (Plus it doesn't look like you actually need this in the .cc file?)","disapproval":false,"date":"2012-05-04 23:33:31.059973","approval":false},{"sender":"joi@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Peter, thanks for the thorough review.\n\nI wanted to address some of the points you raised right away by email.  Will address the nits and upload a new version of the patch when I have a bit more time.\n\nCheers,\nJÃ³i\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_result_view.h\nFile chrome/browser/ui/views/autocomplete/autocomplete_result_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_result_view.h#newcode92\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.h:92: // Default values cached here, may be overridden by subclasses.\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> Nit: The Google style guide says to use overrideable accessors or else setters\n> rather than exposing data members to subclasses directly.\n\nWanted to avoid the virtual methods since these get accessed a lot.  I guess I'll make these private and add protected setters to comply with that bit of the style guide.\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode18\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:18: // Colors for a light-gray 3D-looking divider made up of two lines.\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> It's not safe to use hardcoded colors because everything else in the omnibox\n> uses shades of system colors.\n> \n> You can try to adjust these based on the background color but it's going to be\n> tricky to make this look right.  Perhaps you want to use some of the predefined\n> system colors for 3D objects?\n> \n> Nit: Define these in the function that uses them and use SkColorSetRGB().\n\nGood point, will look into using the system colors.\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode71\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:71: // need to adjust the bounds when there are two lines.\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> Don't we need to do this all the time, not just when there's a description? \n> Otherwise won't the icon paint in the top half of the box when we have a single\n> centered line?\n\nThe default case is that it's centered on the whole results item, i.e. centered on GetContentBounds().\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h#newcode31\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h:31: using AutocompleteResultView::GetState;\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> Nit: I tend to prefer avoiding using statements, and I think they may be banned\n> entirely in headers anyway.  (Plus it doesn't look like you actually need this\n> in the .cc file?)\n\nThis one is just to make the method public in this subclass instead of protected as it is in the base.\n\nThere are two other alternatives, I felt this one was neatest.  The others are:\n\na) Add a [ friend class TouchAutocompletePopupContentsView ] declaration.  This exposes more of the object than necessary;\n\nb) Spell out what the using clause does, i.e. add a method like\n\nAutocompleteResultView::ResultViewState GetState() {\n  return AutocompleteResultView::GetState();\n}\n\nwhich I'm pretty sure is semantically identical to the using statement, just more statements of code and more work to maintain (when the function signature changes).\n\nWe've been using this type of using statement in several places in the code where subclasses (especially but I think not exclusively testing subclasses) need to change the access to some members.","disapproval":false,"date":"2012-05-04 23:52:19.718933","approval":false},{"sender":"joi@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Please take another look, I've addressed all comments.\n\nCheers,\nJÃ³i\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc#newcode26\nchrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc:26: #include \"ui/base/layout.h\"\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> Nit: I think this goes below the next #include?\n\nFixed here and checked other files to be sure there were no other instances of this.\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc#newcode83\nchrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc:83: AutocompletePopupContentsView::CreateForEnvironment(\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> Nit: Indent 4\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc#newcode89\nchrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc:89: switch (ui::GetDisplayLayout()) {\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> Nit: Use if/else rather than switch\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_result_view.h\nFile chrome/browser/ui/views/autocomplete/autocomplete_result_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/autocomplete_result_view.h#newcode92\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.h:92: // Default values cached here, may be overridden by subclasses.\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> Nit: The Google style guide says to use overrideable accessors or else setters\n> rather than exposing data members to subclasses directly.\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode18\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:18: // Colors for a light-gray 3D-looking divider made up of two lines.\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> It's not safe to use hardcoded colors because everything else in the omnibox\n> uses shades of system colors.\n> \n> You can try to adjust these based on the background color but it's going to be\n> tricky to make this look right.  Perhaps you want to use some of the predefined\n> system colors for 3D objects?\n> \n> Nit: Define these in the function that uses them and use SkColorSetRGB().\n\nI've switched to using system colors, am waiting to hear from sgabriel@ on which colors to use on Windows, and which hard-coded values to use on Aura.\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode51\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:51: if (!description)\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> Nit: if (match.description.empty()) { ... } else { ... }\n> \n> This avoids the temp and shortens this stuff a bit\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode71\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:71: // need to adjust the bounds when there are two lines.\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> Don't we need to do this all the time, not just when there's a description? \n> Otherwise won't the icon paint in the top half of the box when we have a single\n> centered line?\n\nAdded to the comment to explain why we don't need to do anything in the two-line case.\n\nhttp://codereview.chromium.org/10384007/diff/10/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode74\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:74: 2 + minimum_text_vertical_padding_);\nOn 2012/05/04 23:33:31, Peter Kasting wrote:\n> Nit: The linebreak makes it look as if you're dividing by \"2 + x\" rather than\n> dividing by 2, then adding.  Break/indent differently?\n\nDone.","disapproval":false,"date":"2012-05-07 16:26:18.718931","approval":false},{"sender":"pkasting@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h\nFile chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h#newcode43\nchrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h:43: AutocompletePopupContentsView(const gfx::Font& font,\nNit: This can become protected.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h#newcode49\nchrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h:49: // Call immediately after construction.\nNit: This can become private.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc\nFile chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode36\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:36: const int kMinimumTextVerticalPadding = 3;  // Default value, may be overridden.\nNit: Comment unnecessary given your comments on the members.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode549\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:549: edge_item_padding_ + ((icon->width() == default_icon_size_) ? 0 :\nNit: Wrap these lines as they were before (maintains linebreak after ? instead of :, as well as more clarity that the \"edge_item_padding_ +\" portion is not included in the ?: statement)\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode593\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:593: canvas->DrawBitmapInt(\nNit: Better than either old or new wrapping would be:\n\n    canvas->DrawBitmapInt(*GetIcon(), GetMirroredXForRect(icon_bounds_),\n                          icon_bounds_.y());\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode24\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:24: top_color = color_utils::GetSysSkColor(COLOR_3DDKSHADOW);\nMake sure that the colors you choose are guaranteed to look good with COLOR_WINDOW as the background; I think the values you've chosen are probably only guaranteed to look good with COLOR_3DFACE as the background.  In fact I may have misled you by suggesting system colors at all because I bet there's nothing that really means what you want.\n\nInstead, you may need to do this by calling LocationBarView::GetColor(ToolbarModel::NONE, LocationBarView::BACKGROUND) and tinting the results.  Make sure to take into account what to do on full-white and full-black backgrounds as well as whether you want the light-vs.-dark colors you use to be swapped on light-vs.-dark backgrounds.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode42\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:42: // Colors for a light-gray 3D-looking divider made up of two lines.\nNit: This can be removed\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode92\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:92: // We show the icon centered on the first line of content, so we\nNit: We show -> we want to show\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode95\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:95: // which places th eicon correctly when there are two lines.\nNit: th eicon -> the icon; are two lines -> is one line\n\nI confess, though, now that I understand how you're trying to lay things out, I wonder if it will look weird.  This will result in the icons not being evenly spaced from each other.  It seems like it'd be better to either always center the icon within the entire view, or else always place it on the \"first line\", and if there's only one line of text, place that on the \"first line\" as well instead of centering it vertically.  Either of these will result in evenly spaced icons and look better IMO.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode131\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:131: for (std::vector<View*>::const_iterator i(visible_children.begin() + 1);\nNit: I think it would be slightly better to iterate over all children, and draw lines (conditionally) at the top and bottom of the current view instead of at the (top - 1) and top of the current view.\n\nWhile this means we'd need to add conditionals to check for being on the first and last views, it would also make it more natural to say \"don't paint either line if we're hovered/selected\".  Your current code paints the \"top color\" line in all cases, which seems like a bug, and while it's fixable without reworking the loop structure, this way seemed clearer to me.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h#newcode31\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h:31: using AutocompleteResultView::GetState;\nNit: Now that I understand what you're doing here, I think you should instead make the parent class method public.\n\nThis is not only the least code, but it makes it the most clear to maintainers that the method is actually publicly accessible (at least by some potential callers).  I don't know if there are style rules about it but I think it's a bad idea for a subclass to change the visibility of a parent member except to make it more private.","disapproval":false,"date":"2012-05-07 21:03:12.409532","approval":false},{"sender":"joi@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"Hi, sorry, forgot to update my auto-responder to say that I would be\r\non a plane all day (I'm visiting MTV).  Will address these tomorrow\r\nonce I'm in the office.\r\n\r\nCheers,\r\nJÃ³i\r\n\r\n\r\nOn Mon, May 7, 2012 at 9:03 PM,  <pkasting@chromium.org> wrote:\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h\r\n> File\r\n> chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h\r\n> (right):\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h#newcode43\r\n> chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h:43:\r\n> AutocompletePopupContentsView(const gfx::Font& font,\r\n> Nit: This can become protected.\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h#newcode49\r\n> chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h:49:\r\n> // Call immediately after construction.\r\n> Nit: This can become private.\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc\r\n> File chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc\r\n> (right):\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode36\r\n> chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:36:\r\n> const int kMinimumTextVerticalPadding = 3; Â // Default value, may be\r\n> overridden.\r\n> Nit: Comment unnecessary given your comments on the members.\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode549\r\n> chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:549:\r\n> edge_item_padding_ + ((icon->width() == default_icon_size_) ? 0 :\r\n> Nit: Wrap these lines as they were before (maintains linebreak after ?\r\n> instead of :, as well as more clarity that the \"edge_item_padding_ +\"\r\n> portion is not included in the ?: statement)\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode593\r\n> chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:593:\r\n> canvas->DrawBitmapInt(\r\n> Nit: Better than either old or new wrapping would be:\r\n>\r\n> Â  Â canvas->DrawBitmapInt(*GetIcon(), GetMirroredXForRect(icon_bounds_),\r\n> Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â icon_bounds_.y());\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\r\n> File\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\r\n> (right):\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode24\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:24:\r\n> top_color = color_utils::GetSysSkColor(COLOR_3DDKSHADOW);\r\n> Make sure that the colors you choose are guaranteed to look good with\r\n> COLOR_WINDOW as the background; I think the values you've chosen are\r\n> probably only guaranteed to look good with COLOR_3DFACE as the\r\n> background. Â In fact I may have misled you by suggesting system colors\r\n> at all because I bet there's nothing that really means what you want.\r\n>\r\n> Instead, you may need to do this by calling\r\n> LocationBarView::GetColor(ToolbarModel::NONE,\r\n> LocationBarView::BACKGROUND) and tinting the results. Â Make sure to take\r\n> into account what to do on full-white and full-black backgrounds as well\r\n> as whether you want the light-vs.-dark colors you use to be swapped on\r\n> light-vs.-dark backgrounds.\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode42\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:42:\r\n>\r\n> // Colors for a light-gray 3D-looking divider made up of two lines.\r\n> Nit: This can be removed\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode92\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:92:\r\n> // We show the icon centered on the first line of content, so we\r\n> Nit: We show -> we want to show\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode95\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:95:\r\n> // which places th eicon correctly when there are two lines.\r\n> Nit: th eicon -> the icon; are two lines -> is one line\r\n>\r\n> I confess, though, now that I understand how you're trying to lay things\r\n> out, I wonder if it will look weird. Â This will result in the icons not\r\n> being evenly spaced from each other. Â It seems like it'd be better to\r\n> either always center the icon within the entire view, or else always\r\n> place it on the \"first line\", and if there's only one line of text,\r\n> place that on the \"first line\" as well instead of centering it\r\n> vertically. Â Either of these will result in evenly spaced icons and look\r\n> better IMO.\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode131\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:131:\r\n> for (std::vector<View*>::const_iterator i(visible_children.begin() + 1);\r\n> Nit: I think it would be slightly better to iterate over all children,\r\n> and draw lines (conditionally) at the top and bottom of the current view\r\n> instead of at the (top - 1) and top of the current view.\r\n>\r\n> While this means we'd need to add conditionals to check for being on the\r\n> first and last views, it would also make it more natural to say \"don't\r\n> paint either line if we're hovered/selected\". Â Your current code paints\r\n> the \"top color\" line in all cases, which seems like a bug, and while\r\n> it's fixable without reworking the loop structure, this way seemed\r\n> clearer to me.\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h\r\n> File\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h\r\n> (right):\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h#newcode31\r\n>\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h:31:\r\n> using AutocompleteResultView::GetState;\r\n> Nit: Now that I understand what you're doing here, I think you should\r\n> instead make the parent class method public.\r\n>\r\n> This is not only the least code, but it makes it the most clear to\r\n> maintainers that the method is actually publicly accessible (at least by\r\n> some potential callers). Â I don't know if there are style rules about it\r\n> but I think it's a bad idea for a subclass to change the visibility of a\r\n> parent member except to make it more private.\r\n>\r\n> http://codereview.chromium.org/10384007/\r\n","disapproval":false,"date":"2012-05-08 01:57:52.304834","approval":false},{"sender":"joi@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Remove some redundant code.","disapproval":false,"date":"2012-05-10 18:32:29.030384","approval":false},{"sender":"joi@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Hi Peter,\n\nPlease take another look.\n\nI believe this addresses the stuff we talked about in person, as well as the issues listed below.  One thing I'm currently doing which is different from what we talked about, is using the text color as the basis for the separators, rather than the border color.  I'm doing this because (a) it turns out the border color isn't a color theme color but rather comes from a bitmap (that may be impacted by whichever theme you're using, I'm not sure), and there isn't a straight-forward way to retrieve this color.\n\nLet me know what you think.  I attached screenshots to http://crbug.com/126132 and would be happy as well to show this to you in person.\n\nOne note:  I wasn't sure how to test the EV cert state of the omnibox, but looking at the code it seems to share layout with the tab-to-search functionality, which I did test to make sure padding around the icons is consistent.\n\nI'm hoping to get this landed soon in something close to the current state so that it makes it into the builds folks are using to play with Metro, and then continue tweaking.  I will be getting updated assets (larger omnibox icons, maybe some other changes) from Sebastien today or tomorrow so some tweaks will be required at that time, but I'd rather land this as an interim step.\n\nCheers,\nJÃ³i\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h\nFile chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h#newcode43\nchrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h:43: AutocompletePopupContentsView(const gfx::Font& font,\nOn 2012/05/07 21:03:12, Peter Kasting wrote:\n> Nit: This can become protected.\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h#newcode49\nchrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h:49: // Call immediately after construction.\nOn 2012/05/07 21:03:12, Peter Kasting wrote:\n> Nit: This can become private.\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc\nFile chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode36\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:36: const int kMinimumTextVerticalPadding = 3;  // Default value, may be overridden.\nOn 2012/05/07 21:03:12, Peter Kasting wrote:\n> Nit: Comment unnecessary given your comments on the members.\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode549\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:549: edge_item_padding_ + ((icon->width() == default_icon_size_) ? 0 :\nOn 2012/05/07 21:03:12, Peter Kasting wrote:\n> Nit: Wrap these lines as they were before (maintains linebreak after ? instead\n> of :, as well as more clarity that the \"edge_item_padding_ +\" portion is not\n> included in the ?: statement)\n\nWent one step further and separated it out as a temporary, it was very hard to read regardless of indentation:\n\n\n  int icon_padding = (icon->width() == default_icon_size_) ?\n                      0 : LocationBarView::kIconInternalPadding;\n  icon_bounds_.SetRect(edge_item_padding_ + icon_padding,\n                       (height() - icon->height()) / 2,\n                       icon->width(),\n                       icon->height());\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode593\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:593: canvas->DrawBitmapInt(\nOn 2012/05/07 21:03:12, Peter Kasting wrote:\n> Nit: Better than either old or new wrapping would be:\n> \n>     canvas->DrawBitmapInt(*GetIcon(), GetMirroredXForRect(icon_bounds_),\n>                           icon_bounds_.y());\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode24\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:24: top_color = color_utils::GetSysSkColor(COLOR_3DDKSHADOW);\nOn 2012/05/07 21:03:12, Peter Kasting wrote:\n> Make sure that the colors you choose are guaranteed to look good with\n> COLOR_WINDOW as the background; I think the values you've chosen are probably\n> only guaranteed to look good with COLOR_3DFACE as the background.  In fact I may\n> have misled you by suggesting system colors at all because I bet there's nothing\n> that really means what you want.\n> \n> Instead, you may need to do this by calling\n> LocationBarView::GetColor(ToolbarModel::NONE, LocationBarView::BACKGROUND) and\n> tinting the results.  Make sure to take into account what to do on full-white\n> and full-black backgrounds as well as whether you want the light-vs.-dark colors\n> you use to be swapped on light-vs.-dark backgrounds.\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode24\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:24: top_color = color_utils::GetSysSkColor(COLOR_3DDKSHADOW);\nOn 2012/05/07 21:03:12, Peter Kasting wrote:\n> Make sure that the colors you choose are guaranteed to look good with\n> COLOR_WINDOW as the background; I think the values you've chosen are probably\n> only guaranteed to look good with COLOR_3DFACE as the background.  In fact I may\n> have misled you by suggesting system colors at all because I bet there's nothing\n> that really means what you want.\n> \n> Instead, you may need to do this by calling\n> LocationBarView::GetColor(ToolbarModel::NONE, LocationBarView::BACKGROUND) and\n> tinting the results.  Make sure to take into account what to do on full-white\n> and full-black backgrounds as well as whether you want the light-vs.-dark colors\n> you use to be swapped on light-vs.-dark backgrounds.\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode42\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:42: // Colors for a light-gray 3D-looking divider made up of two lines.\nOn 2012/05/07 21:03:12, Peter Kasting wrote:\n> Nit: This can be removed\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h#newcode31\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h:31: using AutocompleteResultView::GetState;\nOn 2012/05/07 21:03:12, Peter Kasting wrote:\n> Nit: Now that I understand what you're doing here, I think you should instead\n> make the parent class method public.\n> \n> This is not only the least code, but it makes it the most clear to maintainers\n> that the method is actually publicly accessible (at least by some potential\n> callers).  I don't know if there are style rules about it but I think it's a bad\n> idea for a subclass to change the visibility of a parent member except to make\n> it more private.\n\nDone.","disapproval":false,"date":"2012-05-10 18:33:07.458211","approval":false},{"sender":"joi@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"Friendly ping :)\r\n\r\nOn Thu, May 10, 2012 at 11:33 AM,  <joi@chromium.org> wrote:\r\n> Hi Peter,\r\n>\r\n> Please take another look.\r\n>\r\n> I believe this addresses the stuff we talked about in person, as well as the\r\n> issues listed below. Â One thing I'm currently doing which is different from\r\n> what\r\n> we talked about, is using the text color as the basis for the separators,\r\n> rather\r\n> than the border color. Â I'm doing this because (a) it turns out the border\r\n> color\r\n> isn't a color theme color but rather comes from a bitmap (that may be\r\n> impacted\r\n> by whichever theme you're using, I'm not sure), and there isn't a\r\n> straight-forward way to retrieve this color.\r\n>\r\n> Let me know what you think. Â I attached screenshots to\r\n> http://crbug.com/126132\r\n> and would be happy as well to show this to you in person.\r\n>\r\n> One note: Â I wasn't sure how to test the EV cert state of the omnibox, but\r\n> looking at the code it seems to share layout with the tab-to-search\r\n> functionality, which I did test to make sure padding around the icons is\r\n> consistent.\r\n>\r\n> I'm hoping to get this landed soon in something close to the current state\r\n> so\r\n> that it makes it into the builds folks are using to play with Metro, and\r\n> then\r\n> continue tweaking. Â I will be getting updated assets (larger omnibox icons,\r\n> maybe some other changes) from Sebastien today or tomorrow so some tweaks\r\n> will\r\n> be required at that time, but I'd rather land this as an interim step.\r\n>\r\n> Cheers,\r\n> JÃ³i\r\n>\r\n>\r\n>\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h\r\n> File\r\n> chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h\r\n> (right):\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h#newcode43\r\n> chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h:43:\r\n> AutocompletePopupContentsView(const gfx::Font& font,\r\n> On 2012/05/07 21:03:12, Peter Kasting wrote:\r\n>>\r\n>> Nit: This can become protected.\r\n>\r\n>\r\n> Done.\r\n>\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h#newcode49\r\n> chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.h:49:\r\n> // Call immediately after construction.\r\n> On 2012/05/07 21:03:12, Peter Kasting wrote:\r\n>>\r\n>> Nit: This can become private.\r\n>\r\n>\r\n> Done.\r\n>\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc\r\n> File chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc\r\n> (right):\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode36\r\n> chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:36:\r\n> const int kMinimumTextVerticalPadding = 3; Â // Default value, may be\r\n> overridden.\r\n> On 2012/05/07 21:03:12, Peter Kasting wrote:\r\n>>\r\n>> Nit: Comment unnecessary given your comments on the members.\r\n>\r\n>\r\n> Done.\r\n>\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode549\r\n> chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:549:\r\n> edge_item_padding_ + ((icon->width() == default_icon_size_) ? 0 :\r\n> On 2012/05/07 21:03:12, Peter Kasting wrote:\r\n>>\r\n>> Nit: Wrap these lines as they were before (maintains linebreak after ?\r\n>\r\n> instead\r\n>>\r\n>> of :, as well as more clarity that the \"edge_item_padding_ +\" portion\r\n>\r\n> is not\r\n>>\r\n>> included in the ?: statement)\r\n>\r\n>\r\n> Went one step further and separated it out as a temporary, it was very\r\n> hard to read regardless of indentation:\r\n>\r\n>\r\n> Â int icon_padding = (icon->width() == default_icon_size_) ?\r\n> Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â 0 : LocationBarView::kIconInternalPadding;\r\n> Â icon_bounds_.SetRect(edge_item_padding_ + icon_padding,\r\n> Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  (height() - icon->height()) / 2,\r\n> Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  icon->width(),\r\n> Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  icon->height());\r\n>\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode593\r\n> chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:593:\r\n> canvas->DrawBitmapInt(\r\n> On 2012/05/07 21:03:12, Peter Kasting wrote:\r\n>>\r\n>> Nit: Better than either old or new wrapping would be:\r\n>\r\n>\r\n>> Â  Â  canvas->DrawBitmapInt(*GetIcon(),\r\n>\r\n> GetMirroredXForRect(icon_bounds_),\r\n>>\r\n>> Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  icon_bounds_.y());\r\n>\r\n>\r\n> Done.\r\n>\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\r\n> File\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\r\n> (right):\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode24\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:24:\r\n> top_color = color_utils::GetSysSkColor(COLOR_3DDKSHADOW);\r\n> On 2012/05/07 21:03:12, Peter Kasting wrote:\r\n>>\r\n>> Make sure that the colors you choose are guaranteed to look good with\r\n>> COLOR_WINDOW as the background; I think the values you've chosen are\r\n>\r\n> probably\r\n>>\r\n>> only guaranteed to look good with COLOR_3DFACE as the background. Â In\r\n>\r\n> fact I may\r\n>>\r\n>> have misled you by suggesting system colors at all because I bet\r\n>\r\n> there's nothing\r\n>>\r\n>> that really means what you want.\r\n>\r\n>\r\n>> Instead, you may need to do this by calling\r\n>> LocationBarView::GetColor(ToolbarModel::NONE,\r\n>\r\n> LocationBarView::BACKGROUND) and\r\n>>\r\n>> tinting the results. Â Make sure to take into account what to do on\r\n>\r\n> full-white\r\n>>\r\n>> and full-black backgrounds as well as whether you want the\r\n>\r\n> light-vs.-dark colors\r\n>>\r\n>> you use to be swapped on light-vs.-dark backgrounds.\r\n>\r\n>\r\n> Done.\r\n>\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode24\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:24:\r\n> top_color = color_utils::GetSysSkColor(COLOR_3DDKSHADOW);\r\n> On 2012/05/07 21:03:12, Peter Kasting wrote:\r\n>>\r\n>> Make sure that the colors you choose are guaranteed to look good with\r\n>> COLOR_WINDOW as the background; I think the values you've chosen are\r\n>\r\n> probably\r\n>>\r\n>> only guaranteed to look good with COLOR_3DFACE as the background. Â In\r\n>\r\n> fact I may\r\n>>\r\n>> have misled you by suggesting system colors at all because I bet\r\n>\r\n> there's nothing\r\n>>\r\n>> that really means what you want.\r\n>\r\n>\r\n>> Instead, you may need to do this by calling\r\n>> LocationBarView::GetColor(ToolbarModel::NONE,\r\n>\r\n> LocationBarView::BACKGROUND) and\r\n>>\r\n>> tinting the results. Â Make sure to take into account what to do on\r\n>\r\n> full-white\r\n>>\r\n>> and full-black backgrounds as well as whether you want the\r\n>\r\n> light-vs.-dark colors\r\n>>\r\n>> you use to be swapped on light-vs.-dark backgrounds.\r\n>\r\n>\r\n> Done.\r\n>\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode42\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:42:\r\n> // Colors for a light-gray 3D-looking divider made up of two lines.\r\n> On 2012/05/07 21:03:12, Peter Kasting wrote:\r\n>>\r\n>> Nit: This can be removed\r\n>\r\n>\r\n> Done.\r\n>\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h\r\n> File\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h\r\n> (right):\r\n>\r\n> http://codereview.chromium.org/10384007/diff/8001/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h#newcode31\r\n> chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.h:31:\r\n> using AutocompleteResultView::GetState;\r\n> On 2012/05/07 21:03:12, Peter Kasting wrote:\r\n>>\r\n>> Nit: Now that I understand what you're doing here, I think you should\r\n>\r\n> instead\r\n>>\r\n>> make the parent class method public.\r\n>\r\n>\r\n>> This is not only the least code, but it makes it the most clear to\r\n>\r\n> maintainers\r\n>>\r\n>> that the method is actually publicly accessible (at least by some\r\n>\r\n> potential\r\n>>\r\n>> callers). Â I don't know if there are style rules about it but I think\r\n>\r\n> it's a bad\r\n>>\r\n>> idea for a subclass to change the visibility of a parent member except\r\n>\r\n> to make\r\n>>\r\n>> it more private.\r\n>\r\n>\r\n> Done.\r\n>\r\n> http://codereview.chromium.org/10384007/\r\n","disapproval":false,"date":"2012-05-11 17:35:09.778421","approval":false},{"sender":"joi@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Use stronger color.","disapproval":false,"date":"2012-05-11 22:08:19.137899","approval":false},{"sender":"pkasting@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"http://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc\nFile chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode180\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:180: colors[i][DIVIDER] = color_utils::AlphaBlend(colors[i][TEXT],\nNit: How about just:\n\n      // TODO(joi): Programmatically draw the dropdown border using this color\n      // as well.  (Right now it's drawn as black with 25% alpha.)\n      colors[i][DIVIDER] =\n          color_utils::AlphaBlend(colors[i][TEXT], colors[i][BACKGROUND], 0x34);\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode551\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:551: int icon_padding = (icon->width() == default_icon_size_) ?\nNit: Frankly I was OK with how it was before, just with |edge_item_padding_|\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode563\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:563: const int kw_collapsed_size = keyword_icon_->width() +\nNit: Wrap after '=' instead of '+'\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode566\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:566: const int kw_x = animation_->CurrentValueBetween(max_kw_x,\nNit: Wrap after '=' instead of ','\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode571\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:571: keyword_text_bounds_.SetRect(kw_text_x, 0, std::max(\nNit: Wrap before \"std::max(\" instead of after\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.h\nFile chrome/browser/ui/views/autocomplete/autocomplete_result_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.h#newcode133\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.h:133: // Default values cached here, may be overridden by subclasses.\nNit: \"...may be overridden by using the setters above.\"\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode87\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:87: // at the top of the next child.\nUff da.\n\nCan we just do normal-colored dividers between each row regardless of selection state?  This would make this code simpler, allow us to avoid making GetState() non-private, let us calculate the color here instead of adding a DIVIDER enum value, and probably still look fine (in fact, maybe better, as the current system looks a bit weird).\n\nEven if you really really like this color scheme, can we just loop over children (0, n-1) drawing a line at the bottom of each one based on the state of both children?  Note that this will also address a \"bug\" in the current code (IMO) where the border between a selected and a hovered cell matches whichever is on the bottom, where I think there should be a SELECTED > HOVERED > NORMAL precedence order.\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/location_bar/location_bar_view.cc\nFile chrome/browser/ui/views/location_bar/location_bar_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/location_bar/location_bar_view.cc#newcode313\nchrome/browser/ui/views/location_bar/location_bar_view.cc:313: if (ui::GetDisplayLayout() == ui::LAYOUT_TOUCH) {\nNit: No else after return; just do\n\n  return (ui::GetDisplayLayout() == ui::LAYOUT_TOUCH) ?\n      kTouchItemPadding : kDesktopItemPadding;\n\n(2 places)\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/location_bar/location_bar_view.h\nFile chrome/browser/ui/views/location_bar/location_bar_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/location_bar/location_bar_view.h#newcode323\nchrome/browser/ui/views/location_bar/location_bar_view.h:323: // Space between items in the location bar.\nNit: Methods above variables","disapproval":false,"date":"2012-05-11 23:01:40.835465","approval":false},{"sender":"joi@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Will address your nits later, but wanted to address one question right away.  Hoping you will LGTM modulo fixing the nits in question so that I can commit over the weekend, right now I have to run to the 5-year GreenBorder acquisition anniversary :)\n\nCheers,\nJÃ³i\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode87\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:87: // at the top of the next child.\nOn 2012/05/11 23:01:41, Peter Kasting wrote:\n> Uff da.\n> \n> Can we just do normal-colored dividers between each row regardless of selection\n> state?  This would make this code simpler, allow us to avoid making GetState()\n> non-private, let us calculate the color here instead of adding a DIVIDER enum\n> value, and probably still look fine (in fact, maybe better, as the current\n> system looks a bit weird).\n> \n> Even if you really really like this color scheme, can we just loop over children\n> (0, n-1) drawing a line at the bottom of each one based on the state of both\n> children?  Note that this will also address a \"bug\" in the current code (IMO)\n> where the border between a selected and a hovered cell matches whichever is on\n> the bottom, where I think there should be a SELECTED > HOVERED > NORMAL\n> precedence order.\n\nI tried with normal-colored dividers regardless of selection state, and it doesn't look as good.\n\nThe current code has the precedence order you are suggesting.  The reason I sometimes need to draw both top and bottom of the current child (and skip the top of the following child) is to get that precedence order, and to draw the divider on top of the right background color to blend with (if I draw it on the next child it will be blended with that child's background color, which won't look right).","disapproval":false,"date":"2012-05-11 23:09:24.356590","approval":false},{"sender":"joi@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Merge to LKGR (pure merge).","disapproval":false,"date":"2012-05-14 17:48:39.561932","approval":false},{"sender":"joi@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Respond to review comments.","disapproval":false,"date":"2012-05-14 18:28:51.211491","approval":false},{"sender":"joi@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"http://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc\nFile chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode180\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:180: colors[i][DIVIDER] = color_utils::AlphaBlend(colors[i][TEXT],\nOn 2012/05/11 23:01:41, Peter Kasting wrote:\n> Nit: How about just:\n> \n>       // TODO(joi): Programmatically draw the dropdown border using this color\n>       // as well.  (Right now it's drawn as black with 25% alpha.)\n>       colors[i][DIVIDER] =\n>           color_utils::AlphaBlend(colors[i][TEXT], colors[i][BACKGROUND], 0x34);\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode563\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:563: const int kw_collapsed_size = keyword_icon_->width() +\nOn 2012/05/11 23:01:41, Peter Kasting wrote:\n> Nit: Wrap after '=' instead of '+'\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode566\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:566: const int kw_x = animation_->CurrentValueBetween(max_kw_x,\nOn 2012/05/11 23:01:41, Peter Kasting wrote:\n> Nit: Wrap after '=' instead of ','\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode571\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:571: keyword_text_bounds_.SetRect(kw_text_x, 0, std::max(\nOn 2012/05/11 23:01:41, Peter Kasting wrote:\n> Nit: Wrap before \"std::max(\" instead of after\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.h\nFile chrome/browser/ui/views/autocomplete/autocomplete_result_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/autocomplete_result_view.h#newcode133\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.h:133: // Default values cached here, may be overridden by subclasses.\nOn 2012/05/11 23:01:41, Peter Kasting wrote:\n> Nit: \"...may be overridden by using the setters above.\"\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode87\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:87: // at the top of the next child.\nOn 2012/05/11 23:01:41, Peter Kasting wrote:\n> Uff da.\n> \n> Can we just do normal-colored dividers between each row regardless of selection\n> state?  This would make this code simpler, allow us to avoid making GetState()\n> non-private, let us calculate the color here instead of adding a DIVIDER enum\n> value, and probably still look fine (in fact, maybe better, as the current\n> system looks a bit weird).\n> \n> Even if you really really like this color scheme, can we just loop over children\n> (0, n-1) drawing a line at the bottom of each one based on the state of both\n> children?  Note that this will also address a \"bug\" in the current code (IMO)\n> where the border between a selected and a hovered cell matches whichever is on\n> the bottom, where I think there should be a SELECTED > HOVERED > NORMAL\n> precedence order.\n\nI've changed this code as per your suggestion, it's a lot simpler now but the visual end result is the same.\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/location_bar/location_bar_view.cc\nFile chrome/browser/ui/views/location_bar/location_bar_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/location_bar/location_bar_view.cc#newcode313\nchrome/browser/ui/views/location_bar/location_bar_view.cc:313: if (ui::GetDisplayLayout() == ui::LAYOUT_TOUCH) {\nOn 2012/05/11 23:01:41, Peter Kasting wrote:\n> Nit: No else after return; just do\n> \n>   return (ui::GetDisplayLayout() == ui::LAYOUT_TOUCH) ?\n>       kTouchItemPadding : kDesktopItemPadding;\n> \n> (2 places)\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/location_bar/location_bar_view.h\nFile chrome/browser/ui/views/location_bar/location_bar_view.h (right):\n\nhttp://codereview.chromium.org/10384007/diff/13017/chrome/browser/ui/views/location_bar/location_bar_view.h#newcode323\nchrome/browser/ui/views/location_bar/location_bar_view.h:323: // Space between items in the location bar.\nOn 2012/05/11 23:01:41, Peter Kasting wrote:\n> Nit: Methods above variables\n\nDone.","disapproval":false,"date":"2012-05-14 18:29:44.786883","approval":false},{"sender":"pkasting@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"LGTM, remaining comments are trivial formatting\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc\nFile chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode180\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:180: colors[i][DIVIDER] = color_utils::AlphaBlend(colors[i][TEXT],\nNit: I still think wrapping after '=' and putting the rest on one line (dropping the 20% comment, there's no magic significance to 20%) would be better.\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode551\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:551: int icon_padding = (icon->width() == default_icon_size_) ?\nNit: Still prefer the old code to this\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode572\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:572: kw_text_x, 0,\nNit: These two args can go on above line\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode574\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:574: text_height);\nNit: This arg can go on above line\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode93\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:93: \nNit: Extra newline (2 places)\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode95\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:95: std::max(child->GetState(), next_child->GetState());\nNit: Can just be inlined into next statement\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode102\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:102: divider_color);\nNit: This arg can fit on above line","disapproval":false,"date":"2012-05-14 20:16:20.988007","approval":true},{"sender":"joi@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Address review comments.","disapproval":false,"date":"2012-05-14 21:08:57.246987","approval":false},{"sender":"joi@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Thanks, committing.\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc\nFile chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode180\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:180: colors[i][DIVIDER] = color_utils::AlphaBlend(colors[i][TEXT],\nOn 2012/05/14 20:16:21, Peter Kasting wrote:\n> Nit: I still think wrapping after '=' and putting the rest on one line (dropping\n> the 20% comment, there's no magic significance to 20%) would be better.\n\nDone, sorry didn't notice that comment earlier.\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode551\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:551: int icon_padding = (icon->width() == default_icon_size_) ?\nOn 2012/05/14 20:16:21, Peter Kasting wrote:\n> Nit: Still prefer the old code to this\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode572\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:572: kw_text_x, 0,\nOn 2012/05/14 20:16:21, Peter Kasting wrote:\n> Nit: These two args can go on above line\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/autocomplete_result_view.cc#newcode574\nchrome/browser/ui/views/autocomplete/autocomplete_result_view.cc:574: text_height);\nOn 2012/05/14 20:16:21, Peter Kasting wrote:\n> Nit: This arg can go on above line\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc\nFile chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc (right):\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode93\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:93: \nOn 2012/05/14 20:16:21, Peter Kasting wrote:\n> Nit: Extra newline (2 places)\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode93\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:93: \nOn 2012/05/14 20:16:21, Peter Kasting wrote:\n> Nit: Extra newline (2 places)\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode95\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:95: std::max(child->GetState(), next_child->GetState());\nOn 2012/05/14 20:16:21, Peter Kasting wrote:\n> Nit: Can just be inlined into next statement\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode95\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:95: std::max(child->GetState(), next_child->GetState());\nOn 2012/05/14 20:16:21, Peter Kasting wrote:\n> Nit: Can just be inlined into next statement\n\nDone.\n\nhttp://codereview.chromium.org/10384007/diff/15004/chrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc#newcode102\nchrome/browser/ui/views/autocomplete/touch_autocomplete_popup_contents_view.cc:102: divider_color);\nOn 2012/05/14 20:16:21, Peter Kasting wrote:\n> Nit: This arg can fit on above line\n\nDone.","disapproval":false,"date":"2012-05-14 21:09:24.596714","approval":false},{"sender":"commit-bot@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/joi@chromium.org/10384007/21001","disapproval":false,"date":"2012-05-14 21:09:43.541515","approval":false},{"sender":"commit-bot@chromium.org","recipients":["joi@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","suzhe@chromium.org","varunjain@chromium.org","jamescook@chromium.org"],"text":"Change committed as 137009","disapproval":false,"date":"2012-05-14 23:39:12.774610","approval":false}],"owner_email":"joi@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"JÃ³i","subject":"First stab at touch optimized omnibox auto-complete per sgabriel's mocks.","created":"2012-05-04 17:04:02.310948","patchsets":[1,10,8001,13001,14001,13017,4004,15004,21001],"modified":"2012-05-14 23:39:13.028224","closed":true,"commit":false,"issue":10384007}