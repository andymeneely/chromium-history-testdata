{"files":{"chrome/browser/history/visit_database.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":5,"messages":[],"id":22009,"is_binary":false},"chrome/browser/history/url_index_private_data.cc":{"status":"M","num_chunks":21,"no_base_file":false,"property_changes":"","num_added":250,"num_removed":102,"messages":[{"author":"Peter Kasting","author_email":"pkasting@chromium.org","text":"Tiny nit: I probably wouldn't put anything other than the class name itself in any of these dividers","draft":false,"lineno":81,"date":"2013-03-15 02:23:43.245520","left":false},{"author":"Peter Kasting","author_email":"pkasting@chromium.org","text":"Nit: I think reserve() + using push_back() might be slightly cheaper than resize() + assignment.  (2 places)","draft":false,"lineno":334,"date":"2013-03-15 02:23:43.245840","left":false},{"author":"Peter Kasting","author_email":"pkasting@chromium.org","text":"Nit: removes; also you seem to be missing a preposition","draft":false,"lineno":343,"date":"2013-03-15 02:23:43.246170","left":false},{"author":"Peter Kasting","author_email":"pkasting@chromium.org","text":"We shouldn't have commented-out DCHECKs... did you need to comment this out for some reason?","draft":false,"lineno":721,"date":"2013-03-15 02:23:43.246540","left":false},{"author":"Mark P","author_email":"mpearson@chromium.org","text":"On 2013/03/15 02:23:43, Peter Kasting wrote:\n> Tiny nit: I probably wouldn't put anything other than the class name itself in\n> any of these dividers\n\nOkay.\n\nI did it originally because I thought labels such as\n// URLIndexPrivateData::AddHistoryMatch\nor\n// URLIndexPrivateData::HistoryItemFactorGreater\ncould easily be misread as a function not a class.","draft":false,"lineno":81,"date":"2013-03-18 23:42:53.353550","left":false},{"author":"Mark P","author_email":"mpearson@chromium.org","text":"On 2013/03/15 02:23:43, Peter Kasting wrote:\n> Nit: I think reserve() + using push_back() might be slightly cheaper than\n> resize() + assignment.  (2 places)\n\nI believe you're right.  Done in both places.","draft":false,"lineno":334,"date":"2013-03-18 23:42:53.353770","left":false},{"author":"Mark P","author_email":"mpearson@chromium.org","text":"On 2013/03/15 02:23:43, Peter Kasting wrote:\n> Nit: removes; also you seem to be missing a preposition\n\nDone.","draft":false,"lineno":343,"date":"2013-03-18 23:42:53.353980","left":false},{"author":"Mark P","author_email":"mpearson@chromium.org","text":"On 2013/03/15 02:23:43, Peter Kasting wrote:\n> We shouldn't have commented-out DCHECKs... did you need to comment this out for\n> some reason?\n\nGood point.  I forgot out this.\n\nI think I have to remove this DCHECK.  The motivation is right.  However, unit tests call IndexRow() (via UpdateURL) while in the main test setup routines.  The main unit test functions seems to run on the UI thread.  And the threading system is set up, so I cannot do the trick I've used elsewhere\nDCHECK(!IsOnKnownThread || !CurrentlyOn(UI thread));\n\nUnless you have an idea of how to phrase this type of DCHECK, tell me.  Otherwise I'll remove and the accompanying comment.\n","draft":false,"lineno":721,"date":"2013-03-18 23:42:53.354200","left":false},{"author":"Peter Kasting","author_email":"pkasting@chromium.org","text":"On 2013/03/18 23:42:53, Mark P wrote:\n> On 2013/03/15 02:23:43, Peter Kasting wrote:\n> > We shouldn't have commented-out DCHECKs... did you need to comment this out\n> for\n> > some reason?\n> \n> Good point.  I forgot out this.\n> \n> I think I have to remove this DCHECK.  The motivation is right.  However, unit\n> tests call IndexRow() (via UpdateURL) while in the main test setup routines. \n> The main unit test functions seems to run on the UI thread.  And the threading\n> system is set up, so I cannot do the trick I've used elsewhere\n> DCHECK(!IsOnKnownThread || !CurrentlyOn(UI thread));\n> \n> Unless you have an idea of how to phrase this type of DCHECK, tell me. \n> Otherwise I'll remove and the accompanying comment.\n\nHmm.  At the least, I might leave in a comment in place of the old one, like:\n\nWe'd like to check that we're on the history DB thread.  However, its name is in an anonymous namespace, and anyway, unittest code actually calls this on the UI thread.  So we don't do any thread checks.\n\nAnother way might be to add some sort of \"&& !testing\" kind of check, but I'm not sure what a runtime flag for this is -- and the compile-time #ifdef UNIT_TEST won't work here in a .cc file that gets compiled once.  I suppose you could work around THAT by defining a relevant thread-checking function in the .h file under #ifdeefs, but at that point I'm not sure it's worth it.","draft":false,"lineno":721,"date":"2013-03-19 02:54:50.925850","left":false},{"author":"Mark P","author_email":"mpearson@chromium.org","text":"On 2013/03/19 02:54:50, Peter Kasting wrote:\n> On 2013/03/18 23:42:53, Mark P wrote:\n> > On 2013/03/15 02:23:43, Peter Kasting wrote:\n> > > We shouldn't have commented-out DCHECKs... did you need to comment this out\n> > for\n> > > some reason?\n> > \n> > Good point.  I forgot out this.\n> > \n> > I think I have to remove this DCHECK.  The motivation is right.  However, unit\n> > tests call IndexRow() (via UpdateURL) while in the main test setup routines. \n> > The main unit test functions seems to run on the UI thread.  And the threading\n> > system is set up, so I cannot do the trick I've used elsewhere\n> > DCHECK(!IsOnKnownThread || !CurrentlyOn(UI thread));\n> > \n> > Unless you have an idea of how to phrase this type of DCHECK, tell me. \n> > Otherwise I'll remove and the accompanying comment.\n> \n> Hmm.  At the least, I might leave in a comment in place of the old one, like:\n> \n> We'd like to check that we're on the history DB thread.  However, its name is in\n> an anonymous namespace, and anyway, unittest code actually calls this on the UI\n> thread.  So we don't do any thread checks.\n\nUpdated to use a comment much like your suggestion.\n\n> Another way might be to add some sort of \"&& !testing\" kind of check, but I'm\n> not sure what a runtime flag for this is -- and the compile-time #ifdef\n> UNIT_TEST won't work here in a .cc file that gets compiled once.  I suppose you\n> could work around THAT by defining a relevant thread-checking function in the .h\n> file under #ifdeefs, but at that point I'm not sure it's worth it.\n\nI couldn't find a run-time flag for \"is running unit tests\".  I know there are workaround (icky function defines in the .h, conditioned on #if defined(UNIT_TEST)) but these seem heavy-handed.  I'll pass and simply leave the comment.\n","draft":false,"lineno":721,"date":"2013-03-19 18:57:04.421000","left":false}],"id":22007,"is_binary":false},"chrome/browser/history/history_types.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":8,"num_removed":0,"messages":[{"author":"Peter Kasting","author_email":"pkasting@chromium.org","text":"This struct went away in patch set 7, but now it's back.  Bad merge?","draft":false,"lineno":838,"date":"2013-03-15 02:23:43.244470","left":false},{"author":"Mark P","author_email":"mpearson@chromium.org","text":"On 2013/03/15 02:23:43, Peter Kasting wrote:\n> This struct went away in patch set 7, but now it's back.  Bad merge?\n\nApparently so.  Removed.\n","draft":false,"lineno":838,"date":"2013-03-18 23:42:53.352850","left":false}],"id":22002,"is_binary":false},"chrome/browser/history/in_memory_url_index_cache.proto":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":0,"messages":[],"id":22004,"is_binary":false},"chrome/browser/history/in_memory_url_index_unittest.cc":{"status":"M","num_chunks":7,"no_base_file":false,"property_changes":"","num_added":78,"num_removed":11,"messages":[{"author":"Peter Kasting","author_email":"pkasting@chromium.org","text":"Nit: If you ASSERT_EQ here you can drop the min() call in the loop.\n\nActually in that case you could just condense the loop to:\n\nEXPECT_TRUE(std::equal(expected_visits.begin(), expected_visits.end(),\n                       actual_visits.begin()));\n\nbut the output would be less verbose.","draft":false,"lineno":379,"date":"2013-03-15 02:23:43.244850","left":false},{"author":"Peter Kasting","author_email":"pkasting@chromium.org","text":"Tiny nit: I might factor these find() calls into temps to avoid duplicating the work... or you could use count() instead of find() for the asserts","draft":false,"lineno":963,"date":"2013-03-15 02:23:43.245200","left":false},{"author":"Mark P","author_email":"mpearson@chromium.org","text":"On 2013/03/15 02:23:43, Peter Kasting wrote:\n> Nit: If you ASSERT_EQ here you can drop the min() call in the loop.\n\nIn my experience with other tests, I found that it's helpful to see if and how the first few items differ even if the lists are a different size.  i.e., I prefer continuing on, not asserting that the sizes are equal.\n\n> Actually in that case you could just condense the loop to:\n> \n> EXPECT_TRUE(std::equal(expected_visits.begin(), expected_visits.end(),\n>                        actual_visits.begin()));\n> \n> but the output would be less verbose.\n\nAgain, I prefer the verbose output because it helps usage what went wrong when something breaks\n","draft":false,"lineno":379,"date":"2013-03-18 23:42:53.353070","left":false},{"author":"Mark P","author_email":"mpearson@chromium.org","text":"On 2013/03/15 02:23:43, Peter Kasting wrote:\n> Tiny nit: I might factor these find() calls into temps to avoid duplicating the\n> work... or you could use count() instead of find() for the asserts\n\nDid the former (though frankly don't think it was worth the time to type such a minor optimization for a unit test...).\n","draft":false,"lineno":963,"date":"2013-03-18 23:42:53.353290","left":false}],"id":22006,"is_binary":false},"chrome/browser/history/in_memory_url_index_types.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":14,"num_removed":1,"messages":[],"id":22005,"is_binary":false},"chrome/test/data/History/url_history_provider_test.db.txt":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":48,"num_removed":1,"messages":[{"author":"Peter Kasting","author_email":"pkasting@chromium.org","text":"visit_database.h","draft":false,"lineno":39,"date":"2013-03-15 02:23:43.246890","left":false},{"author":"Mark P","author_email":"mpearson@chromium.org","text":"On 2013/03/15 02:23:43, Peter Kasting wrote:\n> visit_database.h\n\nDone.  (Ah, yes, I wrote that comment before I moved the #define from the .cc to the .h.)\n","draft":false,"lineno":39,"date":"2013-03-18 23:42:53.354450","left":false}],"id":22011,"is_binary":false},"chrome/browser/history/in_memory_url_index.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":10,"num_removed":3,"messages":[],"id":22003,"is_binary":false},"chrome/browser/history/url_index_private_data.h":{"status":"M","num_chunks":7,"no_base_file":false,"property_changes":"","num_added":39,"num_removed":5,"messages":[],"id":22008,"is_binary":false},"chrome/browser/history/visit_database.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":5,"num_removed":0,"messages":[],"id":22010,"is_binary":false},"chrome/browser/autocomplete/history_quick_provider_unittest.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":22001,"is_binary":false}},"owner_email":"mpearson@chromium.org","owner":"Mark P","message":"completed changelist","try_job_results":[],"created":"2013-03-12 19:11:36.637410","url":null,"num_comments":18,"modified":"2013-03-19 18:57:04.576720","patchset":21001,"issue":12321041}