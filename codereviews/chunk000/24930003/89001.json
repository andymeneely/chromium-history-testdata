{"files":{"chrome/test/data/extensions/profiles/content_scripts50/Default/Preferences":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":90011,"is_binary":false},"chrome/test/data/policy/policy_test_cases.json":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":90013,"is_binary":false},"chrome/browser/resources/options/browser_options.js":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":2,"messages":[],"id":90005,"is_binary":false},"chrome/test/data/extensions/profiles/content_scripts10/Default/Preferences":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":90010,"is_binary":false},"chrome/common/pref_names.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":0,"messages":[],"id":90008,"is_binary":false},"chrome/test/data/extensions/profiles/content_scripts1/Default/Preferences":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":90009,"is_binary":false},"chrome/browser/prefs/pref_model_associator.cc":{"status":"M","num_chunks":10,"no_base_file":false,"property_changes":"","num_added":127,"num_removed":16,"messages":[{"author":"Nicolas Zea","author_email":"zea@chromium.org","text":"I don't think this will ever add the old pref name to the synced_preferences_ list, which means that the below check in synced_preferences_ for the name won't work properly. It probably makes sense to have this insert preference.name() now.","draft":false,"lineno":206,"date":"2013-10-10 17:44:14.778210","left":false},{"author":"robertshield","author_email":"robertshield@chromium.org","text":"On 2013/10/10 17:44:14, Nicolas Zea wrote:\n> I don't think this will ever add the old pref name to the synced_preferences_\n> list, which means that the below check in synced_preferences_ for the name won't\n> work properly. \n\nAh true, the pref will still get synced but subsequent updates will again run as ADD actions which I guess won't work as desired.\n\nIt probably makes sense to have this insert preference.name()\n> now.\n\nI'm not 100% sure I understand this last bit. Do you mean rather that I should insert GetOldMigratedPreferenceName(pref_name) into synced_preferences_ (presumably ~line 173), or do you mean something else?\n\n","draft":false,"lineno":206,"date":"2013-10-10 20:06:21.086120","left":false},{"author":"Nicolas Zea","author_email":"zea@chromium.org","text":"On 2013/10/10 20:06:21, robertshield wrote:\n> On 2013/10/10 17:44:14, Nicolas Zea wrote:\n> > I don't think this will ever add the old pref name to the synced_preferences_\n> > list, which means that the below check in synced_preferences_ for the name\n> won't\n> > work properly. \n> \n> Ah true, the pref will still get synced but subsequent updates will again run as\n> ADD actions which I guess won't work as desired.\n> \n> It probably makes sense to have this insert preference.name()\n> > now.\n> \n> I'm not 100% sure I understand this last bit. Do you mean rather that I should\n> insert GetOldMigratedPreferenceName(pref_name) into synced_preferences_\n> (presumably ~line 173), or do you mean something else?\n> \n\nBasically, if the preference sync is passing to the model associator is the old preference, we need to somehow know that sync has an entity for the old preference already. preference.name() matches whatever sync has (pref_name is the one that would be the migrated pref), so I think it makes sense to insert preference.name() here.","draft":false,"lineno":206,"date":"2013-10-10 20:35:09.478760","left":false},{"author":"robertshield","author_email":"robertshield@chromium.org","text":"On 2013/10/10 20:35:09, Nicolas Zea wrote:\n> On 2013/10/10 20:06:21, robertshield wrote:\n> > On 2013/10/10 17:44:14, Nicolas Zea wrote:\n> > > I don't think this will ever add the old pref name to the\n> synced_preferences_\n> > > list, which means that the below check in synced_preferences_ for the name\n> > won't\n> > > work properly. \n> > \n> > Ah true, the pref will still get synced but subsequent updates will again run\n> as\n> > ADD actions which I guess won't work as desired.\n> > \n> > It probably makes sense to have this insert preference.name()\n> > > now.\n> > \n> > I'm not 100% sure I understand this last bit. Do you mean rather that I should\n> > insert GetOldMigratedPreferenceName(pref_name) into synced_preferences_\n> > (presumably ~line 173), or do you mean something else?\n> > \n> \n> Basically, if the preference sync is passing to the model associator is the old\n> preference, we need to somehow know that sync has an entity for the old\n> preference already. preference.name() matches whatever sync has (pref_name is\n> the one that would be the migrated pref), so I think it makes sense to insert\n> preference.name() here.\n\nDone.","draft":false,"lineno":206,"date":"2013-10-11 18:29:31.298300","left":false}],"id":90001,"is_binary":false},"chrome/test/data/profiles/profile_with_complex_theme/Default/PreferencesTemplate":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":90014,"is_binary":false},"chrome/browser/resources/options/startup_section.html":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":90006,"is_binary":false},"chrome/browser/prefs/pref_model_associator.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":2,"messages":[{"author":"Nicolas Zea","author_email":"zea@chromium.org","text":"why switch to a vector? I think a map is still correct.\n\nConsider, for example, the case where you have both a synced version of the new preference and one of the old preference, and they don't match with the local version of the new preference.\n\nAs you're iterating, you'll encounter the synced version of one with value A, merge it with the local version with value L, and wind up with AL as the new synced value you need to push back to the old pref. You'll then continue, see the second synced pref with value B, merge it with the local value AL, and wind up with ABL, which is _now_ the value you should be syncing back to _both.\n\nI think it would make more sense to use a map, so that the second time you generate the value, you'll overwrite the first value (although in practice passing two changes to the same value is the same as just passing the second change).","draft":false,"lineno":114,"date":"2013-10-10 17:44:14.778470","left":false},{"author":"robertshield","author_email":"robertshield@chromium.org","text":"On 2013/10/10 17:44:14, Nicolas Zea wrote:\n> why switch to a vector? I think a map is still correct.\n> \n> Consider, for example, the case where you have both a synced version of the new\n> preference and one of the old preference, and they don't match with the local\n> version of the new preference.\n> \n> As you're iterating, you'll encounter the synced version of one with value A,\n> merge it with the local version with value L, and wind up with AL as the new\n> synced value you need to push back to the old pref. You'll then continue, see\n> the second synced pref with value B, merge it with the local value AL, and wind\n> up with ABL, which is _now_ the value you should be syncing back to _both.\n> \n> I think it would make more sense to use a map, so that the second time you\n> generate the value, you'll overwrite the first value (although in practice\n> passing two changes to the same value is the same as just passing the second\n> change).\n\nOk, I hadn't understood that MergeDataAndStartSyncing could iterate over the same preference name multiple times. I've switched it back to a map.\n","draft":false,"lineno":114,"date":"2013-10-10 20:06:21.086450","left":false},{"author":"Nicolas Zea","author_email":"zea@chromium.org","text":"On 2013/10/10 20:06:21, robertshield wrote:\n> On 2013/10/10 17:44:14, Nicolas Zea wrote:\n> > why switch to a vector? I think a map is still correct.\n> > \n> > Consider, for example, the case where you have both a synced version of the\n> new\n> > preference and one of the old preference, and they don't match with the local\n> > version of the new preference.\n> > \n> > As you're iterating, you'll encounter the synced version of one with value A,\n> > merge it with the local version with value L, and wind up with AL as the new\n> > synced value you need to push back to the old pref. You'll then continue, see\n> > the second synced pref with value B, merge it with the local value AL, and\n> wind\n> > up with ABL, which is _now_ the value you should be syncing back to _both.\n> > \n> > I think it would make more sense to use a map, so that the second time you\n> > generate the value, you'll overwrite the first value (although in practice\n> > passing two changes to the same value is the same as just passing the second\n> > change).\n> \n> Ok, I hadn't understood that MergeDataAndStartSyncing could iterate over the\n> same preference name multiple times. I've switched it back to a map.\n\nWell, it's not that MergeDataAndStartSyncing will iterate over a preference multiple times (the SyncDataList has only one of each synced preference), it's that we may wind up with multiple writes to the same migrated preference.","draft":false,"lineno":114,"date":"2013-10-10 20:35:09.479150","left":false},{"author":"robertshield","author_email":"robertshield@chromium.org","text":"On 2013/10/10 20:35:09, Nicolas Zea wrote:\n> On 2013/10/10 20:06:21, robertshield wrote:\n> > On 2013/10/10 17:44:14, Nicolas Zea wrote:\n> > > why switch to a vector? I think a map is still correct.\n> > > \n> > > Consider, for example, the case where you have both a synced version of the\n> > new\n> > > preference and one of the old preference, and they don't match with the\n> local\n> > > version of the new preference.\n> > > \n> > > As you're iterating, you'll encounter the synced version of one with value\n> A,\n> > > merge it with the local version with value L, and wind up with AL as the new\n> > > synced value you need to push back to the old pref. You'll then continue,\n> see\n> > > the second synced pref with value B, merge it with the local value AL, and\n> > wind\n> > > up with ABL, which is _now_ the value you should be syncing back to _both.\n> > > \n> > > I think it would make more sense to use a map, so that the second time you\n> > > generate the value, you'll overwrite the first value (although in practice\n> > > passing two changes to the same value is the same as just passing the second\n> > > change).\n> > \n> > Ok, I hadn't understood that MergeDataAndStartSyncing could iterate over the\n> > same preference name multiple times. I've switched it back to a map.\n> \n> Well, it's not that MergeDataAndStartSyncing will iterate over a preference\n> multiple times (the SyncDataList has only one of each synced preference), it's\n> that we may wind up with multiple writes to the same migrated preference.\n\nDone.","draft":false,"lineno":114,"date":"2013-10-11 18:29:31.298630","left":false}],"id":90002,"is_binary":false},"chrome/common/pref_names.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":1,"messages":[],"id":90007,"is_binary":false},"chrome/test/data/extensions/profiles/empty/Default/Preferences":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":90012,"is_binary":false},"tools/metrics/histograms/histograms.xml":{"status":"M","num_chunks":2,"no_base_file":true,"property_changes":"","num_added":16,"num_removed":0,"messages":[],"id":90015,"is_binary":false},"chrome/browser/profile_resetter/profile_resetter_unittest.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":90004,"is_binary":false},"chrome/browser/prefs/session_startup_pref.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":61,"num_removed":1,"messages":[],"id":90003,"is_binary":false}},"owner_email":"mad@chromium.org","owner":"MAD","message":"Add rather than update previously unseen migrated prefs.","try_job_results":[{"parent_name":null,"tests":[],"slave":"slave275-c4","url":"http://build.chromium.org/p/tryserver.chromium/builders/linux_chromeos/builds/163293","timestamp":"2013-10-10 16:13:20.695561","builder":"linux_chromeos","clobber":false,"project":"Chromium Try Server","reason":"","result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAqLUKDA","requester":"robertshield@chromium.org","buildnumber":"163293","revision":"227912"},{"parent_name":"win_rel","tests":[],"slave":"slave511-c4#18","url":"http://build.chromium.org/p/tryserver.chromium/builders/swarm_triggered/builds/53567","timestamp":"2013-10-10 16:06:11.779035","builder":"swarm_triggered","clobber":false,"project":"Chromium Try Server","reason":"Triggerable(swarm_triggered)","result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAmIUKDA","requester":null,"buildnumber":"53567","revision":"227912"},{"parent_name":null,"tests":[],"slave":"vm128-m4","url":"http://build.chromium.org/p/tryserver.chromium/builders/win_rel/builds/207290","timestamp":"2013-10-10 15:56:27.906585","builder":"win_rel","clobber":false,"project":"Chromium Try Server","reason":"","result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAqLUJDA","requester":"robertshield@chromium.org","buildnumber":"207290","revision":"227912"},{"parent_name":"linux_rel","tests":["defaulttests"],"slave":"slave511-c4#13","url":"http://build.chromium.org/p/tryserver.chromium/builders/swarm_triggered/builds/53323","timestamp":"2013-10-10 00:07:05.260081","builder":"swarm_triggered","clobber":false,"project":"Chromium Try Server","reason":"Triggerable(swarm_triggered)","result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgICA15wKDA","requester":null,"buildnumber":"53323","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"slave341-c4","url":"http://build.chromium.org/p/tryserver.chromium/builders/linux_rel/builds/176517","timestamp":"2013-10-09 23:59:51.466856","builder":"linux_rel","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoKcIDA","requester":"robertshield@chromium.org","buildnumber":"176517","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"slave319-c4","url":"http://build.chromium.org/p/tryserver.chromium/builders/linux_chromeos/builds/163086","timestamp":"2013-10-09 23:51:34.696269","builder":"linux_chromeos","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoLsLDA","requester":"robertshield@chromium.org","buildnumber":"163086","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"slave285-c4","url":"http://build.chromium.org/p/tryserver.chromium/builders/linux_aura/builds/85850","timestamp":"2013-10-09 23:24:14.712433","builder":"linux_aura","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoLsJDA","requester":"robertshield@chromium.org","buildnumber":"85850","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"slave376-c4","url":"http://build.chromium.org/p/tryserver.chromium/builders/linux_asan/builds/49645","timestamp":"2013-10-09 23:16:58.437211","builder":"linux_asan","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoPsJDA","requester":"robertshield@chromium.org","buildnumber":"49645","revision":"227741"},{"parent_name":null,"tests":["compile"],"slave":"slave381-c4","url":"http://build.chromium.org/p/tryserver.chromium/builders/linux_clang/builds/145653","timestamp":"2013-10-09 22:47:20.184242","builder":"linux_clang","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoMcKDA","requester":"robertshield@chromium.org","buildnumber":"145653","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"slave524-c4","url":"http://build.chromium.org/p/tryserver.chromium/builders/android_aosp/builds/18661","timestamp":"2013-10-09 22:42:54.271661","builder":"android_aosp","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoLsKDA","requester":"robertshield@chromium.org","buildnumber":"18661","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"vm166-m4","url":"http://build.chromium.org/p/tryserver.chromium/builders/win7_aura/builds/87217","timestamp":"2013-10-09 21:44:45.287573","builder":"win7_aura","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoPsIDA","requester":"robertshield@chromium.org","buildnumber":"87217","revision":"227741"},{"parent_name":"android_dbg","tests":["defaulttests"],"slave":"chromeperf27","url":"http://build.chromium.org/p/tryserver.chromium/builders/android_dbg_triggered_tests/builds/93335","timestamp":"2013-10-09 21:29:02.641626","builder":"android_dbg_triggered_tests","clobber":false,"project":"Chromium Try Server","reason":"Triggerable(android_dbg)","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAsKMKDA","requester":null,"buildnumber":"93335","revision":"227741"},{"parent_name":"win_rel","tests":["defaulttests"],"slave":"slave513-c4#6","url":"http://build.chromium.org/p/tryserver.chromium/builders/swarm_triggered/builds/53243","timestamp":"2013-10-09 21:16:21.857156","builder":"swarm_triggered","clobber":false,"project":"Chromium Try Server","reason":"Triggerable(swarm_triggered)","result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoKcKDA","requester":null,"buildnumber":"53243","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"vm147-m4","url":"http://build.chromium.org/p/tryserver.chromium/builders/win_rel/builds/207058","timestamp":"2013-10-09 21:13:52.069107","builder":"win_rel","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoMcJDA","requester":"robertshield@chromium.org","buildnumber":"207058","revision":"227741"},{"parent_name":null,"tests":["compile"],"slave":"vm779-m4","url":"http://build.chromium.org/p/tryserver.chromium/builders/win_x64_rel/builds/44186","timestamp":"2013-10-09 20:42:49.054419","builder":"win_x64_rel","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoMcLDA","requester":"robertshield@chromium.org","buildnumber":"44186","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"vm386-m4","url":"http://build.chromium.org/p/tryserver.chromium/builders/android_dbg/builds/110813","timestamp":"2013-10-09 20:38:43.372026","builder":"android_dbg","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoMcIDA","requester":"robertshield@chromium.org","buildnumber":"110813","revision":"227741"},{"parent_name":null,"tests":["compile"],"slave":"vm137-m4","url":"http://build.chromium.org/p/tryserver.chromium/builders/win/builds/115124","timestamp":"2013-10-09 20:37:54.808274","builder":"win","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoPsLDA","requester":"robertshield@chromium.org","buildnumber":"115124","revision":"227741"},{"parent_name":"mac_rel","tests":["defaulttests"],"slave":"slave515-c4#14","url":"http://build.chromium.org/p/tryserver.chromium/builders/swarm_triggered/builds/53234","timestamp":"2013-10-09 20:28:55.064662","builder":"swarm_triggered","clobber":false,"project":"Chromium Try Server","reason":"Triggerable(swarm_triggered)","result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAkIsKDA","requester":null,"buildnumber":"53234","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"vm679-m4","url":"http://build.chromium.org/p/tryserver.chromium/builders/mac_rel/builds/176053","timestamp":"2013-10-09 20:28:29.908785","builder":"mac_rel","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoIcIDA","requester":"robertshield@chromium.org","buildnumber":"176053","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"mini42-l1","url":"http://build.chromium.org/p/tryserver.chromium/builders/ios_dbg_simulator/builds/91588","timestamp":"2013-10-09 20:18:22.313104","builder":"ios_dbg_simulator","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoIcKDA","requester":"robertshield@chromium.org","buildnumber":"91588","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"vm404-m4","url":"http://build.chromium.org/p/tryserver.chromium/builders/android_clang_dbg/builds/82823","timestamp":"2013-10-09 20:15:49.239230","builder":"android_clang_dbg","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoPsKDA","requester":"robertshield@chromium.org","buildnumber":"82823","revision":"227741"},{"parent_name":null,"tests":["compile"],"slave":"vm673-m4","url":"http://build.chromium.org/p/tryserver.chromium/builders/mac/builds/91750","timestamp":"2013-10-09 20:15:19.648124","builder":"mac","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoIcLDA","requester":"robertshield@chromium.org","buildnumber":"91750","revision":"227741"},{"parent_name":null,"tests":["defaulttests"],"slave":"mini20-l1","url":"http://build.chromium.org/p/tryserver.chromium/builders/ios_rel_device/builds/86131","timestamp":"2013-10-09 20:09:31.619386","builder":"ios_rel_device","clobber":false,"project":"Chromium Try Server","reason":"mad2","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnI3CxIFSXNzdWUY083xCwwLEghQYXRjaFNldBiptwUMCxIMVHJ5Sm9iUmVzdWx0GICAgIDAoIcJDA","requester":"robertshield@chromium.org","buildnumber":"86131","revision":"227741"}],"created":"2013-10-09 20:03:29.765540","url":null,"num_comments":8,"modified":"2013-10-11 18:29:31.348750","patchset":89001,"issue":24930003}