{"files":{"testing/android/java/src/org/chromium/native_test/ChromeNativeTestActivity.java":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":21,"num_removed":26,"messages":[],"id":29015,"is_binary":false},"content/public/android/javatests/src/org/chromium/content/browser/CommandLineTest.java":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":1,"messages":[],"id":29012,"is_binary":false},"content/app/android/library_loader_hooks.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":11,"num_removed":10,"messages":[{"author":"joth","author_email":"joth@chromium.org","text":"indent wrong.\n","draft":false,"lineno":39,"date":"2013-01-08 21:20:45.531270","left":false},{"author":"joth","author_email":"joth@chromium.org","text":"I don't think it's adding much to reuse result_codes.h for these. It seems the other result codes would be impossible to return here, and conversely the FAILED_TO_REGSITER_JNI is android only cannot happen subsequent to this point.\n\njust returning a boolean and then on the java side include a message in the exception (need a new c'tor overload) \"JNI registration error\" seems as good. we can define exception.getErrorCode() == -1 to mean other or some such thing\n","draft":false,"lineno":87,"date":"2013-01-08 21:20:45.531510","left":false},{"author":"michaelbai","author_email":"michaelbai@chromium.org","text":"I think it is better for user to find the error in one place. If we are concerned about the change here, I can revert this file and add a native method like\n int nativeGetFailedToRegisterJNIResultCode(). \nand add it in Java side. Sounds better?\n\n\nOn 2013/01/08 21:20:45, joth wrote:\n> I don't think it's adding much to reuse result_codes.h for these. It seems the\n> other result codes would be impossible to return here, and conversely the\n> FAILED_TO_REGSITER_JNI is android only cannot happen subsequent to this point.\n> \n> just returning a boolean and then on the java side include a message in the\n> exception (need a new c'tor overload) \"JNI registration error\" seems as good. we\n> can define exception.getErrorCode() == -1 to mean other or some such thing\n\n","draft":false,"lineno":87,"date":"2013-01-09 00:14:00.253260","left":false}],"id":29005,"is_binary":false},"android_webview/java/src/org/chromium/android_webview/AwBrowserProcess.java":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":8,"num_removed":3,"messages":[{"author":"joth","author_email":"joth@chromium.org","text":"Unfortunately ThreadUtils.runOnUiThreadBlocking does not propogate Errors back to the caller, only exceptions.\nCoud you update ThreadUtils.runOnUiThreadBlocking to catch Throwable instead of Exception? (and pass it back through) or just create a RuntimeException here (maybe more reasonable).\n\n\n","draft":false,"lineno":55,"date":"2013-01-08 21:20:45.531050","left":false},{"author":"michaelbai","author_email":"michaelbai@chromium.org","text":"Used RuntimeException.\n\n\nOn 2013/01/08 21:20:45, joth wrote:\n> Unfortunately ThreadUtils.runOnUiThreadBlocking does not propogate Errors back\n> to the caller, only exceptions.\n> Coud you update ThreadUtils.runOnUiThreadBlocking to catch Throwable instead of\n> Exception? (and pass it back through) or just create a RuntimeException here\n> (maybe more reasonable).\n> \n> \n\n","draft":false,"lineno":55,"date":"2013-01-09 00:14:00.252950","left":false},{"author":"joth","author_email":"joth@chromium.org","text":"On 2013/01/09 00:14:00, michaelbai wrote:\n> Used RuntimeException.\n> \nOK. Was removing  the message intentional? That should work ok with RuntimeException too. (and seems sufficiently useful to include)\n\n\n\n> \n> On 2013/01/08 21:20:45, joth wrote:\n> > Unfortunately ThreadUtils.runOnUiThreadBlocking does not propogate Errors back\n> > to the caller, only exceptions.\n> > Coud you update ThreadUtils.runOnUiThreadBlocking to catch Throwable instead\n> of\n> > Exception? (and pass it back through) or just create a RuntimeException here\n> > (maybe more reasonable).\n> > \n> > \n> \n\n","draft":false,"lineno":55,"date":"2013-01-09 02:51:24.689400","left":false},{"author":"michaelbai","author_email":"michaelbai@chromium.org","text":"I were thinking it might be a redundant message, I added it back since you like it.\n\n\nOn 2013/01/09 02:51:24, joth wrote:\n> On 2013/01/09 00:14:00, michaelbai wrote:\n> > Used RuntimeException.\n> > \n> OK. Was removing  the message intentional? That should work ok with\n> RuntimeException too. (and seems sufficiently useful to include)\n> \n> \n> \n> > \n> > On 2013/01/08 21:20:45, joth wrote:\n> > > Unfortunately ThreadUtils.runOnUiThreadBlocking does not propogate Errors\n> back\n> > > to the caller, only exceptions.\n> > > Coud you update ThreadUtils.runOnUiThreadBlocking to catch Throwable instead\n> > of\n> > > Exception? (and pass it back through) or just create a RuntimeException here\n> > > (maybe more reasonable).\n> > > \n> > > \n> > \n> \n\n","draft":false,"lineno":55,"date":"2013-01-09 21:04:42.748060","left":false}],"id":29001,"is_binary":false},"content/public/android/java/src/org/chromium/content/browser/ContentViewCore.java":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":5,"num_removed":8,"messages":[],"id":29010,"is_binary":false},"content/public/android/java/src/org/chromium/content/browser/ContentView.java":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":5,"num_removed":2,"messages":[],"id":29009,"is_binary":false},"content/public/android/java/src/org/chromium/content/app/LibraryLoader.java":{"status":"M","num_chunks":7,"no_base_file":false,"property_changes":"","num_added":11,"num_removed":16,"messages":[{"author":"joth","author_email":"joth@chromium.org","text":"could you  just delete this method? it's finally not called anywhere any more\n","draft":false,"lineno":61,"date":"2013-01-08 21:20:45.531690","left":false},{"author":"joth","author_email":"joth@chromium.org","text":"may as well log the code here.","draft":false,"lineno":118,"date":"2013-01-08 21:20:45.531860","left":false},{"author":"michaelbai","author_email":"michaelbai@chromium.org","text":"On 2013/01/08 21:20:45, joth wrote:\n> could you  just delete this method? it's finally not called anywhere any more\n\nDone.","draft":false,"lineno":61,"date":"2013-01-09 00:14:00.253570","left":false}],"id":29006,"is_binary":false},"chrome/android/testshell/java/src/org/chromium/chrome/testshell/ChromiumTestShellActivity.java":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":3,"messages":[],"id":29003,"is_binary":false},"chrome/app/android/chrome_main_delegate_android.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":6,"messages":[],"id":29004,"is_binary":false},"content/public/android/java/src/org/chromium/content/app/SandboxedProcessService.java":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":0,"messages":[],"id":29007,"is_binary":false},"content/public/common/result_codes.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":1,"messages":[{"author":"joth","author_email":"joth@chromium.org","text":"this comment will need updating if we do add this error in here (but see other comments)\n","draft":false,"lineno":12,"date":"2013-01-08 21:20:45.532040","left":false},{"author":"michaelbai","author_email":"michaelbai@chromium.org","text":"Our case belongs to 'c', isn't it?\n\nOn 2013/01/08 21:20:45, joth wrote:\n> this comment will need updating if we do add this error in here (but see other\n> comments)\n\n","draft":false,"lineno":12,"date":"2013-01-09 00:14:00.253850","left":false},{"author":"joth","author_email":"joth@chromium.org","text":"On 2013/01/09 00:14:00, michaelbai wrote:\n> Our case belongs to 'c', isn't it?\n> \n\nfair enough. (c) was sufficiently general it didn't mean much to me so my eyes skimmed past it.\n\nAlso, conceivably, the webview user can catch and ignore this error, so in that respect it's an init failure not a process \"termination\" but yes this is locally consistent with the terminology we use in chromium content AndroidProcess  etc so lets go with it like this.","draft":false,"lineno":12,"date":"2013-01-09 02:51:24.689700","left":false}],"id":29013,"is_binary":false},"content/public/android/java/src/org/chromium/content/browser/AndroidBrowserProcess.java":{"status":"M","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":8,"num_removed":4,"messages":[],"id":29008,"is_binary":false},"content/shell/android/java/src/org/chromium/content_shell/ContentShellActivity.java":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":25,"num_removed":21,"messages":[],"id":29014,"is_binary":false},"content/public/android/java/src/org/chromium/content/common/ProcessInitException.java":{"status":"A","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":37,"num_removed":0,"messages":[],"id":29011,"is_binary":false},"android_webview/javatests/src/org/chromium/android_webview/test/AndroidWebViewTestBase.java":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":2,"messages":[],"id":29002,"is_binary":false}},"owner_email":"michaelbai@chromium.org","owner":"michaelbai","message":"Remove process initialization in ContentViewCore constructor","try_job_results":[],"created":"2013-01-08 20:14:57.418990","url":null,"num_comments":13,"modified":"2013-01-09 21:04:42.787100","patchset":28001,"issue":11567061}