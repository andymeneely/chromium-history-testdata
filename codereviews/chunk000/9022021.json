{"description":"Proxy PPB_ArrayBuffer_Dev, make them work over Messaging\n\nBUG=103435\nTEST=\n\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=116594","cc":["chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"reviewers":["sehr@google.com","brettw@chromium.org"],"messages":[{"sender":"dmichael@chromium.org","recipients":["dmichael@chromium.org","sehr@google.com","brettw@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"sehr primary, brettw for ppapi/tests/test_post_message.cc\n\nI decided to go the simplest way possible for now, but it turns out that SRPC is still failing for big buffers. That's what I was checking with the test update...  if I pass a buffer 1000000 bytes long, SRPC fails with this output:\n[SRPC:NACL:29414,4278125760:18:16:50.147000] NaClSrpcMessageChannelSend: first send failed, 65552 != -14.\n[SRPC:NACL:29414,4278125760:18:16:50.147000] NaClSrpcInvokeV(channel=0xfefc0bb0): rpc request send failed\n[29414,3577083648:11:16:50.158506] munmap: rounded length to 0x100000\n\nI'm tempted to work towards passing with shared memory to get around the SRPC problem... unless you're confident you'll get that fixed in 18.\n\nhttp://codereview.chromium.org/9022021/diff/5016/ppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc\nFile ppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc (left):\n\nhttp://codereview.chromium.org/9022021/diff/5016/ppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc#oldcode96\nppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc:96: size_t sum = value1 + value2;\nsize_t is 32-bit in NaCl and the 32-bit trusted builds, so this check seemed wrong to me. Let me know if I'm misunderstanding something.\n\nhttp://codereview.chromium.org/9022021/diff/5016/ppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc#oldcode121\nppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc:121: if (std::numeric_limits<uint32_t>::max() == string_length ||\nAnd this part doesn't seem necessary if AddWouldOverflow works...","disapproval":false,"date":"2011-12-27 22:20:47.109650","approval":false},{"sender":"brettw@chromium.org","recipients":["dmichael@chromium.org","sehr@google.com","brettw@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"lgtm\n\nhttp://codereview.chromium.org/9022021/diff/8002/ppapi/native_client/src/shared/ppapi_proxy/array_buffer_proxy_var.h\nFile ppapi/native_client/src/shared/ppapi_proxy/array_buffer_proxy_var.h (right):\n\nhttp://codereview.chromium.org/9022021/diff/8002/ppapi/native_client/src/shared/ppapi_proxy/array_buffer_proxy_var.h#newcode40\nppapi/native_client/src/shared/ppapi_proxy/array_buffer_proxy_var.h:40: ArrayBufferProxyVar();  // Not implemented, do not use.\nAre you sure you need this to prevent the empty constructor from getting instantiated?\n\nhttp://codereview.chromium.org/9022021/diff/8002/ppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc\nFile ppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc (right):\n\nhttp://codereview.chromium.org/9022021/diff/8002/ppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc#newcode239\nppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc:239: RoundedStringBytes(buffer_length) - buffer_length);\nThis should be indented to after the ( above.\n\nhttp://codereview.chromium.org/9022021/diff/8002/ppapi/native_client/src/shared/ppapi_proxy/plugin_globals.cc\nFile ppapi/native_client/src/shared/ppapi_proxy/plugin_globals.cc (right):\n\nhttp://codereview.chromium.org/9022021/diff/8002/ppapi/native_client/src/shared/ppapi_proxy/plugin_globals.cc#newcode90\nppapi/native_client/src/shared/ppapi_proxy/plugin_globals.cc:90: GetBrowserInterfaceSafe(PPB_VAR_ARRAY_BUFFER_DEV_INTERFACE));\nOnly indent 4 spaces.","disapproval":false,"date":"2011-12-28 20:05:14.587409","approval":true},{"sender":"sehr@google.com","recipients":["dmichael@chromium.org","sehr@google.com","brettw@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"One nit.  LGTM.\n\nhttp://codereview.chromium.org/9022021/diff/8002/ppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc\nFile ppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc (right):\n\nhttp://codereview.chromium.org/9022021/diff/8002/ppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc#newcode99\nppapi/native_client/src/shared/ppapi_proxy/object_serialize.cc:99: uint64_t sum = uint64_t(value1) + value2;\nnit, we've generally used static_cast<uint64_t> for this, but you pick.","disapproval":false,"date":"2012-01-05 19:49:26.169000","approval":true},{"sender":"commit-bot@chromium.org","recipients":["dmichael@chromium.org","sehr@google.com","brettw@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/dmichael@chromium.org/9022021/18001","disapproval":false,"date":"2012-01-05 22:55:07.563372","approval":false},{"sender":"commit-bot@chromium.org","recipients":["dmichael@chromium.org","sehr@google.com","brettw@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"Change committed as 116594","disapproval":false,"date":"2012-01-06 00:09:56.821493","approval":false}],"owner_email":"dmichael@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"dmichael","subject":"Proxy PPB_ArrayBuffer_Dev, make them work over Messaging","created":"2011-12-22 23:24:56.613249","patchsets":[1,4001,5016,8002,14001,18001],"modified":"2012-01-06 00:09:56.925334","closed":true,"commit":false,"issue":9022021}