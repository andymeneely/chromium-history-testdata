{"files":{"base/process_util_mac.mm":{"status":"M","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":9,"num_removed":16,"messages":[{"author":"Mark Mentovai","author_email":"mark@chromium.org","text":"I don\u2019t think this is cool. Can you be more surgical?","draft":false,"lineno":572,"date":"2012-09-18 00:18:22.408830","left":false},{"author":"shess","author_email":"shess@chromium.org","text":"On 2012/09/18 00:18:22, Mark Mentovai wrote:\n> I don\u2019t think this is cool. Can you be more surgical?\n\nI don't really think it's cool, either, but ... I also have no idea what the alternative is.  Tomorrow I'll review the malloc code to see if there are any other likely errno-setting operations which can lead here, but that's obviously a failure waiting to happen.  Presumably there wouldn't be a ton of file-descriptor accesses in the malloc library, outside of logging and debugging code.\n\nWe could hook szone_error() to pre-empt the problem.  That's terrifying in its own way, but it would have the side benefit of allowing us to suppress the logging currently done on NULL pointer return.  [I'm away from my Libc checkout right now, so that logging may only happen on debug.]\n\nI'm waiting for a rsesek response, though.  This started out as \"Oh, yeah, we could just <x>\", but it's quickly building momentum...","draft":false,"lineno":572,"date":"2012-09-18 01:55:26.437750","left":false}],"id":7010,"is_binary":false},"base/process_util.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":14,"num_removed":5,"messages":[],"id":7009,"is_binary":false},"base/process_util_unittest.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":33,"num_removed":58,"messages":[],"id":7011,"is_binary":false},"skia/ext/SkMemory_new_handler.cpp":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":0,"messages":[],"id":7012,"is_binary":false}},"owner_email":"shess@chromium.org","owner":"shess","message":"-> UncheckedMalloc and EBADF","try_job_results":[],"created":"2012-09-17 23:46:52.899080","url":null,"num_comments":2,"modified":"2012-09-18 01:55:26.475460","patchset":11002,"issue":10908245}