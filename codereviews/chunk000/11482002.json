{"description":"Delay delivery of audio input data.\r\n\r\nThe AudioQueue API may use a large internal buffer and repeatedly call us\r\nback to back once that internal buffer is filled.  When this happens the\r\nrenderer client does not have enough time to read data back from the\r\nshared memory before the next write comes along.  If HandleInputBuffer()\r\nis called too frequently, Sleep() to simulate realtime input and ensure\r\nthe shared memory doesn't get trampled.\r\n\r\nBUG=157613\r\nTEST=Playback works on older style Mac units.\r\n\r\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=171681\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=171701","cc":["chromium-reviews@chromium.org","feature-media-reviews@chromium.org","sail+watch@chromium.org"],"reviewers":["crogers@google.com","scherkus@chromium.org"],"messages":[{"sender":"dalecurtis@chromium.org","recipients":["dalecurtis@chromium.org","crogers@google.com","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","sail+watch@chromium.org"],"text":"Chris, WDYT? We need this for the pepper input fix. I don't know anything about this API, so hopefully I'm missing a simpler solution.  Another possibility is to set a minimum callback frequency (say ~5ms) instead of simulating realtime.\n\nIn testing this ensures all input callbacks happen on a regular basis; i.e.,\n0us - callback\n2000us - callback\n3000us - callback\n4000us - callback\n5000us - callback\n\nWhereas without the callback sequence looks like:\n0us - callback\n2000us - callback\n2100us - callback\n4000us - callback\n4100us - callback\n\nhttps://codereview.chromium.org/11482002/diff/1/media/audio/mac/audio_input_mac.h\nFile media/audio/mac/audio_input_mac.h (right):\n\nhttps://codereview.chromium.org/11482002/diff/1/media/audio/mac/audio_input_mac.h#newcode66\nmedia/audio/mac/audio_input_mac.h:66: static const int kNumberBuffers = 3;\nReverted the old change so we don't back up the system API while delaying delivery for the current buffer.","disapproval":false,"date":"2012-12-06 21:48:44.723290","approval":false},{"sender":"crogers@google.com","recipients":["dalecurtis@chromium.org","crogers@google.com","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","sail+watch@chromium.org"],"text":"https://codereview.chromium.org/11482002/diff/1/media/audio/mac/audio_input_mac.cc\nFile media/audio/mac/audio_input_mac.cc (right):\n\nhttps://codereview.chromium.org/11482002/diff/1/media/audio/mac/audio_input_mac.cc#newcode207\nmedia/audio/mac/audio_input_mac.cc:207: base::PlatformThread::Sleep(buffer_length - elapsed);\nAs we discussed in offline, this is really a stop-gap very quick-fix solution until we can switch Pepper and speech input API over to the low-latency input path (along with something like AudioInputResampler).\n\nWe need to add a comment here to that affect, along with a bug number.\n\nBecause, these \"sleep\" types of fixes are not good as permanent solutions.\n\nI would also calculate the (buffer_length - elapsed) as a separate variable which you can sanity check to be within a reasonable range before calling Sleep().","disapproval":false,"date":"2012-12-06 23:19:55.154730","approval":false},{"sender":"dalecurtis@chromium.org","recipients":["dalecurtis@chromium.org","crogers@google.com","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","sail+watch@chromium.org"],"text":"https://codereview.chromium.org/11482002/diff/1/media/audio/mac/audio_input_mac.cc\nFile media/audio/mac/audio_input_mac.cc (right):\n\nhttps://codereview.chromium.org/11482002/diff/1/media/audio/mac/audio_input_mac.cc#newcode207\nmedia/audio/mac/audio_input_mac.cc:207: base::PlatformThread::Sleep(buffer_length - elapsed);\nOn 2012/12/06 23:19:55, Chris Rogers wrote:\n> As we discussed in offline, this is really a stop-gap very quick-fix solution\n> until we can switch Pepper and speech input API over to the low-latency input\n> path (along with something like AudioInputResampler).\n> \n> We need to add a comment here to that affect, along with a bug number.\n> \n> Because, these \"sleep\" types of fixes are not good as permanent solutions.\n> \n> I would also calculate the (buffer_length - elapsed) as a separate variable\n> which you can sanity check to be within a reasonable range before calling\n> Sleep().\n\nAdded a comment. As discussed offline, the calling pattern makes it such that the sleep is always necessary and the value is already sanitized to some effect.","disapproval":false,"date":"2012-12-06 23:41:07.165840","approval":false},{"sender":"dalecurtis@chromium.org","recipients":["dalecurtis@chromium.org","crogers@google.com","scherkus@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","sail+watch@chromium.org"],"text":"scherkus: Please owners review.","disapproval":false,"date":"2012-12-06 23:46:29.333850","approval":false},{"sender":"crogers@google.com","recipients":["dalecurtis@chromium.org","crogers@google.com","scherkus@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","sail+watch@chromium.org"],"text":"lgtm - I'm sure you'll keep a close eye on this one.  And hopefully we can get a better solution with the low-latency path...","disapproval":false,"date":"2012-12-06 23:47:23.508790","approval":true},{"sender":"scherkus@chromium.org","recipients":["dalecurtis@chromium.org","crogers@google.com","scherkus@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","sail+watch@chromium.org"],"text":"lgtm","disapproval":false,"date":"2012-12-07 00:30:36.440000","approval":true}],"owner_email":"dalecurtis@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"DaleCurtis","subject":"Delay delivery of audio input data.","created":"2012-12-06 21:42:24.822310","patchsets":[1,5001,5002],"modified":"2012-12-07 06:24:37.929160","closed":true,"commit":false,"issue":11482002}