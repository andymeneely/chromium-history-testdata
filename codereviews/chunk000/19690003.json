{"description":"Extension activity log database refactoring (step 3)\n\nThis is a continuation of work in\nhttps://codereview.chromium.org/18660004/ and\nhttps://codereview.chromium.org/19234003/.\n\nFlatten the Extension::Action hierarchy, getting rid of all subclasses\nand keeping just the top class.  The new Action class has a number of\ndata fields (some optional), so any of the old extension actions can be\nencoded into it.  It maps in a straightforward fashion onto the current\ndatabase schema.\n\nChange all the old sites that used specific Action subclasses to use the\nnew version, and fix up unit tests.\n\nThe extension activity log private API will be updated soon (by felt) to\nmore closely match the new Action class.  There is some basic\ncompatibility in place so that the end-to-end tests still pass, but the\nprivate API unit tests have been disabled pending the rewrite.\n\nBUG=255730\nTBR=jhawkins@chromium.org\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=213995","cc":["chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"reviewers":["felt@chromium.org","mpcomplete@chromium.org","jhawkins@chromium.org"],"messages":[{"sender":"mvrable@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","felt@chromium.org","extensions-reviews@chromium.org"],"text":"This is the next step in the activity database refactoring work.  Since the previous patch hasn't been landed yet this one will show up as the combination of both while reviewing.\n\nIf you have a chance you can review now, or if you'd rather you can wait until the previous patch is in.","disapproval":false,"date":"2013-07-17 22:17:46.297450","approval":false},{"sender":"mvrable@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","felt@chromium.org","extensions-reviews@chromium.org"],"text":"Now that the previous patch has been committed I have rebased this to make it easier to review.","disapproval":false,"date":"2013-07-18 22:45:31.886190","approval":false},{"sender":"felt@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","felt@chromium.org","extensions-reviews@chromium.org"],"text":"A few questions about design choices, other than that it's looking good.\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_actions.h\nFile chrome/browser/extensions/activity_log/activity_actions.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_actions.h#newcode57\nchrome/browser/extensions/activity_log/activity_actions.h:57: void set_api_name(const std::string api_name) { api_name_ = api_name; }\nWhy are these all setters instead of constructors? Is this to handle optional fields?\n\nOne benefit of putting them in a constructor is that you could check whether the correct set of non-optional fields have been specified for the given action type. (And then DCHECK if it's a mismatch.)\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_database.cc\nFile chrome/browser/extensions/activity_log/activity_database.cc (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_database.cc#newcode160\nchrome/browser/extensions/activity_log/activity_database.cc:160: \"ORDER BY time DESC\",\ngood call :)\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h\nFile chrome/browser/extensions/activity_log/activity_log.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode73\nchrome/browser/extensions/activity_log/activity_log.h:73: // does not which to construct the Action object itself, however those\n*does not wish\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode75\nchrome/browser/extensions/activity_log/activity_log.h:75: void LogAction(scoped_refptr<Action> action);\nI'm not entirely sure how I feel about forcing the callers to create Action objects. After mulling over it, I think it's OK, but I'm wondering if there are cases where the caller won't know the right ActionType to assign to it?\n\nAre there any changes that are dependent on this refactoring, or can you make a separate bug & TODO for it?\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode78\nchrome/browser/extensions/activity_log/activity_log.h:78: // ownership transfer: either make it const or a scoped_ptr.\nI'm confused, maybe there is a word missing in this comment?","disapproval":false,"date":"2013-07-23 17:07:17.487520","approval":false},{"sender":"mvrable@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","felt@chromium.org","extensions-reviews@chromium.org"],"text":"Thanks for the good questions.  I'm open to talking more about and changing the design if needed--I'd like to get this right since it will be important going forward.\n\nAlso, I am hoping for a straightforward translation from the Action class to the new private extension API when that is reworked, so if there are changes to the Action class needed for that we should think about them too.\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_actions.h\nFile chrome/browser/extensions/activity_log/activity_actions.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_actions.h#newcode57\nchrome/browser/extensions/activity_log/activity_actions.h:57: void set_api_name(const std::string api_name) { api_name_ = api_name; }\nOn 2013/07/23 17:07:17, felt wrote:\n> Why are these all setters instead of constructors? Is this to handle optional\n> fields?\n> \n> One benefit of putting them in a constructor is that you could check whether the\n> correct set of non-optional fields have been specified for the given action\n> type. (And then DCHECK if it's a mismatch.)\n\nMostly to handle optional fields and to avoid having constructors with very long argument lists.\n\nI was thinking of using the Action class for objects loaded by a policy from the database; because data might have been stripped out while saving (for space or privacy reasons), we need to leave many fields as optional.  That limits the amount of checking we can do, unless I change the design.\n\n(Looking back, api_name is something that probably could be set in the constructor, though--would that be a good change to make?)\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_database.cc\nFile chrome/browser/extensions/activity_log/activity_database.cc (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_database.cc#newcode160\nchrome/browser/extensions/activity_log/activity_database.cc:160: \"ORDER BY time DESC\",\nOn 2013/07/23 17:07:17, felt wrote:\n> good call :)\n\nTo be fair, this wasn't possible before since the records were spread across three independent tables.\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h\nFile chrome/browser/extensions/activity_log/activity_log.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode73\nchrome/browser/extensions/activity_log/activity_log.h:73: // does not which to construct the Action object itself, however those\nOn 2013/07/23 17:07:17, felt wrote:\n> *does not wish\n\nDone.\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode75\nchrome/browser/extensions/activity_log/activity_log.h:75: void LogAction(scoped_refptr<Action> action);\nOn 2013/07/23 17:07:17, felt wrote:\n> I'm not entirely sure how I feel about forcing the callers to create Action\n> objects. After mulling over it, I think it's OK, but I'm wondering if there are\n> cases where the caller won't know the right ActionType to assign to it?\n\nI haven't noticed cases where the caller wouldn't know which ActionType to use, though it's possible I haven't come across them yet.\n\n> Are there any changes that are dependent on this refactoring, or can you make a\n> separate bug & TODO for it?\n\nThis is mostly independent, though passing Action objects directly makes it easier to change exactly what is logged, or even add new types of items that are logged, without having to change the intermediate function calls.\n\nThere's one change for incognito handling where this might be relevant.  When do we want to strip out the URLs for incognito tabs?  Do we want to leave the URL accessible purely in memory (for example, in the activity log developer console that is watching raw events before they are sent to the policy)?  An option is to log the raw URL in the Action object, but add a flag to mark it as an incognito URL.  When the policy processes the Action, it would scrub the URL at that point.  For this change, passing along an Action object is simpler than adding an extra boolean parameter or two at each level to track incognito state.  I am still undecided whether this is how we should handle incognito.\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode78\nchrome/browser/extensions/activity_log/activity_log.h:78: // ownership transfer: either make it const or a scoped_ptr.\nOn 2013/07/23 17:07:17, felt wrote:\n> I'm confused, maybe there is a word missing in this comment?\n\nReworded.  I understand the code a bit better since writing this comment, so I added more details.","disapproval":false,"date":"2013-07-23 18:16:56.301270","approval":false},{"sender":"felt@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","felt@chromium.org","extensions-reviews@chromium.org"],"text":"https://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_actions.h\nFile chrome/browser/extensions/activity_log/activity_actions.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_actions.h#newcode57\nchrome/browser/extensions/activity_log/activity_actions.h:57: void set_api_name(const std::string api_name) { api_name_ = api_name; }\napi_name is sometimes null but usually not. Maybe add it to the constructor just out of convenience?\n\nYou have a good point about loading from the database, so this does make sense.\n\nOn 2013/07/23 18:16:56, mvrable wrote:\n> On 2013/07/23 17:07:17, felt wrote:\n> > Why are these all setters instead of constructors? Is this to handle optional\n> > fields?\n> > \n> > One benefit of putting them in a constructor is that you could check whether\n> the\n> > correct set of non-optional fields have been specified for the given action\n> > type. (And then DCHECK if it's a mismatch.)\n> \n> Mostly to handle optional fields and to avoid having constructors with very long\n> argument lists.\n> \n> I was thinking of using the Action class for objects loaded by a policy from the\n> database; because data might have been stripped out while saving (for space or\n> privacy reasons), we need to leave many fields as optional.  That limits the\n> amount of checking we can do, unless I change the design.\n> \n> (Looking back, api_name is something that probably could be set in the\n> constructor, though--would that be a good change to make?)\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h\nFile chrome/browser/extensions/activity_log/activity_log.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode75\nchrome/browser/extensions/activity_log/activity_log.h:75: void LogAction(scoped_refptr<Action> action);\nOn 2013/07/23 18:16:56, mvrable wrote:\n> On 2013/07/23 17:07:17, felt wrote:\n> > I'm not entirely sure how I feel about forcing the callers to create Action\n> > objects. After mulling over it, I think it's OK, but I'm wondering if there\n> are\n> > cases where the caller won't know the right ActionType to assign to it?\n> \n> I haven't noticed cases where the caller wouldn't know which ActionType to use,\n> though it's possible I haven't come across them yet.\n\nWell, I'm worried about a few things, another one being URLs. Is the caller going to go through the args lists, looking to see if there are URLs, and then separate out the URL from the args list? It seems like that processing should happen here in a single place, rather than scattered throughout the code. Maybe we could offer convenience methods?\n\n> \n> > Are there any changes that are dependent on this refactoring, or can you make\n> a\n> > separate bug & TODO for it?\n> \n> This is mostly independent, though passing Action objects directly makes it\n> easier to change exactly what is logged, or even add new types of items that are\n> logged, without having to change the intermediate function calls.\n> \n> There's one change for incognito handling where this might be relevant.  When do\n> we want to strip out the URLs for incognito tabs?  Do we want to leave the URL\n> accessible purely in memory (for example, in the activity log developer console\n> that is watching raw events before they are sent to the policy)?  An option is\n> to log the raw URL in the Action object, but add a flag to mark it as an\n> incognito URL.  When the policy processes the Action, it would scrub the URL at\n> that point.  For this change, passing along an Action object is simpler than\n> adding an extra boolean parameter or two at each level to track incognito state.\n>  I am still undecided whether this is how we should handle incognito.","disapproval":false,"date":"2013-07-23 19:06:32.985650","approval":false},{"sender":"mvrable@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","felt@chromium.org","extensions-reviews@chromium.org"],"text":"https://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_actions.h\nFile chrome/browser/extensions/activity_log/activity_actions.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_actions.h#newcode57\nchrome/browser/extensions/activity_log/activity_actions.h:57: void set_api_name(const std::string api_name) { api_name_ = api_name; }\nOn 2013/07/23 19:06:33, felt wrote:\n> api_name is sometimes null but usually not. Maybe add it to the constructor just\n> out of convenience?\n\nI'll add the API name to the constructor--patch will be coming up after I've had a chance to make the changes everywhere.\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h\nFile chrome/browser/extensions/activity_log/activity_log.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode75\nchrome/browser/extensions/activity_log/activity_log.h:75: void LogAction(scoped_refptr<Action> action);\nOn 2013/07/23 19:06:33, felt wrote:\n> Well, I'm worried about a few things, another one being URLs. Is the caller\n> going to go through the args lists, looking to see if there are URLs, and then\n> separate out the URL from the args list? It seems like that processing should\n> happen here in a single place, rather than scattered throughout the code. Maybe\n> we could offer convenience methods?\n\nThe current plan is to keep URL scanning through the argument list in the ActivityLog class (where tab ID lookups can happen on the UI thread)--but this can take an Action object as input and modify the object to extract the URLs.  If there are other common operations that are needed we can create convenience methods.","disapproval":false,"date":"2013-07-23 19:17:54.984960","approval":false},{"sender":"felt@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","felt@chromium.org","extensions-reviews@chromium.org"],"text":"https://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h\nFile chrome/browser/extensions/activity_log/activity_log.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode75\nchrome/browser/extensions/activity_log/activity_log.h:75: void LogAction(scoped_refptr<Action> action);\nOn 2013/07/23 19:17:55, mvrable wrote:\n> On 2013/07/23 19:06:33, felt wrote:\n> > Well, I'm worried about a few things, another one being URLs. Is the caller\n> > going to go through the args lists, looking to see if there are URLs, and then\n> > separate out the URL from the args list? It seems like that processing should\n> > happen here in a single place, rather than scattered throughout the code.\n> Maybe\n> > we could offer convenience methods?\n> \n> The current plan is to keep URL scanning through the argument list in the\n> ActivityLog class (where tab ID lookups can happen on the UI thread)--but this\n> can take an Action object as input and modify the object to extract the URLs. \n> If there are other common operations that are needed we can create convenience\n> methods.\n\nAh, OK. I am happy with this plan, where the object will be modified by the ActivityLog class.\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode75\nchrome/browser/extensions/activity_log/activity_log.h:75: void LogAction(scoped_refptr<Action> action);\n> There's one change for incognito handling where this might be relevant.  When do\n> we want to strip out the URLs for incognito tabs?  Do we want to leave the URL\n> accessible purely in memory (for example, in the activity log developer console\n> that is watching raw events before they are sent to the policy)?  An option is\n> to log the raw URL in the Action object, but add a flag to mark it as an\n> incognito URL.  When the policy processes the Action, it would scrub the URL at\n> that point.  For this change, passing along an Action object is simpler than\n> adding an extra boolean parameter or two at each level to track incognito state.\n>  I am still undecided whether this is how we should handle incognito.\n\nWe want to send along incognito URLs to the API and database if & only if we're in testing mode. So they should be written to disk if we are in testing mode. (Does that answer your question?)","disapproval":false,"date":"2013-07-23 19:22:33.378990","approval":false},{"sender":"mvrable@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","felt@chromium.org","extensions-reviews@chromium.org"],"text":"The patch is updated so the api_name parameter is set in the constructor (every previous call site was setting it anyway).\n\nIf you have concerns with the design still I'm open to more changes.\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h\nFile chrome/browser/extensions/activity_log/activity_log.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode75\nchrome/browser/extensions/activity_log/activity_log.h:75: void LogAction(scoped_refptr<Action> action);\nOn 2013/07/23 19:22:33, felt wrote:\n> We want to send along incognito URLs to the API and database if & only if we're\n> in testing mode. So they should be written to disk if we are in testing mode.\n> (Does that answer your question?)\n\nI think this answers my question.  I think we don't want to bother checking command-line flags at the point where the data is collected.  So, we'll want to record the full URL and also a flag that indicates whether it is incognito (the change I was proposing).\n\nThe policy can then discard incognito URLs if appropriate--the log-everything policy will keep the URLs, and the non-testing policy will blank them out.  Incognito scrubbing should be in a helper method, so it can also be applied to the data forwarded directly to the API.  Or perhaps the ActivityLog can do the scrubbing for both, depending on command-line flags.","disapproval":false,"date":"2013-07-23 21:54:03.207120","approval":false},{"sender":"felt@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"text":"On 2013/07/23 21:54:03, mvrable wrote:\n> The patch is updated so the api_name parameter is set in the constructor (every\n> previous call site was setting it anyway).\n> \n> If you have concerns with the design still I'm open to more changes.\n> \n> https://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h\n> File chrome/browser/extensions/activity_log/activity_log.h (right):\n> \n> https://codereview.chromium.org/19690003/diff/3001/chrome/browser/extensions/activity_log/activity_log.h#newcode75\n> chrome/browser/extensions/activity_log/activity_log.h:75: void\n> LogAction(scoped_refptr<Action> action);\n> On 2013/07/23 19:22:33, felt wrote:\n> > We want to send along incognito URLs to the API and database if & only if\n> we're\n> > in testing mode. So they should be written to disk if we are in testing mode.\n> > (Does that answer your question?)\n> \n> I think this answers my question.  I think we don't want to bother checking\n> command-line flags at the point where the data is collected.  So, we'll want to\n> record the full URL and also a flag that indicates whether it is incognito (the\n> change I was proposing).\n> \n> The policy can then discard incognito URLs if appropriate--the log-everything\n> policy will keep the URLs, and the non-testing policy will blank them out. \n> Incognito scrubbing should be in a helper method, so it can also be applied to\n> the data forwarded directly to the API.  Or perhaps the ActivityLog can do the\n> scrubbing for both, depending on command-line flags.\n\nlgtm","disapproval":false,"date":"2013-07-23 21:57:07.275480","approval":true},{"sender":"mvrable@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","mpcomplete@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"text":"Matt,\n\nThis is the next of the activity log refactoring patches--this uses a single Action type instead of each of the subclasses from before.  I'm particularly interested in feedback on the API design for the Action class, but comments you have on any part of the patch are welcome.\n\nI'm still seeing a few test failures on the trybots so I'll be working on tracking down and fixing those, but I think this patch should otherwise be ready for you to review.\n\n--Michael Vrable","disapproval":false,"date":"2013-07-24 04:17:49.568200","approval":false},{"sender":"mpcomplete@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","mpcomplete@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"text":"lgtm\n\nhttps://codereview.chromium.org/19690003/diff/20001/chrome/browser/extensions/activity_log/activity_actions.cc\nFile chrome/browser/extensions/activity_log/activity_actions.cc (right):\n\nhttps://codereview.chromium.org/19690003/diff/20001/chrome/browser/extensions/activity_log/activity_actions.cc#newcode36\nchrome/browser/extensions/activity_log/activity_actions.cc:36: std::string GetURLForTabId(const int tab_id, Profile* profile) {\nnit: const is unnecessary for a POD type\n\nhttps://codereview.chromium.org/19690003/diff/20001/chrome/browser/extensions/activity_log/activity_actions.cc#newcode36\nchrome/browser/extensions/activity_log/activity_actions.cc:36: std::string GetURLForTabId(const int tab_id, Profile* profile) {\nnit: Url, not URL\n\nhttps://codereview.chromium.org/19690003/diff/20001/chrome/browser/extensions/activity_log/activity_actions.h\nFile chrome/browser/extensions/activity_log/activity_actions.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/20001/chrome/browser/extensions/activity_log/activity_actions.h#newcode53\nchrome/browser/extensions/activity_log/activity_actions.h:53: // logged, and determines which other fields are expected to filled in.\nto be* filled in","disapproval":false,"date":"2013-07-24 21:06:28.905690","approval":true},{"sender":"mvrable@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","mpcomplete@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"text":"https://codereview.chromium.org/19690003/diff/20001/chrome/browser/extensions/activity_log/activity_actions.cc\nFile chrome/browser/extensions/activity_log/activity_actions.cc (right):\n\nhttps://codereview.chromium.org/19690003/diff/20001/chrome/browser/extensions/activity_log/activity_actions.cc#newcode36\nchrome/browser/extensions/activity_log/activity_actions.cc:36: std::string GetURLForTabId(const int tab_id, Profile* profile) {\nOn 2013/07/24 21:06:29, Matt Perry wrote:\n> nit: const is unnecessary for a POD type\n\nDone.\n\nhttps://codereview.chromium.org/19690003/diff/20001/chrome/browser/extensions/activity_log/activity_actions.cc#newcode36\nchrome/browser/extensions/activity_log/activity_actions.cc:36: std::string GetURLForTabId(const int tab_id, Profile* profile) {\nOn 2013/07/24 21:06:29, Matt Perry wrote:\n> nit: Url, not URL\n\nDone.\n\nhttps://codereview.chromium.org/19690003/diff/20001/chrome/browser/extensions/activity_log/activity_actions.h\nFile chrome/browser/extensions/activity_log/activity_actions.h (right):\n\nhttps://codereview.chromium.org/19690003/diff/20001/chrome/browser/extensions/activity_log/activity_actions.h#newcode53\nchrome/browser/extensions/activity_log/activity_actions.h:53: // logged, and determines which other fields are expected to filled in.\nOn 2013/07/24 21:06:29, Matt Perry wrote:\n> to be* filled in\n\nDone.","disapproval":false,"date":"2013-07-25 00:08:42.093690","approval":false},{"sender":"commit-bot@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","mpcomplete@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/mvrable@chromium.org/19690003/74001","disapproval":false,"date":"2013-07-26 00:52:07.579510","approval":false},{"sender":"mvrable@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","mpcomplete@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"text":"James,\n\nI just noticed that there is one file in this patch that needs you or another reviewer to approve: chrome/browser/renderer_host/chrome_render_message_filter.cc\n\nThe only change is to remove two #include lines for header files that are deleted in the rest of this patch.  Would you be able to give a quick LGTM on this, if it looks reasonable?  The other files have already been reviewed.\n\n--Michael Vrable","disapproval":false,"date":"2013-07-26 04:04:50.051540","approval":false},{"sender":"commit-bot@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","mpcomplete@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"text":"Retried try job too often on chromium_presubmit for step(s) presubmit\nhttp://build.chromium.org/p/tryserver.chromium/buildstatus?builder=chromium_presubmit&number=17255","disapproval":false,"date":"2013-07-26 06:19:09.910210","approval":false},{"sender":"mvrable@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","mpcomplete@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"text":"On 2013/07/26 04:04:50, mvrable wrote:\n> James,\n> \n> I just noticed that there is one file in this patch that needs you or another\n> reviewer to approve:\n> chrome/browser/renderer_host/chrome_render_message_filter.cc\n> \n> The only change is to remove two #include lines for header files that are\n> deleted in the rest of this patch.  Would you be able to give a quick LGTM on\n> this, if it looks reasonable?  The other files have already been reviewed.\n> \n> --Michael Vrable\n\nJames: The change to chrome/browser/renderer_host/chrome_render_message_filter.cc is quite trivial, so I'm going to mark this as TBR by you (felt@ gave me instructions on how to do so).  I'll wait a few hours before sending to the commit queue in case you have comments you'd like to make before then.\n\n--Michael Vrable","disapproval":false,"date":"2013-07-26 16:57:06.979190","approval":false},{"sender":"jhawkins@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","mpcomplete@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"text":"lgtm","disapproval":false,"date":"2013-07-26 16:59:42.248940","approval":true},{"sender":"commit-bot@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","mpcomplete@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/mvrable@chromium.org/19690003/74001","disapproval":false,"date":"2013-07-26 17:06:38.075070","approval":false},{"sender":"commit-bot@chromium.org","recipients":["mvrable@chromium.org","felt@chromium.org","mpcomplete@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","chromium-apps-reviews@chromium.org","extensions-reviews@chromium.org"],"text":"Change committed as 213995","disapproval":false,"date":"2013-07-26 22:53:40.908600","approval":false}],"owner_email":"mvrable@chromium.org","private":false,"base_url":"http://git.chromium.org/chromium/src.git@refactor2","owner":"mvrable","subject":"Extension activity log database refactoring (step 3)","created":"2013-07-17 22:15:33.777310","patchsets":[1,3001,10001,17001,20001,39001,51001,54001,63001,74001],"modified":"2013-07-26 22:53:41.143590","closed":true,"commit":false,"issue":19690003}