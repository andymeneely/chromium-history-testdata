{"files":{"content/test/test_url_fetcher_factory.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":0,"messages":[],"id":9013,"is_binary":false},"content/common/net/url_fetcher_impl_unittest.cc":{"status":"M","num_chunks":7,"no_base_file":false,"property_changes":"","num_added":168,"num_removed":26,"messages":[],"id":9010,"is_binary":false},"content/test/test_url_fetcher_factory.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":5,"num_removed":0,"messages":[],"id":9012,"is_binary":false},"content/public/common/url_fetcher.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":0,"messages":[{"author":"Sam Kerner (Chrome)","author_email":"skerner@chromium.org","text":"Add something like: \n// To save to a temporary path, use SaveResponseToTemporaryFile().","draft":false,"lineno":173,"date":"2012-03-06 00:23:06.037959","left":false},{"author":"Sam Kerner (Chrome)","author_email":"skerner@chromium.org","text":"One tricky aspect of fetching a file is deleting it in error cases.  The current logic is designed for the typical user of a temp file.  We should think about how it ought to work for writing to a path.\n\n\nFor temp files, the file is owned by the URLFetcher (and will be deleted on error) until the following method is called:\n\nGetResponseAsFilePath(..., true);\n\nAt that point, the URLFetcher does not own the file, and will not write to it or delete it.\n\nIf this method is not called, the temp file gets removed when the URLFetcher is destructed.\n\n\nThe simplest thing you could do is to use the same semantics for files downloaded to a path, but you need to point this out because it might be surprising that the file gets deleted when the URLFetcher is destroyed.  A comment above the prototype of SaveResponseToFile(), pointing out that  a user must take ownership to avoid the removal of the file.  A comment on the delegate base class  URLFetcherDelegate would also be a good thing.","draft":false,"lineno":240,"date":"2012-03-06 00:23:06.038113","left":false},{"author":"hashimoto","author_email":"hashimoto@chromium.org","text":"On 2012/03/06 00:23:06, Sam Kerner (Chrome) wrote:\n> Add something like: \n> // To save to a temporary path, use SaveResponseToTemporaryFile().\n\nDone.","draft":false,"lineno":173,"date":"2012-03-06 10:16:01.964698","left":false},{"author":"hashimoto","author_email":"hashimoto@chromium.org","text":"On 2012/03/06 00:23:06, Sam Kerner (Chrome) wrote:\n> One tricky aspect of fetching a file is deleting it in error cases.  The current\n> logic is designed for the typical user of a temp file.  We should think about\n> how it ought to work for writing to a path.\n> \n> \n> For temp files, the file is owned by the URLFetcher (and will be deleted on\n> error) until the following method is called:\n> \n> GetResponseAsFilePath(..., true);\n> \n> At that point, the URLFetcher does not own the file, and will not write to it or\n> delete it.\n> \n> If this method is not called, the temp file gets removed when the URLFetcher is\n> destructed.\n> \n> \n> The simplest thing you could do is to use the same semantics for files\n> downloaded to a path, but you need to point this out because it might be\n> surprising that the file gets deleted when the URLFetcher is destroyed.  A\n> comment above the prototype of SaveResponseToFile(), pointing out that  a user\n> must take ownership to avoid the removal of the file.  A comment on the delegate\n> base class  URLFetcherDelegate would also be a good thing.\n\nGood point, added comments for SaveResponseToFileAtPath and SaveResponseToTemporaryFile.\n\nBTW, it looks like all of GetResponseAsFilePath's users are passing true as |take_ownership| now. (http://code.google.com/p/chromium/source/search?q=GetResponseAsFilePath)\nCan we remove this argument?\nI think it's good to remove this argument and switch to a simpler way where the file is removed only when a file error occurs.\nHow about doing this in a following patch?","draft":false,"lineno":240,"date":"2012-03-06 10:16:01.964925","left":false},{"author":"Sam Kerner (Chrome)","author_email":"skerner@chromium.org","text":"On 2012/03/06 10:16:01, hashimoto wrote:\n> On 2012/03/06 00:23:06, Sam Kerner (Chrome) wrote:\n> > One tricky aspect of fetching a file is deleting it in error cases.  The\n> current\n> > logic is designed for the typical user of a temp file.  We should think about\n> > how it ought to work for writing to a path.\n> > \n> > \n> > For temp files, the file is owned by the URLFetcher (and will be deleted on\n> > error) until the following method is called:\n> > \n> > GetResponseAsFilePath(..., true);\n> > \n> > At that point, the URLFetcher does not own the file, and will not write to it\n> or\n> > delete it.\n> > \n> > If this method is not called, the temp file gets removed when the URLFetcher\n> is\n> > destructed.\n> > \n> > \n> > The simplest thing you could do is to use the same semantics for files\n> > downloaded to a path, but you need to point this out because it might be\n> > surprising that the file gets deleted when the URLFetcher is destroyed.  A\n> > comment above the prototype of SaveResponseToFile(), pointing out that  a user\n> > must take ownership to avoid the removal of the file.  A comment on the\n> delegate\n> > base class  URLFetcherDelegate would also be a good thing.\n> \n> Good point, added comments for SaveResponseToFileAtPath and\n> SaveResponseToTemporaryFile.\n> \n> BTW, it looks like all of GetResponseAsFilePath's users are passing true as\n> |take_ownership| now.\n> (http://code.google.com/p/chromium/source/search?q=GetResponseAsFilePath)\n> Can we remove this argument?\n> I think it's good to remove this argument and switch to a simpler way where the\n> file is removed only when a file error occurs.\n> How about doing this in a following patch?\n\nSounds good to me.  When I created his method, the extensions updater code needed to call it without taking ownership.  I see the code has been cleaned up and no longer does this.\n\n","draft":false,"lineno":240,"date":"2012-03-06 19:44:31.347901","left":false}],"id":9011,"is_binary":false},"content/common/net/url_fetcher_impl.cc":{"status":"M","num_chunks":6,"no_base_file":false,"property_changes":"","num_added":51,"num_removed":9,"messages":[{"author":"Sam Kerner (Chrome)","author_email":"skerner@chromium.org","text":"Looks like the signal that you want a specific file (and not a temp file) is the emptiness of response_destination_file_path_ .  This if block is clear today, but I worry that as we make the code more complex, this will no longer be easy to understand.\n\nCould you make response_destination_'s type one of { STRING, TEMP_FILE, PERMANENT_FILE}?  This would make the differences between temp and permanent paths easy to see.","draft":false,"lineno":625,"date":"2012-03-06 00:23:06.037464","left":false},{"author":"Sam Kerner (Chrome)","author_email":"skerner@chromium.org","text":"The name of this method should distinguish it from saving to a temp path.  How about SaveResponseToFileAtPath(const FilePath& ...) ?","draft":false,"lineno":1068,"date":"2012-03-06 00:23:06.037633","left":false},{"author":"Sam Kerner (Chrome)","author_email":"skerner@chromium.org","text":"Here is another example where adding a new enum value would enhance clarity.\n","draft":false,"lineno":1072,"date":"2012-03-06 00:23:06.037796","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"Just doublechecking...is this what we want? We always create the file even if it already exists? Sounds potentially dangerous.","draft":false,"lineno":357,"date":"2012-03-06 02:33:04.180022","left":false},{"author":"hashimoto","author_email":"hashimoto@chromium.org","text":"On 2012/03/06 02:33:04, willchan wrote:\n> Just doublechecking...is this what we want? We always create the file even if it\n> already exists? Sounds potentially dangerous.\n\nI think this is OK because zip::ZipReader is doing the same thing.\nBut if this is not an encouraged thing to do in code under content/, I would like to\n 1. Always make error when the file already exists, instead of always overwriting it, or\n 2. Add |file_flags| argument to SaveResponseToFile to allow user code to determine the behavior.\nWhat do you think?","draft":false,"lineno":357,"date":"2012-03-06 10:16:01.963809","left":false},{"author":"hashimoto","author_email":"hashimoto@chromium.org","text":"On 2012/03/06 00:23:06, Sam Kerner (Chrome) wrote:\n> Looks like the signal that you want a specific file (and not a temp file) is the\n> emptiness of response_destination_file_path_ .  This if block is clear today,\n> but I worry that as we make the code more complex, this will no longer be easy\n> to understand.\n> \n> Could you make response_destination_'s type one of { STRING, TEMP_FILE,\n> PERMANENT_FILE}?  This would make the differences between temp and permanent\n> paths easy to see.\n\nSounds good, done.","draft":false,"lineno":625,"date":"2012-03-06 10:16:01.964033","left":false},{"author":"hashimoto","author_email":"hashimoto@chromium.org","text":"On 2012/03/06 00:23:06, Sam Kerner (Chrome) wrote:\n> The name of this method should distinguish it from saving to a temp path.  How\n> about SaveResponseToFileAtPath(const FilePath& ...) ?\n\nSounds good, done.","draft":false,"lineno":1068,"date":"2012-03-06 10:16:01.964190","left":false},{"author":"hashimoto","author_email":"hashimoto@chromium.org","text":"On 2012/03/06 00:23:06, Sam Kerner (Chrome) wrote:\n> Here is another example where adding a new enum value would enhance clarity.\n\nDone.","draft":false,"lineno":1072,"date":"2012-03-06 10:16:01.964400","left":false}],"id":9008,"is_binary":false},"content/common/net/url_fetcher_impl.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":0,"messages":[{"author":"kuan","author_email":"kuan@chromium.org","text":"can u add stop_caching boolean as a parameter?\notherwise, we'll need to add one more method to the interface just to stop caching.","draft":false,"lineno":60,"date":"2012-03-06 02:01:33.205171","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"On 2012/03/06 02:01:33, kuan wrote:\n> can u add stop_caching boolean as a parameter?\n> otherwise, we'll need to add one more method to the interface just to stop\n> caching.\n\nWhat caching are you talking about? Browser caching? There's already a SetLoadFlags() interface, and there is a net::LoadFlag to control caching.","draft":false,"lineno":60,"date":"2012-03-06 02:33:04.180258","left":false}],"id":9009,"is_binary":false}},"owner_email":"hashimoto@chromium.org","owner":"hashimoto","message":"_","try_job_results":[],"created":"2012-03-05 14:17:38.498224","url":null,"num_comments":15,"modified":"2012-03-06 19:44:31.374173","patchset":6009,"issue":9585009}