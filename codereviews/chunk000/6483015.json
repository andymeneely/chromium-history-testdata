{"description":"Modify about:flags to support switches with values.\n\nabout:flags right now doesn't support switches like \"--foo=bar\".  It only handles\nsimple switches like \"--quux\".  The prerender feature has a few options, and to avoid\nconfusing contradictory mixes of simple switches, we want to use valued switches.  But for\nthat, we'll need lab support.\n\nBUG=none\nTEST=AboutFlagsTest.*\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=74599","cc":["chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"reviewers":["thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org"],"messages":[{"sender":"gavinp@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"I came across another limitation of about_flags wrt switches that have values in my hacking last night, this CL solves that issue.\n\nAlso, there may well be a bug here to talk about in CommandLine, since cl.AppendSwitch(\"foo=bar\") does something very different than cl.AppendSwitch(\"foo\", \"bar\"), even though the resulting *string* you get from the former would parse into the CommandLine shown in the latter.","disapproval":false,"date":"2011-02-10 15:59:04.139675","approval":false},{"sender":"cbentzel@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"Most important one is the comment labeled BUG:\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc\nFile chrome/browser/about_flags.cc (right):\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode539\nchrome/browser/about_flags.cc:539: NameToSwitchMap;\nNameToSwitchValueMap?\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode545\nchrome/browser/about_flags.cc:545: std::make_pair(e.command_line_switch, \"\");\nBUG: std::make_pair(e.command_line_switch, e.command_line_value)\n\nPlease add unit test for this case if not already present.\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode572\nchrome/browser/about_flags.cc:572: flags_switches_[switch_and_value_pair.first] = switch_and_value_pair.second;\nShould this check that switch_and_value_pair.first is not already in flags_switches_? At least a DCHECK?\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.h\nFile chrome/browser/about_flags.h (right):\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.h#newcode68\nchrome/browser/about_flags.h:68: // The commandline switch and value that's added when this lab is active. This\nNit: that are rather than that's","disapproval":false,"date":"2011-02-10 16:10:07.799329","approval":false},{"sender":"sky@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc\nFile chrome/browser/about_flags.cc (right):\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode27\nchrome/browser/about_flags.cc:27: Experiment::SINGLE_VALUE, command_line_switch, switch_value, NULL, 0\nThis hsould be indented by 4 (and 29).\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode545\nchrome/browser/about_flags.cc:545: std::make_pair(e.command_line_switch, \"\");\nstd::string()\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode555\nchrome/browser/about_flags.cc:555: flags_switches_.insert(std::make_pair(switches::kFlagSwitchesBegin, \"\"));\nstd::string()\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode575\nchrome/browser/about_flags.cc:575: flags_switches_.insert(std::make_pair(switches::kFlagSwitchesEnd, \"\"));\nstd::string()","disapproval":false,"date":"2011-02-10 16:42:40.242195","approval":false},{"sender":"thakis@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc\nFile chrome/browser/about_flags.cc (right):\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode26\nchrome/browser/about_flags.cc:26: #define SINGLE_VALUE_TYPE(command_line_switch, switch_value) \\\nGiven that almost no of the existing flags need this, please don't pass switch_value as argument, hardcode \"\". If you need the parameter, have a new macro for that (you could implement SINGLE_VALUE_TYPE in terms of the new macro of course)\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode555\nchrome/browser/about_flags.cc:555: flags_switches_.insert(std::make_pair(switches::kFlagSwitchesBegin, \"\"));\nOn 2011/02/10 16:42:40, sky wrote:\n> std::string()\n\nWha? Why?","disapproval":false,"date":"2011-02-10 17:06:26.301135","approval":false},{"sender":"gavinp@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"Thanks everyone for all the fast reviews!  I'll have another upload ready shortly.\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc\nFile chrome/browser/about_flags.cc (right):\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode26\nchrome/browser/about_flags.cc:26: #define SINGLE_VALUE_TYPE(command_line_switch, switch_value) \\\nOn 2011/02/10 17:06:26, Nico wrote:\n> Given that almost no of the existing flags need this, please don't pass\n> switch_value as argument, hardcode \"\". If you need the parameter, have a new\n> macro for that (you could implement SINGLE_VALUE_TYPE in terms of the new macro\n> of course)\n\nDone.\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode27\nchrome/browser/about_flags.cc:27: Experiment::SINGLE_VALUE, command_line_switch, switch_value, NULL, 0\nOn 2011/02/10 16:42:40, sky wrote:\n> This hsould be indented by 4 (and 29).\n\nDone.\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode539\nchrome/browser/about_flags.cc:539: NameToSwitchMap;\nOn 2011/02/10 16:10:07, cbentzel wrote:\n> NameToSwitchValueMap? \n\nNameToSwitchAndValueMap\n\nDone.\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode545\nchrome/browser/about_flags.cc:545: std::make_pair(e.command_line_switch, \"\");\nOn 2011/02/10 16:10:07, cbentzel wrote:\n> BUG: std::make_pair(e.command_line_switch, e.command_line_value)\n> \n> Please add unit test for this case if not already present.\n\nDone.\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode555\nchrome/browser/about_flags.cc:555: flags_switches_.insert(std::make_pair(switches::kFlagSwitchesBegin, \"\"));\nOn 2011/02/10 17:06:26, Nico wrote:\n> On 2011/02/10 16:42:40, sky wrote:\n> > std::string()\n> \n> Wha? Why?\n\nI think sky's point is that std::make_pair is implicitly specialising, and making a pair<char*,char*> which is getting cast to a pair<string, string>, which ends up calling the cast piecewise making the new pair.   switches::kFlagSwitchesBegin is a char* too, so presumably we'd want to wrap that in std::string() too, otherwise we're just doing it by halves.\n\nAlternatively and equivalently, I think I'll just explicitly instantiate make_pair with <std::string, std::string>, which avoids the cast of a pair, instead just doing casts of the arguments as they go in.  Does that make sense?  And sure, move to std::string() to construct the empty string.\n\nI just spoke about this with sky, and we agreed, I'll do this everywhere he pointed this out in the next upload.\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.cc#newcode572\nchrome/browser/about_flags.cc:572: flags_switches_[switch_and_value_pair.first] = switch_and_value_pair.second;\nOn 2011/02/10 16:10:07, cbentzel wrote:\n> Should this check that switch_and_value_pair.first is not already in\n> flags_switches_? At least a DCHECK?\n\nDone.\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.h\nFile chrome/browser/about_flags.h (right):\n\nhttp://codereview.chromium.org/6483015/diff/1004/chrome/browser/about_flags.h#newcode68\nchrome/browser/about_flags.h:68: // The commandline switch and value that's added when this lab is active. This\nOn 2011/02/10 16:10:07, cbentzel wrote:\n> Nit: that are rather than that's\n\nDone.","disapproval":false,"date":"2011-02-10 18:29:06.846707","approval":false},{"sender":"thakis@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.cc\nFile chrome/browser/about_flags.cc (right):\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.cc#newcode539\nchrome/browser/about_flags.cc:539: \ntypedef std::pair<std::string, std::string> StringPair;?\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.cc#newcode547\nchrome/browser/about_flags.cc:547: std::pair<std::string, std::string>(e.command_line_switch,\nuse std::make_pair\n\nalso elsewhere\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.cc#newcode561\nchrome/browser/about_flags.cc:561: std::string()));\nfwiw, i prefer \"\" over std::string(). I hope sky will say why he recommends std::string()\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.cc#newcode577\nchrome/browser/about_flags.cc:577: switch_and_value_pair.second);\nIs AppendSwitchWithASCII smart about a value of \"\"? does it add \"--flag=\" or \"--flag\" in that case?\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.h\nFile chrome/browser/about_flags.h (right):\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.h#newcode47\nchrome/browser/about_flags.h:47: const char* command_line_value;\ncomment that value is \"\" for simple switches","disapproval":false,"date":"2011-02-10 19:34:54.256487","approval":false},{"sender":"thakis@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"LG, the other comments were just nits.\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.cc\nFile chrome/browser/about_flags.cc (right):\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.cc#newcode577\nchrome/browser/about_flags.cc:577: switch_and_value_pair.second);\nOn 2011/02/10 19:34:54, Nico wrote:\n> Is AppendSwitchWithASCII smart about a value of \"\"? does it add \"--flag=\" or\n> \"--flag\" in that case?\n\ngavinp says it is in gtalk","disapproval":false,"date":"2011-02-10 19:43:56.783350","approval":false},{"sender":"cbentzel@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"LGTM","disapproval":false,"date":"2011-02-10 19:45:54.682615","approval":true},{"sender":"gavinp@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.cc\nFile chrome/browser/about_flags.cc (right):\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.cc#newcode547\nchrome/browser/about_flags.cc:547: std::pair<std::string, std::string>(e.command_line_switch,\nOn 2011/02/10 19:34:54, Nico wrote:\n> use std::make_pair\n> \n> also elsewhere\n\nIn the first upload, see the comments around line 555.  We're explicitly specialising here to dodge the implicit casts that created (from gtalk with sky).\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.cc#newcode577\nchrome/browser/about_flags.cc:577: switch_and_value_pair.second);\nOn 2011/02/10 19:34:54, Nico wrote:\n> Is AppendSwitchWithASCII smart about a value of \"\"? does it add \"--flag=\" or\n> \"--flag\" in that case?\n\nYes.  Also, adding a unit_test.\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.h\nFile chrome/browser/about_flags.h (right):\n\nhttp://codereview.chromium.org/6483015/diff/11001/chrome/browser/about_flags.h#newcode47\nchrome/browser/about_flags.h:47: const char* command_line_value;\nOn 2011/02/10 19:34:54, Nico wrote:\n> comment that value is \"\" for simple switches\n\nDone.","disapproval":false,"date":"2011-02-10 19:48:17.174708","approval":false},{"sender":"thakis@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"I think writing std::string() is weird. If the only reason is to not have implicit casts, then I'm against this.\n\n(but I won't block the CL on this.)","disapproval":false,"date":"2011-02-10 21:10:43.099224","approval":false},{"sender":"sky@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"I am told using \"\" instead of std::string() results in less efficient\ncode and have been dinged on it in paste reviews.\n\n  -Scott\n\nOn Thu, Feb 10, 2011 at 1:10 PM,  <thakis@chromium.org> wrote:\n> I think writing std::string() is weird. If the only reason is to not have\n> implicit casts, then I'm against this.\n>\n> (but I won't block the CL on this.)\n>\n> http://codereview.chromium.org/6483015/\n>\n","disapproval":false,"date":"2011-02-10 21:51:43.716202","approval":false},{"sender":"sky@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"If you got Nico to sign off on this, you don't need me. In the future one of us is good enough.\n\n  -Scott","disapproval":false,"date":"2011-02-10 21:52:40.088147","approval":false},{"sender":"gavinp@chromium.org","recipients":["gavinp@chromium.org","thakis@chromium.org","sky@chromium.org","evan@chromium.org","cbentzel@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"This is the final version I intend to land; there's some wstring related fun in the unit test, related to the assertions I added about command line appending working right.\n\nIf there's no objections, this will go in tomorrow morning into a green tree.  \n\nThanks everyone!","disapproval":false,"date":"2011-02-11 03:27:52.193899","approval":false}],"owner_email":"gavinp@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"gavinp","subject":"Modify about:flags to support switches with values.","created":"2011-02-10 15:48:22.332675","patchsets":[1004,11001,10004,13003],"modified":"2011-06-24 19:22:32.577383","closed":true,"commit":false,"issue":6483015}