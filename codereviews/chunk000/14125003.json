{"description":"Do not roll back to SSL 3.0 for Google properties.\n\nSSL 3.0 fallback for Google properties can be enabled again with --enable-unrestricted-ssl3-fallback.\n\nDelete the obsolete SSL 3.0 fallback on TLS decompression failure.\n\nBUG=230171\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=195335","cc":["chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"reviewers":["agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","thestig@chromium.org"],"messages":[{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Hi Adam,\n\nThis CL implements\n\n\"The client MUST NOT roll back to an older version than the server has indicated, even if the connection handshake failed.  That is, if the server indicates support for TLS 1.1, but the connection fails, then the client MUST NOT attempt to connect to the server using TLS 1.0, but allow the connection to fail.\"\n\nWhile it looks like Pettersen suggests that client only remembers server's version until the handshake is successful, I decide to make it one step further: Chrome will persist server's version as a part of HSTS.\n\nFor current preloaded HSTS domains I use TLSv1.0 as the minimum version for Google's properties, and use SSLv3.0 for the rest. For these domains Chrome would never update the preloaded versions, regardless of versions used in handshakes. That means even if Chrome uses TLSv1.1 to connect to www.google.com, the minimum version that it would use for new connections is still TLSv1.0.\n\nFor non-preloaded domains Chrome will extract the maximum version from successful handshakes, and use it as the minimum protocol for subsequent connections. There is a risk of DoS here: if Chrome extracts version from an unauthenticated handshake session (i.e., before it gets and verifies Finished) then MITM attackers can set the version to TLSv1.2, and deny user access to any non TLSv1.2 servers permanently. Currently I extract the version within SSLClientSocketNSS::DoVerifyCertComplete, but I don't know if the handshake is finished at that point. Please advise.\n\nAnyway if you think this CL is too radical, I can revise it to Pettersen's original suggestion.\n\nCheers\n\nThai.","disapproval":false,"date":"2013-04-11 01:14:03.136410","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Some explanations and questions.\n\nhttps://codereview.chromium.org/14125003/diff/1/chrome/browser/net/transport_security_persister.h\nFile chrome/browser/net/transport_security_persister.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/1/chrome/browser/net/transport_security_persister.h#newcode80\nchrome/browser/net/transport_security_persister.h:80: //     \"ssl_version\": integer\nshould be ssl_version_min. will fix in another patchset.\n\nhttps://codereview.chromium.org/14125003/diff/1/net/http/transport_security_state.h\nFile net/http/transport_security_state.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/1/net/http/transport_security_state.h#newcode287\nnet/http/transport_security_state.h:287: friend class SSLClientSocketNSS;\nThis is ugly. Should I make |EnableHost| public?\n\nhttps://codereview.chromium.org/14125003/diff/1/net/http/transport_security_state_static.h\nFile net/http/transport_security_state_static.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/1/net/http/transport_security_state_static.h#newcode383\nnet/http/transport_security_state_static.h:383: {25, true, \"\\013pinningtest\\007appspot\\003com\", false, kTestPins, DOMAIN_APPSPOT_COM, SSL_CONNECTION_VERSION_TLS1 },\nSome lines have been already longer than 80 chars. I don't make them worse.","disapproval":false,"date":"2013-04-11 01:31:52.871170","approval":false},{"sender":"agl@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"This is a fairly aggressive change, but perhaps it would be interesting to dip our toe into the dev channel with it.\n\nAt a high level, I would drop the persistence changes in this CL: don't try to learn minimum versions at all, just use the preloaded table for now. I think that will remove half the code and most of the complexity.\n\nI'm going to avoid a review on the small scale for now in light of the annoying, large changes that I've suggested :)\n\nI also wonder about a command line flag to disable this so that we can ask bug reporters to try with the flag and see if that solves their problem.\n\nhttps://codereview.chromium.org/14125003/diff/1/chrome/browser/net/transport_security_persister.cc\nFile chrome/browser/net/transport_security_persister.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/1/chrome/browser/net/transport_security_persister.cc#newcode82\nchrome/browser/net/transport_security_persister.cc:82: const char kSSLVersion30[] = \"sslv3.0\";\nWe already have a convention for these strings I'm afraid: \"ssl3\", \"tls1\", \"tls1.1\", \"tls1.2\".","disapproval":false,"date":"2013-04-11 13:48:57.082810","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Adam,\n\nI've added a switch to control the enforcement of minimum SSL versions for preloaded domains.\n\nI don't remove the learning versions code, but I turn it off with another switch. I think it may be useful to map this switch (and the above as well) to some flag in configuration policy, and turn it on for Googlers to see how it affects us.\n\nThis CL is more complex than I expect (and it is a somewhat steep learning curve for me :-P), so please let me know if you have any suggestions to make it simpler (rather than removing the learning mode).\n\nThanks!\n\nThai.","disapproval":false,"date":"2013-04-12 09:08:46.549470","approval":false},{"sender":"agl@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Since it's unclear whether requiring >= TLS 1.0 for Google sites is feasible, this isn't the first step.\n\nThe first step would just involve something like the net/http/http_network_transaction.[cc|h] change and the command line flag. I didn't think of this yesterday, but we don't need to change the preloaded JSON at this point either - we can just say that sites with preloaded pins need >= TLS 1.0.\n\nThat sort of minimal change can run in dev/beta and we'll see how much breakage results before doing anything else.","disapproval":false,"date":"2013-04-12 14:32:52.749130","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"On 2013/04/12 14:32:52, agl wrote:\n> Since it's unclear whether requiring >= TLS 1.0 for Google sites is feasible,\n> this isn't the first step.\n> \n> The first step would just involve something like the\n> net/http/http_network_transaction.[cc|h] change and the command line flag. I\n> didn't think of this yesterday, but we don't need to change the preloaded JSON\n> at this point either - we can just say that sites with preloaded pins need >=\n> TLS 1.0.\n> \n> That sort of minimal change can run in dev/beta and we'll see how much breakage\n> results before doing anything else.\n\nOkay. I don't think we really want to enforce TLS for all preloaded sites. Maybe just for Google's properties?\n\nI will have a PS ready soon.","disapproval":false,"date":"2013-04-12 20:29:49.117610","approval":false},{"sender":"agl@chromium.org","recipients":["reply@chromiumcodereview-hr.appspotmail.com"],"text":"On Fri, Apr 12, 2013 at 4:29 PM,  <thaidn@google.com> wrote:\r\n> Okay. I don't think we really want to enforce TLS for all preloaded sites.\r\n> Maybe\r\n> just for Google's properties?\r\n\r\nSure. It would be possible to test whether it's a Google property by\r\ntesting the pin values for now, rather than adding a value to the\r\nJSON.\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n","disapproval":false,"date":"2013-04-12 20:31:15.780830","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Adam,\n\nI've made the changes that you suggested. Please review PS 3.\n\nCheers\n\nThai.","disapproval":false,"date":"2013-04-12 23:30:02.599960","approval":false},{"sender":"agl@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"https://codereview.chromium.org/14125003/diff/19001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc\nFile chrome/browser/net/ssl_config_service_manager_pref_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode227\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:227: // * |ssl_version_min_learning_enabled| is false.\nThis comment line looks to be a left-over.\n\nhttps://codereview.chromium.org/14125003/diff/19001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode266\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:266: bool tmp;\nI'd use a real variable name rather than just |tmp| - we do above.\n\nhttps://codereview.chromium.org/14125003/diff/19001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode322\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:322: bool tmp;\nditto.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.cc#newcode187\nnet/http/http_network_transaction.cc:187: server_ssl_config_.version_fallback;\nI don't think version_fallback makes sense here. It's not like we can have fallen back at this point.\n\n|sni_available| is designed to remove HSTS requirements when SNI isn't sent (i.e. SSLv3) and we didn't want to do that under the attackers control - i.e. when falling back.\n\nIn this case, since we're setting TLSv1 to be the minimum version then SNI is always sent. Thus I think this should always just be true.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.h\nFile net/http/http_network_transaction.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.h#newcode89\nnet/http/http_network_transaction.h:89: SSLConfig& server_ssl_config() { return server_ssl_config_; }\nserver_ssl_config_for_testing()\n\n(If it's a testing function then let's make it really clear.)\n\nAlternatively, it looks like the style here is to use FRIEND_TEST_ALL_PREFIXES for the tests.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction_ssl_unittest.cc\nFile net/http/http_network_transaction_ssl_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction_ssl_unittest.cc#newcode28\nnet/http/http_network_transaction_ssl_unittest.cc:28: class SimpleProxyConfigService : public ProxyConfigService {\nLooks like this is the third copy of this. Probably time to give it it's own file and header.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction_ssl_unittest.cc#newcode57\nnet/http/http_network_transaction_ssl_unittest.cc:57: public:\nindentation of this class is incorrect.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/ssl/ssl_config_service.cc\nFile net/ssl/ssl_config_service.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/ssl/ssl_config_service.cc#newcode190\nnet/ssl/ssl_config_service.cc:190: new_config.disabled_cipher_suites) ||\nThis looks like a stray space.","disapproval":false,"date":"2013-04-15 15:23:51.731220","approval":false},{"sender":"agl@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"p.s. needs a change description.","disapproval":false,"date":"2013-04-15 15:24:05.828800","approval":false},{"sender":"agl@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Chris makes a good point on the bug: there may be MITM proxies that only implement SSLv3.  Preventing fallback would allow them to continue to work, but setting the minimum version breaks them. Perhaps the change should disable fallback rather than change the min version (grep the code for where version_fallback is set).","disapproval":false,"date":"2013-04-15 15:27:47.620880","approval":false},{"sender":"rsleevi@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"https://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.cc#newcode190\nnet/http/http_network_transaction.cc:190: if (TransportSecurityState::IsGooglePinnedProperty(host, sni_available)) {\nnit: net/ style is to omit braces on one-line if statements.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.h\nFile net/http/http_network_transaction.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.h#newcode89\nnet/http/http_network_transaction.h:89: SSLConfig& server_ssl_config() { return server_ssl_config_; }\nOn 2013/04/15 15:23:51, agl wrote:\n> server_ssl_config_for_testing()\n> \n> (If it's a testing function then let's make it really clear.)\n> \n> Alternatively, it looks like the style here is to use FRIEND_TEST_ALL_PREFIXES\n> for the tests.\n\n+1 to either FRIEND_TEST_ALL_PREFIXES or friending the test fixture and adding a protected getter to the test fixture for the individual tests.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction_ssl_unittest.cc\nFile net/http/http_network_transaction_ssl_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction_ssl_unittest.cc#newcode110\nnet/http/http_network_transaction_ssl_unittest.cc:110: SSL_PROTOCOL_VERSION_TLS1);\nstyle: EXPECT_* macros follow the EXPECT_*(expected, actual), but your EXPECT_EQ for SSL_PROTOCOL_VERSION* are in the form of EXPECT_*(actual, expected).\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/ssl/ssl_config_service.h\nFile net/ssl/ssl_config_service.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/ssl/ssl_config_service.h#newcode103\nnet/ssl/ssl_config_service.h:103: // preloaded HSTS entries.\nComment nit: Chromium comments discourage the use of pronouns - see https://groups.google.com/a/chromium.org/d/topic/chromium-dev/NH-S6KCkr2M/discussion\n\n\n\"True if the enforcement of the minimum SSL/TLS version for preloaded HSTS entries is disabled.\"","disapproval":false,"date":"2013-04-15 18:03:28.890270","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Thanks for the reviews, Adam and Ryan! I've made the changes that you suggested. I also implement cbentzel@'s suggestion as well. Please take another look.\n\nhttps://codereview.chromium.org/14125003/diff/19001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc\nFile chrome/browser/net/ssl_config_service_manager_pref_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode227\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:227: // * |ssl_version_min_learning_enabled| is false.\nOn 2013/04/15 15:23:51, agl wrote:\n> This comment line looks to be a left-over.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/19001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode266\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:266: bool tmp;\nOn 2013/04/15 15:23:51, agl wrote:\n> I'd use a real variable name rather than just |tmp| - we do above.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/19001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode322\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:322: bool tmp;\nOn 2013/04/15 15:23:51, agl wrote:\n> ditto.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.cc#newcode187\nnet/http/http_network_transaction.cc:187: server_ssl_config_.version_fallback;\nOn 2013/04/15 15:23:51, agl wrote:\n> I don't think version_fallback makes sense here. It's not like we can have\n> fallen back at this point.\n> \n> |sni_available| is designed to remove HSTS requirements when SNI isn't sent\n> (i.e. SSLv3) and we didn't want to do that under the attackers control - i.e.\n> when falling back.\n> \n> In this case, since we're setting TLSv1 to be the minimum version then SNI is\n> always sent. Thus I think this should always just be true.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.cc#newcode190\nnet/http/http_network_transaction.cc:190: if (TransportSecurityState::IsGooglePinnedProperty(host, sni_available)) {\nOn 2013/04/15 18:03:28, Ryan Sleevi wrote:\n> nit: net/ style is to omit braces on one-line if statements.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.h\nFile net/http/http_network_transaction.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction.h#newcode89\nnet/http/http_network_transaction.h:89: SSLConfig& server_ssl_config() { return server_ssl_config_; }\nOn 2013/04/15 15:23:51, agl wrote:\n> server_ssl_config_for_testing()\n> \n> (If it's a testing function then let's make it really clear.)\n> \n> Alternatively, it looks like the style here is to use FRIEND_TEST_ALL_PREFIXES\n> for the tests.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction_ssl_unittest.cc\nFile net/http/http_network_transaction_ssl_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction_ssl_unittest.cc#newcode28\nnet/http/http_network_transaction_ssl_unittest.cc:28: class SimpleProxyConfigService : public ProxyConfigService {\nOn 2013/04/15 15:23:51, agl wrote:\n> Looks like this is the third copy of this. Probably time to give it it's own\n> file and header.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/http/http_network_transaction_ssl_unittest.cc#newcode57\nnet/http/http_network_transaction_ssl_unittest.cc:57: public:\nOn 2013/04/15 15:23:51, agl wrote:\n> indentation of this class is incorrect.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/ssl/ssl_config_service.cc\nFile net/ssl/ssl_config_service.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/19001/net/ssl/ssl_config_service.cc#newcode190\nnet/ssl/ssl_config_service.cc:190: new_config.disabled_cipher_suites) ||\nOn 2013/04/15 15:23:51, agl wrote:\n> This looks like a stray space.\n\nDone.","disapproval":false,"date":"2013-04-16 00:38:16.188930","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"https://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc\nFile net/http/http_network_transaction_ssl_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode33\nnet/http/http_network_transaction_ssl_unittest.cc:33: net::test_spdy3::SpdySessionDependencies session_deps;\nPlease let me know if you think I shouldn't reuse this class.","disapproval":false,"date":"2013-04-16 00:39:11.973210","approval":false},{"sender":"agl@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"I think this is pretty close to landing, although rsleevi should take a look first. This review is only cursory because I've got to run in a sec.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.cc#newcode1226\nnet/http/http_network_transaction.cc:1226: if (server_ssl_config_.version_max == SSL_PROTOCOL_VERSION_TLS1 &&\nCan't think chunk live before the switch() and thus remove the need to duplicate it below?\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.h\nFile net/http/http_network_transaction.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.h#newcode89\nnet/http/http_network_transaction.h:89: SSLConfig& server_ssl_config_for_testing() { return server_ssl_config_; }\nLooks like rsleevi want's a friend test I'm afraid :)","disapproval":false,"date":"2013-04-16 15:19:23.921260","approval":false},{"sender":"rsleevi@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"https://codereview.chromium.org/14125003/diff/5003/chrome/common/chrome_switches.cc\nFile chrome/common/chrome_switches.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/chrome/common/chrome_switches.cc#newcode324\nchrome/common/chrome_switches.cc:324: // For preloaded Google's properties the minimum version will be TLS 1.0.\ns/'s//\ns/will be/is/\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.cc#newcode1226\nnet/http/http_network_transaction.cc:1226: if (server_ssl_config_.version_max == SSL_PROTOCOL_VERSION_TLS1 &&\nOn 2013/04/16 15:19:24, agl wrote:\n> Can't think chunk live before the switch() and thus remove the need to duplicate\n> it below?\n\nYeah, I think this switch can/should be re-organized a little as part of this\n\nuint16 version_before = server_ssl_config_.version_max;\nuint16 version_max = version_before;\nswitch (error) {\n  case ...:\n  case ...:\n    if (cond_a) {\n       version_max = X\n    }\n    break;\n  case ...:\n  case ...:\n    if (cond_b) {\n      version_max = y;\n    }\n    break;\n}\n\nif (version_max <= SSL3 && Google) {\n  // It would be good to UMA this here, right? Or are we\n  // assuming this will always fail (since UMA => Google)\n  // If it doesn't make sense, then just change the if/else\n  // into an \"if (x && !(version_max... && Google))\"\n} else if (version_max != version_before) {\n  server_ssl_config_.version_max = version_max;\n  net_log_.AddEvent(...)\n  server_ssl_config_.version_fallback = true;\n  ResetConn...()\n  error = OK;\n}\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.h\nFile net/http/http_network_transaction.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.h#newcode89\nnet/http/http_network_transaction.h:89: SSLConfig& server_ssl_config_for_testing() { return server_ssl_config_; }\nOn 2013/04/16 15:19:24, agl wrote:\n> Looks like rsleevi want's a friend test I'm afraid :)\n\nEither friend the test or friend the harness.\n\nI would recommend friending the harness (eg:\nfriend class HttpNetworkTransactionTest) over the individual test.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc\nFile net/http/http_network_transaction_ssl_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode33\nnet/http/http_network_transaction_ssl_unittest.cc:33: net::test_spdy3::SpdySessionDependencies session_deps;\nOn 2013/04/16 00:39:12, thaidn_google wrote:\n> Please let me know if you think I shouldn't reuse this class.\n\nYou shouldn't re-use this class :)\n\nYou could use something similar to http://src.chromium.org/viewvc/chrome/trunk/src/net/http/http_network_layer_unittest.cc?revision=HEAD for these bits, AIUI.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode35\nnet/http/http_network_transaction_ssl_unittest.cc:35: // |ssl_data1| contains the data for the first SSL handshake that will\ncomment nit: you intermix comments of \"first SSL handshake\" (when talking about TLS) and \"first handshake\" (when talking about SSL3)\n\nI would suggest consistently saying \"first handshake\", and then making sure the comment explains *which* version you expect to be negotiated.\n\nFurther, it seems like the # of handshakes is coupled to the TLS versions you're using (eg: TLS 1.1 -> TLS 1.0 -> SSL3), which will then create issues if/when we change the default to include TLS 1.2 (since now you have an ADDITIONAL set of fallbacks)\n\nSeems like this test harness should explicitly configure its supported TLS version to 1.0, so that there is only ever one fallback - to SSL3.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode70\nnet/http/http_network_transaction_ssl_unittest.cc:70: rv = callback.WaitForResult();\nWe're trying to phase out this pattern in existing code.\n\nYou can either do:\n\nint rv = callback.GetResult(trans->Start(...)) or\n\nint rv = trans->Start();\nrv = callback.GetResult(rv);\n\nThe former is preferable.\n\nThe point of this is that the assertion that rv == ERR_IO_PENDING isn't strictly a requirement of the code under test. For example, you could just as well change line 38/48 to be SYNCHRONOUS completions and the test (should) still function correctly.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode71\nnet/http/http_network_transaction_ssl_unittest.cc:71: EXPECT_EQ(net::ERR_SSL_PROTOCOL_ERROR, rv);\nYou're in net (line 18), so you don't need the net:: prefix anywhere in this file.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode165\nnet/http/http_network_transaction_ssl_unittest.cc:165: // fail.\nThis comment seems entirely incorrect (and thus creates issues for the comment on 171-173).\n\nWhere is it ever set that the failure is due to client certs? You're just flagging a protocol error.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode173\nnet/http/http_network_transaction_ssl_unittest.cc:173: // Chrome will attempt to handshake 3 times, but there are just 2 handshake\nnit: s/Chrome/Chromium/\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode180\nnet/http/http_network_transaction_ssl_unittest.cc:180: new HttpNetworkTransaction(DEFAULT_PRIORITY, session));\nstyle: indentation\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode185\nnet/http/http_network_transaction_ssl_unittest.cc:185: callback.callback(), BoundNetLog());\nstyle: indentation\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/ssl/ssl_config_service.h\nFile net/ssl/ssl_config_service.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/ssl/ssl_config_service.h#newcode58\nnet/ssl/ssl_config_service.h:58: static uint16 SSLProtocolVersionFromString(const std::string& version_str);\nThis seems like a really awkward place to put this, given that we already have net::SSLVersionToString in http://src.chromium.org/viewvc/chrome/trunk/src/net/ssl/ssl_cipher_suite_names.h?revision=HEAD\n\nSeems like these should live there?","disapproval":false,"date":"2013-04-16 19:55:26.391940","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"agl, rsleevi: thanks for the reviews. I've made all the changes that you suggest.\n\nPlease take another look.\n\nhttps://codereview.chromium.org/14125003/diff/5003/chrome/common/chrome_switches.cc\nFile chrome/common/chrome_switches.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/chrome/common/chrome_switches.cc#newcode324\nchrome/common/chrome_switches.cc:324: // For preloaded Google's properties the minimum version will be TLS 1.0.\nOn 2013/04/16 19:55:26, Ryan Sleevi wrote:\n> s/'s//\n> s/will be/is/\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.cc#newcode1226\nnet/http/http_network_transaction.cc:1226: if (server_ssl_config_.version_max == SSL_PROTOCOL_VERSION_TLS1 &&\nOn 2013/04/16 19:55:26, Ryan Sleevi wrote:\n> On 2013/04/16 15:19:24, agl wrote:\n> > Can't think chunk live before the switch() and thus remove the need to\n> duplicate\n> > it below?\n> \n> Yeah, I think this switch can/should be re-organized a little as part of this\n> \n> uint16 version_before = server_ssl_config_.version_max;\n> uint16 version_max = version_before;\n> switch (error) {\n>   case ...:\n>   case ...:\n>     if (cond_a) {\n>        version_max = X\n>     }\n>     break;\n>   case ...:\n>   case ...:\n>     if (cond_b) {\n>       version_max = y;\n>     }\n>     break;\n> }\n> \n> if (version_max <= SSL3 && Google) {\n>   // It would be good to UMA this here, right? Or are we\n>   // assuming this will always fail (since UMA => Google)\n>   // If it doesn't make sense, then just change the if/else\n>   // into an \"if (x && !(version_max... && Google))\"\n> } else if (version_max != version_before) {\n>   server_ssl_config_.version_max = version_max;\n>   net_log_.AddEvent(...)\n>   server_ssl_config_.version_fallback = true;\n>   ResetConn...()\n>   error = OK;\n> }\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.h\nFile net/http/http_network_transaction.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction.h#newcode89\nnet/http/http_network_transaction.h:89: SSLConfig& server_ssl_config_for_testing() { return server_ssl_config_; }\nOn 2013/04/16 19:55:26, Ryan Sleevi wrote:\n> On 2013/04/16 15:19:24, agl wrote:\n> > Looks like rsleevi want's a friend test I'm afraid :)\n> \n> Either friend the test or friend the harness.\n> \n> I would recommend friending the harness (eg:\n> friend class HttpNetworkTransactionTest) over the individual test.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc\nFile net/http/http_network_transaction_ssl_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode33\nnet/http/http_network_transaction_ssl_unittest.cc:33: net::test_spdy3::SpdySessionDependencies session_deps;\nOn 2013/04/16 19:55:26, Ryan Sleevi wrote:\n> On 2013/04/16 00:39:12, thaidn_google wrote:\n> > Please let me know if you think I shouldn't reuse this class.\n> \n> You shouldn't re-use this class :)\n> \n> You could use something similar to\n> http://src.chromium.org/viewvc/chrome/trunk/src/net/http/http_network_layer_unittest.cc?revision=HEAD\n> for these bits, AIUI.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode70\nnet/http/http_network_transaction_ssl_unittest.cc:70: rv = callback.WaitForResult();\nOn 2013/04/16 19:55:26, Ryan Sleevi wrote:\n> We're trying to phase out this pattern in existing code.\n> \n> You can either do:\n> \n> int rv = callback.GetResult(trans->Start(...)) or\n> \n> int rv = trans->Start();\n> rv = callback.GetResult(rv);\n> \n> The former is preferable.\n> \n> The point of this is that the assertion that rv == ERR_IO_PENDING isn't strictly\n> a requirement of the code under test. For example, you could just as well change\n> line 38/48 to be SYNCHRONOUS completions and the test (should) still function\n> correctly.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode71\nnet/http/http_network_transaction_ssl_unittest.cc:71: EXPECT_EQ(net::ERR_SSL_PROTOCOL_ERROR, rv);\nOn 2013/04/16 19:55:26, Ryan Sleevi wrote:\n> You're in net (line 18), so you don't need the net:: prefix anywhere in this\n> file.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode165\nnet/http/http_network_transaction_ssl_unittest.cc:165: // fail.\nOn 2013/04/16 19:55:26, Ryan Sleevi wrote:\n> This comment seems entirely incorrect (and thus creates issues for the comment\n> on 171-173).\n> \n> Where is it ever set that the failure is due to client certs? You're just\n> flagging a protocol error.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode173\nnet/http/http_network_transaction_ssl_unittest.cc:173: // Chrome will attempt to handshake 3 times, but there are just 2 handshake\nOn 2013/04/16 19:55:26, Ryan Sleevi wrote:\n> nit: s/Chrome/Chromium/\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode180\nnet/http/http_network_transaction_ssl_unittest.cc:180: new HttpNetworkTransaction(DEFAULT_PRIORITY, session));\nOn 2013/04/16 19:55:26, Ryan Sleevi wrote:\n> style: indentation\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/http/http_network_transaction_ssl_unittest.cc#newcode185\nnet/http/http_network_transaction_ssl_unittest.cc:185: callback.callback(), BoundNetLog());\nOn 2013/04/16 19:55:26, Ryan Sleevi wrote:\n> style: indentation\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/ssl/ssl_config_service.h\nFile net/ssl/ssl_config_service.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/5003/net/ssl/ssl_config_service.h#newcode58\nnet/ssl/ssl_config_service.h:58: static uint16 SSLProtocolVersionFromString(const std::string& version_str);\nIt turns out that I don't need them here anymore. I just move them back to their original place.\n\nOn 2013/04/16 19:55:26, Ryan Sleevi wrote:\n> This seems like a really awkward place to put this, given that we already have\n> net::SSLVersionToString in\n> http://src.chromium.org/viewvc/chrome/trunk/src/net/ssl/ssl_cipher_suite_names.h?revision=HEAD\n> \n> Seems like these should live there?","disapproval":false,"date":"2013-04-17 00:46:17.019240","approval":false},{"sender":"rsleevi@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Apologies for the back-and-forth, but I'm trying to make sure I pay close attention to the CL and give it a detailed review.\n\nA lot of comments about the unit tests - mostly cosmetic, hopefully, but they will hopefully make these tests easier to maintain and understand.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction.cc#newcode1220\nnet/http/http_network_transaction.cc:1220: uint16 version_before = server_ssl_config_.version_max;\nSo after reading the code (which, yes, I realize I pseudo-coded), I realized you don't need version_before.\n\nIf you swap lines 1259/1260 (so that assignment comes after the logging), you can get away with just tracking version_max (the new max) and server_ssl_config_.version_max (aka version_before)\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc\nFile net/http/http_network_transaction_ssl_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode64\nnet/http/http_network_transaction_ssl_unittest.cc:64: MockClientSocketFactory mock_socket_factory;\nSeems like all your tests just end up creating a mock_socket_factory and assigning it to session_params_ (eg: instead of lines 64 & 79)\n\nShould you just add this to the test harness and add it to params on line 39/40? Then you only have to do\n\nmock_socket_factory_.AddSSLSocketDataProvider(...)\nmock_socket_factory_.AddSocketDataProvider(...)\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode68\nnet/http/http_network_transaction_ssl_unittest.cc:68: // |HttpNetworkTransaction|.\ncomment style nit: While the || notation isn't formalized, AFAIK, Chromium code only uses it to refer to variable names, and not to things like type names/class names or enum values and the like.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode72\nnet/http/http_network_transaction_ssl_unittest.cc:72: // previous connection was attempted with TLS 1.0. Since that behavior is\ncomment nit: Two bits:\n1) This is explaining a concept introduced on lines 66-68, but not yet explained. It would be good to move the explanation of what is \"the SSL 3.0 fallback logic\" into that comment.\n2) Correctness nit: It's not unconditionally going to rollback to SSL3.0 - only if it's enabled.\n\nAn easier way to address these comment nits might be to move the test description up to line 62 and provide the high-level summary of the test, and then briefly explain points that matter\n\n(for line 62)\n// Tests that the HttpNetworkTransaction does not attempt to\n// fall back to SSL 3.0 when a TLS 1.0 handshake fails and\n// the site is pinned to the Google pin list (indicating that\n// it is a Google site).\n\nthen line 66\n// |ssl_data| is for the first handshake (TLS 1.0), which\n// will fail for protocol reasons (eg: simulating a version\n// rollback attack).\n// Because SSL 3.0 fallback should never even be attempted,\n// only one simulated SSL handshake is supported.\n\nThis generally applies to all tests in this file.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode76\nnet/http/http_network_transaction_ssl_unittest.cc:76: net::StaticSocketDataProvider data(NULL, 0, NULL, 0);\nstyle: net:: namespace issues still\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode85\nnet/http/http_network_transaction_ssl_unittest.cc:85: TestCompletionCallback callback;\nstyle nit: Move the TestCompletionCallback declaration closer to its first use (eg: line 90/91)\n\nOf course, if you move lines 87-89 below, as suggested, this may be unnecessary.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode89\nnet/http/http_network_transaction_ssl_unittest.cc:89: ssl_config.version_max = SSL_PROTOCOL_VERSION_TLS1;\nSeems like this could be done in the test harness SetUp() when setting up the SSLConfigService to be a (class local) MockSSLConfigService?\n\nIt's such a small amount of code to mock (eg: see https://code.google.com/p/chromium/codesearch#chromium/src/net/ssl/ssl_config_service_unittest.cc&sq=package:chromium&q=SSLConfigService&type=cs&l=17 ) that you could get away with\n\nclass TLS1OnlySSLConfigService : public SSLConfigService {\n public:\n  TLS1OnlySSLConfigService() {\n    ssl_config_.version_min = SSL_PROTOCOL_VERSION_SSL3;\n    ssl_config_.version_max = SSL_PROTOCOL_VERSION_TLS1;\n  }\n\n  virtual void GetSSLConfig(SSLConfig* config) OVERRIDE {\n    *config = ssl_config_;\n  }\n\n private:\n  SSLConfig ssl_config_;\n};\n\n\nI suggest this approach because your tests are also (subtlely) dependent upon version_min being SSL_PROTOCOL_VERSION_SSL3 (to enable fallback), which it may not always be so.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode118\nnet/http/http_network_transaction_ssl_unittest.cc:118: // caller of the |HttpNetworkTransaction|.\nWith the comments from line 72 incorporated (eg: including a high level description of this test on line 102), you could be brief and just say\n\n// |ssl_data2| contains the handshake result for an SSL 3.0\n// handshake which will be attempted after the TLS 1.0\n// handshake fails.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode123\nnet/http/http_network_transaction_ssl_unittest.cc:123: // only one handshake data.\ncomment nit: I'm generally not fond of inter-test comments cross-referencing eachother, because it means the developer has to skip around reading code.\n\nFurther, this comment makes me think that Google_SSLVersionMinPreloadedEnabled perhaps would be served by having an extra SSL data (that should be unconsumed - and this can be confirmed by asking the SSLSocketDataProvider/MockSocketFactory how many sockets it vended)\n\nThis is because if the behaviour being tested in Google_SSLVersionMinPreloadedEnabled ever breaks (and Google properties begin SSL fallbacks, for example), then based on your comment here, that test will start crashing (bringing down all of net_unittests), rather than failing gracefully.\n\nI'm not sure if I feel strongly enough on this fact to request it - because the developer should be running things locally first - but it's enough to highlight how significantly nasty the failure mode is.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode201\nnet/http/http_network_transaction_ssl_unittest.cc:201: ssl_config.version_max);\nIs wrapping really necessary here?","disapproval":false,"date":"2013-04-17 01:16:36.540240","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Ryan,\n\nThanks for the thorough review. I've learned a lot from your comments. I've revised my approach to address your concerns, please take another look.\n\nThanks!\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction.cc#newcode1220\nnet/http/http_network_transaction.cc:1220: uint16 version_before = server_ssl_config_.version_max;\nNice catch :-).\n\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> So after reading the code (which, yes, I realize I pseudo-coded), I realized you\n> don't need version_before.\n> \n> If you swap lines 1259/1260 (so that assignment comes after the logging), you\n> can get away with just tracking version_max (the new max) and\n> server_ssl_config_.version_max (aka version_before)\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc\nFile net/http/http_network_transaction_ssl_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode64\nnet/http/http_network_transaction_ssl_unittest.cc:64: MockClientSocketFactory mock_socket_factory;\nNice tip. Thanks!\n\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> Seems like all your tests just end up creating a mock_socket_factory and\n> assigning it to session_params_ (eg: instead of lines 64 & 79)\n> \n> Should you just add this to the test harness and add it to params on line 39/40?\n> Then you only have to do\n> \n> mock_socket_factory_.AddSSLSocketDataProvider(...)\n> mock_socket_factory_.AddSocketDataProvider(...)\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode68\nnet/http/http_network_transaction_ssl_unittest.cc:68: // |HttpNetworkTransaction|.\nGood to know. Thanks!\n\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> comment style nit: While the || notation isn't formalized, AFAIK, Chromium code\n> only uses it to refer to variable names, and not to things like type names/class\n> names or enum values and the like.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode72\nnet/http/http_network_transaction_ssl_unittest.cc:72: // previous connection was attempted with TLS 1.0. Since that behavior is\nI hope the modified comments LGTY :-).\n\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> comment nit: Two bits:\n> 1) This is explaining a concept introduced on lines 66-68, but not yet\n> explained. It would be good to move the explanation of what is \"the SSL 3.0\n> fallback logic\" into that comment.\n> 2) Correctness nit: It's not unconditionally going to rollback to SSL3.0 - only\n> if it's enabled.\n> \n> An easier way to address these comment nits might be to move the test\n> description up to line 62 and provide the high-level summary of the test, and\n> then briefly explain points that matter\n> \n> (for line 62)\n> // Tests that the HttpNetworkTransaction does not attempt to\n> // fall back to SSL 3.0 when a TLS 1.0 handshake fails and\n> // the site is pinned to the Google pin list (indicating that\n> // it is a Google site).\n> \n> then line 66\n> // |ssl_data| is for the first handshake (TLS 1.0), which\n> // will fail for protocol reasons (eg: simulating a version\n> // rollback attack).\n> // Because SSL 3.0 fallback should never even be attempted,\n> // only one simulated SSL handshake is supported.\n> \n> This generally applies to all tests in this file.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode76\nnet/http/http_network_transaction_ssl_unittest.cc:76: net::StaticSocketDataProvider data(NULL, 0, NULL, 0);\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> style: net:: namespace issues still\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode85\nnet/http/http_network_transaction_ssl_unittest.cc:85: TestCompletionCallback callback;\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> style nit: Move the TestCompletionCallback declaration closer to its first use\n> (eg: line 90/91)\n> \n> Of course, if you move lines 87-89 below, as suggested, this may be unnecessary.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode89\nnet/http/http_network_transaction_ssl_unittest.cc:89: ssl_config.version_max = SSL_PROTOCOL_VERSION_TLS1;\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> Seems like this could be done in the test harness SetUp() when setting up the\n> SSLConfigService to be a (class local) MockSSLConfigService?\n> \n> It's such a small amount of code to mock (eg: see\n> https://code.google.com/p/chromium/codesearch#chromium/src/net/ssl/ssl_config_service_unittest.cc&sq=package:chromium&q=SSLConfigService&type=cs&l=17\n> ) that you could get away with\n> \n> class TLS1OnlySSLConfigService : public SSLConfigService {\n>  public:\n>   TLS1OnlySSLConfigService() {\n>     ssl_config_.version_min = SSL_PROTOCOL_VERSION_SSL3;\n>     ssl_config_.version_max = SSL_PROTOCOL_VERSION_TLS1;\n>   }\n> \n>   virtual void GetSSLConfig(SSLConfig* config) OVERRIDE {\n>     *config = ssl_config_;\n>   }\n> \n>  private:\n>   SSLConfig ssl_config_;\n> };\n> \n> \n> I suggest this approach because your tests are also (subtlely) dependent upon\n> version_min being SSL_PROTOCOL_VERSION_SSL3 (to enable fallback), which it may\n> not always be so.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode118\nnet/http/http_network_transaction_ssl_unittest.cc:118: // caller of the |HttpNetworkTransaction|.\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> With the comments from line 72 incorporated (eg: including a high level\n> description of this test on line 102), you could be brief and just say\n> \n> // |ssl_data2| contains the handshake result for an SSL 3.0\n> // handshake which will be attempted after the TLS 1.0\n> // handshake fails.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode123\nnet/http/http_network_transaction_ssl_unittest.cc:123: // only one handshake data.\nI agree.\n\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> comment nit: I'm generally not fond of inter-test comments cross-referencing\n> eachother, because it means the developer has to skip around reading code.\n> \n> Further, this comment makes me think that Google_SSLVersionMinPreloadedEnabled\n> perhaps would be served by having an extra SSL data (that should be unconsumed -\n> and this can be confirmed by asking the SSLSocketDataProvider/MockSocketFactory\n> how many sockets it vended)\n> \n> This is because if the behaviour being tested in\n> Google_SSLVersionMinPreloadedEnabled ever breaks (and Google properties begin\n> SSL fallbacks, for example), then based on your comment here, that test will\n> start crashing (bringing down all of net_unittests), rather than failing\n> gracefully.\n> \n> I'm not sure if I feel strongly enough on this fact to request it - because the\n> developer should be running things locally first - but it's enough to highlight\n> how significantly nasty the failure mode is.\n\nhttps://codereview.chromium.org/14125003/diff/61001/net/http/http_network_transaction_ssl_unittest.cc#newcode201\nnet/http/http_network_transaction_ssl_unittest.cc:201: ssl_config.version_max);\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> Is wrapping really necessary here?\n\nDone.","disapproval":false,"date":"2013-04-17 04:34:47.785890","approval":false},{"sender":"rsleevi@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Mod nits, I think this LGTM. Adam or Wan-Teh, I wasn't sure if you wanted to take a last pass here.\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/browser/net/ssl_config_service_manager_pref.cc\nFile chrome/browser/net/ssl_config_service_manager_pref.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/browser/net/ssl_config_service_manager_pref.cc#newcode67\nchrome/browser/net/ssl_config_service_manager_pref.cc:67: std::string SSLConfig::SSLProtocolVersionToString(uint16 version) {\nI believe you should revert these changes - it's no longer a member of SSLConfig::.\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction_ssl_unittest.cc\nFile net/http/http_network_transaction_ssl_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction_ssl_unittest.cc#newcode90\nnet/http/http_network_transaction_ssl_unittest.cc:90: TEST_F(HttpNetworkTransactionSSLTest, Google_SSLVersionMinPreloadedEnabled) {\nOne test naming nit - I would suggest using the site as the suffix, rather than the prefix, so that you can do\n\n--gtest_filter=SSLVersionMinPreloaded* and run all three tests easily","disapproval":false,"date":"2013-04-17 18:01:27.267280","approval":true},{"sender":"wtc@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Review comments on patch set 8:\n\nI reviewed the CL before you uploaded patch set 9, so my\ncomments are on patch set 8.\n\n1. Optional: we should come up with a better name than\n\"ssl_version_min_preloaded_disabled\". I suggest some ideas\nbelow.\n\n2. I suggest an alternative way to implement this change\nin http_network_transaction.cc. I marked that comment with\n\"IMPORTANT\".\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/browser/net/ssl_config_service_manager_pref.cc\nFile chrome/browser/net/ssl_config_service_manager_pref.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/browser/net/ssl_config_service_manager_pref.cc#newcode310\nchrome/browser/net/ssl_config_service_manager_pref.cc:310: version_max_str);\n\nWhy reformat these two lines?\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/common/chrome_switches.cc\nFile chrome/common/chrome_switches.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/common/chrome_switches.cc#newcode327\nchrome/common/chrome_switches.cc:327: \"disable-ssl-version-min-preloaded\";\n\nThe CL's description says this option is\n--ssl-version-min-preloaded-disabled. Please update the CL's\ndescription.\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (left):\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction.cc#oldcode1249\nnet/http/http_network_transaction.cc:1249: server_ssl_config_.version_min == SSL_PROTOCOL_VERSION_SSL3) {\n\nBUG?: The original code uses server_ssl_config_.version_min\nhere. Did you intend to change it to version_max?\n\nSince we no longer do TLS compression, this code is now\nobsolete and can be simply deleted.\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction.cc#newcode176\nnet/http/http_network_transaction.cc:176: if (request_->load_flags & LOAD_DISABLE_CERT_REVOCATION_CHECKING) {\n\nIMPORTANT: the name \"ssl_version_min_preloaded_disabled\"\nsuggests that we can simply change server_ssl_config_.version_min\nhere, as soon as request_->url is available and we can\ncall TransportSecurityState::IsGooglePinnedProperty().\n\nI think this alternative implementation would be better.\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction.cc#newcode1253\nnet/http/http_network_transaction.cc:1253: // Do not fallback to SSL 3.0 on Google properties.\n\nI suggest moving this comment before the if statement to\navoid mixing comments with conditional expressions.\n\nThis change is borderline \"optimizing Chrome for Google\nservers\". I think we should clarify this in this comment.\nPerhaps we will experiment with Google servers first and\nexpand this to other servers after we have gained enough\nexperience. Perhaps there is a high risk of breaking the\nservers so we are uncomfortable doing this in general.\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction.cc#newcode1255\nnet/http/http_network_transaction.cc:1255: !server_ssl_config_.ssl_version_min_preloaded_disabled &&\n\nI think \"hsts\" should be part of this member's name. I had\nno idea what \"preloaded\" means.\n\nIt is a little confusing to use \"version_min\" in this member's\nname because it is actually used in conjunction with version_max\nhere. This is another reason to consider the alternative\nimplementation.\n\nPerhaps this member should be named something like\n\"strict_ssl_version_fallback_disabled\".\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/socket/socket_test_util.h\nFile net/socket/socket_test_util.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/socket/socket_test_util.h#newcode522\nnet/socket/socket_test_util.h:522: size_t next_index() { return next_index_; }\n\nNit: move this getter method to be next to the related\nResetNextIndex() method.","disapproval":false,"date":"2013-04-17 19:49:50.053140","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Will address wtc@'s comments in a follow up PS.\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/browser/net/ssl_config_service_manager_pref.cc\nFile chrome/browser/net/ssl_config_service_manager_pref.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/browser/net/ssl_config_service_manager_pref.cc#newcode67\nchrome/browser/net/ssl_config_service_manager_pref.cc:67: std::string SSLConfig::SSLProtocolVersionToString(uint16 version) {\nOh right. Good catch! This should be caught if I was able to compile unit_tests (it failed for some unrelated reasons).\n\nOn 2013/04/17 18:01:27, Ryan Sleevi wrote:\n> I believe you should revert these changes - it's no longer a member of\n> SSLConfig::.\n>\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction_ssl_unittest.cc\nFile net/http/http_network_transaction_ssl_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction_ssl_unittest.cc#newcode90\nnet/http/http_network_transaction_ssl_unittest.cc:90: TEST_F(HttpNetworkTransactionSSLTest, Google_SSLVersionMinPreloadedEnabled) {\nOn 2013/04/17 18:01:27, Ryan Sleevi wrote:\n> One test naming nit - I would suggest using the site as the suffix, rather than\n> the prefix, so that you can do\n> \n> --gtest_filter=SSLVersionMinPreloaded* and run all three tests easily\n\nDone.","disapproval":false,"date":"2013-04-17 20:14:39.957030","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"wtc: please take another look.\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/browser/net/ssl_config_service_manager_pref.cc\nFile chrome/browser/net/ssl_config_service_manager_pref.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/browser/net/ssl_config_service_manager_pref.cc#newcode310\nchrome/browser/net/ssl_config_service_manager_pref.cc:310: version_max_str);\nOn 2013/04/17 19:49:50, wtc wrote:\n> \n> Why reformat these two lines?\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/common/chrome_switches.cc\nFile chrome/common/chrome_switches.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/chrome/common/chrome_switches.cc#newcode327\nchrome/common/chrome_switches.cc:327: \"disable-ssl-version-min-preloaded\";\nI change it to --enable-ssl3-version-fallback, and update the CL's description.\n\nOn 2013/04/17 19:49:50, wtc wrote:\n> \n> The CL's description says this option is\n> --ssl-version-min-preloaded-disabled. Please update the CL's\n> description.\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction.cc#newcode176\nnet/http/http_network_transaction.cc:176: if (request_->load_flags & LOAD_DISABLE_CERT_REVOCATION_CHECKING) {\nThis was my original approach. Chris pointed out that there may be MITM proxies that only implement SSLv3. Preventing fallback would allow them to continue to work, but setting the minimum version breaks them.\n\nOn 2013/04/17 19:49:50, wtc wrote:\n> \n> IMPORTANT: the name \"ssl_version_min_preloaded_disabled\"\n> suggests that we can simply change server_ssl_config_.version_min\n> here, as soon as request_->url is available and we can\n> call TransportSecurityState::IsGooglePinnedProperty().\n> \n> I think this alternative implementation would be better.\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction.cc#newcode1253\nnet/http/http_network_transaction.cc:1253: // Do not fallback to SSL 3.0 on Google properties.\nOn 2013/04/17 19:49:50, wtc wrote:\n> \n> I suggest moving this comment before the if statement to\n> avoid mixing comments with conditional expressions.\n> \n> This change is borderline \"optimizing Chrome for Google\n> servers\". I think we should clarify this in this comment.\n> Perhaps we will experiment with Google servers first and\n> expand this to other servers after we have gained enough\n> experience. Perhaps there is a high risk of breaking the\n> servers so we are uncomfortable doing this in general.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/http/http_network_transaction.cc#newcode1255\nnet/http/http_network_transaction.cc:1255: !server_ssl_config_.ssl_version_min_preloaded_disabled &&\nI rename it to ssl3_version_fallback_enabled.\n\nI chose the old name because it was part of a bigger plan to induce minimum SSL version from HSTS preloaded configuration.\n\nOn 2013/04/17 19:49:50, wtc wrote:\n> \n> I think \"hsts\" should be part of this member's name. I had\n> no idea what \"preloaded\" means.\n> \n> It is a little confusing to use \"version_min\" in this member's\n> name because it is actually used in conjunction with version_max\n> here. This is another reason to consider the alternative\n> implementation.\n> \n> Perhaps this member should be named something like\n> \"strict_ssl_version_fallback_disabled\".\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/socket/socket_test_util.h\nFile net/socket/socket_test_util.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/74001/net/socket/socket_test_util.h#newcode522\nnet/socket/socket_test_util.h:522: size_t next_index() { return next_index_; }\nOn 2013/04/17 19:49:50, wtc wrote:\n> \n> Nit: move this getter method to be next to the related\n> ResetNextIndex() method.\n\nDone.","disapproval":false,"date":"2013-04-17 22:16:07.025010","approval":false},{"sender":"wtc@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Review comments on patch set 11: this still needs work.\n\nhttps://codereview.chromium.org/14125003/diff/87004/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc\nFile chrome/browser/net/ssl_config_service_manager_pref_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/87004/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode226\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:226: // * |ssl3_version_fallback_enabled| is false;\n\nNit: this is the last bullet item, so it can end with a period.\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (left):\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc#oldcode1221\nnet/http/http_network_transaction.cc:1221: case ERR_SSL_VERSION_OR_CIPHER_MISMATCH:\n\nIt may be clearer to retain the original switch statement.\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc#newcode1243\nnet/http/http_network_transaction.cc:1243: if (version_max == SSL_PROTOCOL_VERSION_SSL3 &&\n\nBUG?: I think this should be\n    if (version_max > SSL_PROTOCOL_VERSION_SSL3 ||\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/ssl/ssl_config_service.h\nFile net/ssl/ssl_config_service.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/ssl/ssl_config_service.h#newcode95\nnet/ssl/ssl_config_service.h:95: // fails.\n\nThis description does not reflect the actual meaning of this\nboolean member. It fails to describe the IsGooglePinnedProperty\naspect.\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/ssl/ssl_config_service.h#newcode96\nnet/ssl/ssl_config_service.h:96: bool ssl3_version_fallback_enabled;\n\nRemove \"version\". \"ssl3_fallback_enabled\" is sufficient.\n\n(The |version_fallback| member below was originally named\n|ssl3_fallback|. I generalized it to |version_fallback| in\nhttps://chromiumcodereview.appspot.com/10377022.)","disapproval":false,"date":"2013-04-17 23:22:05.765250","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"https://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (left):\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc#oldcode1221\nnet/http/http_network_transaction.cc:1221: case ERR_SSL_VERSION_OR_CIPHER_MISMATCH:\nOn 2013/04/17 23:22:05, wtc wrote:\n> \n> It may be clearer to retain the original switch statement.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc#newcode1243\nnet/http/http_network_transaction.cc:1243: if (version_max == SSL_PROTOCOL_VERSION_SSL3 &&\nNo, it isn't a bug (otherwise tests have failed).\n\nThe statements inside the if clause will cause the fallback. So we need to test two things:\n\n* The protocol that we are going to use for the fallback would be SSL_PROTOCOL_VERSION_SSL3; and\n\n* Either fallback is enabled or this is not a Google site.\n\nOn 2013/04/17 23:22:05, wtc wrote:\n> \n> BUG?: I think this should be\n>     if (version_max > SSL_PROTOCOL_VERSION_SSL3 ||\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/ssl/ssl_config_service.h\nFile net/ssl/ssl_config_service.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/ssl/ssl_config_service.h#newcode95\nnet/ssl/ssl_config_service.h:95: // fails.\nOn 2013/04/17 23:22:05, wtc wrote:\n> \n> This description does not reflect the actual meaning of this\n> boolean member. It fails to describe the IsGooglePinnedProperty\n> aspect.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/ssl/ssl_config_service.h#newcode96\nnet/ssl/ssl_config_service.h:96: bool ssl3_version_fallback_enabled;\nOn 2013/04/17 23:22:05, wtc wrote:\n> \n> Remove \"version\". \"ssl3_fallback_enabled\" is sufficient.\n> \n> (The |version_fallback| member below was originally named\n> |ssl3_fallback|. I generalized it to |version_fallback| in\n> https://chromiumcodereview.appspot.com/10377022.)\n\nDone.","disapproval":false,"date":"2013-04-18 00:05:50.332950","approval":false},{"sender":"wtc@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Patch set 13 LGTM.\n\nThe main issue is that I still find \"ssl3_fallback_enabled\"\nconfusing. I think we should qualify it with something like\n\"permissive\" or \"unrestricted\" to reflect more accurately\nwhat this setting actually controls, at least before we\nexpand this to all sites.\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref.cc\nFile chrome/browser/net/ssl_config_service_manager_pref.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref.cc#newcode183\nchrome/browser/net/ssl_config_service_manager_pref.cc:183: BooleanPrefMember ssl3_verlback_enabled_;\n\nTypo: ssl3_verlback_enabled_ => ssl3_fallback_enabled_\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref.cc#newcode223\nchrome/browser/net/ssl_config_service_manager_pref.cc:223: ssl3_versionk_enabled_.Init(\n\nTypo: ssl3_versionk_enabled_ => ssl3_fallback_enabled_\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref.cc#newcode268\nchrome/browser/net/ssl_config_service_manager_pref.cc:268: default_config.ssl3_fallback_enabled);\n\nNit: you may be able to format this call in two lines now:\n  registry->RegisterBooleanPref(refs::kEnableSSL3Fallback,\n                                default_config.ssl3_fallback_enabled);\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref.cc#newcode331\nchrome/browser/net/ssl_config_service_manager_pref.cc:331: ssl3_fallback_enabled_.GetValue();\n\nThis should fit on one line now:\n  config->ssl3_fallback_enabled = ssl3_fallback_enabled_.GetValue();\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc\nFile chrome/browser/net/ssl_config_service_manager_pref_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode226\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:226: // * |ssl3_fallback_enabled| is false.\nI suggest rewording this comment as follows (please fold long\nlines as appropriate):\n\n// Test that\n// * without command-line settings for minimum and maximum SSL versions,\n//   SSL 3.0 ~ default_version_max() are enabled;\n// * without --enable-ssl3-fallback, |ssl3_fallback_enabled| is false.\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode256\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:256: prefs::kEnableSSL3Fallback));\n\nThis should now fit on one line.\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode268\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:268: &ssl3_fallback_enabled));\n\nThis call should fit in two lines now.\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode311\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:311: const PrefService::Preference* ssl3_version_fallback_pref =\n\nssl3_version_fallback_pref => ssl3_fallback_pref\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode324\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:324: &ssl3_fallback_enabled));\n\nThis should fit in two lines now.\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/prefs/command_line_pref_store.cc\nFile chrome/browser/prefs/command_line_pref_store.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/prefs/command_line_pref_store.cc#newcode57\nchrome/browser/prefs/command_line_pref_store.cc:57: prefs::kEnableSSL3Fallback, true },\n\nThis should fit in one line now.\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/common/chrome_switches.cc\nFile chrome/common/chrome_switches.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/common/chrome_switches.cc#newcode623\nchrome/common/chrome_switches.cc:623: // Enables SSL 3.0 fallback.\n\nThis comment should say something like\n\"Enables permissive SSL 3.0 fallback\" or\n\"Enables unrestricted SSL 3.0 fallback\".  We probably should\njust duplicate the comment from ssl_config_service.h.\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/http/http_network_transaction.cc#newcode1248\nnet/http/http_network_transaction.cc:1248: (version_max == SSL_PROTOCOL_VERSION_SSL3 &&\n\nDelete \"(version_max == SSL_PROTOCOL_VERSION_SSL3 &&\" and the\ncorresponding closing \")\".\n\nThis is implied by how C/C++ evaluates the two operands of\nthe || operator, and the fact that SSL_PROTOCOL_VERSION_SSL3\nis the smallest SSL version used by Chrome.\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/http/http_network_transaction_ssl_unittest.cc\nFile net/http/http_network_transaction_ssl_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/http/http_network_transaction_ssl_unittest.cc#newcode26\nnet/http/http_network_transaction_ssl_unittest.cc:26: class TLS1OnlySSLConfigService : public SSLConfigService {\n\nIt seems wrong to call this SSLConfigService \"TLS1 only\"\nbecause it still enables SSL3 (see line 29).\n\nPerhaps this class should be named TLS10SSLConfigService\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/http/http_network_transaction_ssl_unittest.cc#newcode106\nnet/http/http_network_transaction_ssl_unittest.cc:106: // * SSL 3.0 fallback is disabled.\n\nAll instances of \"SSL 3.0 fallback\" in this file should be\nchanged to something like \"Permissive SSL 3.0 fallback\" or\n\"Unrestricted SSL 3.0 fallback\" to be more accurate.\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/socket/socket_test_util.h\nFile net/socket/socket_test_util.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/socket/socket_test_util.h#newcode534\nnet/socket/socket_test_util.h:534: void ResetNextIndex() {\n\nNit and optional: we should rename this method \"reset_next_index\"\nfor a consistent style. The Style Guide allows lowercase letters\nfor very short inlined functions.\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/ssl/ssl_config_service.cc\nFile net/ssl/ssl_config_service.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/ssl/ssl_config_service.cc#newcode161\nnet/ssl/ssl_config_service.cc:161: new_config.ssl3_fallback_enabled) ||\n\nPlease add this test after the false_start_enabled test\nto match the declaration order of these members.\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/ssl/ssl_config_service.h\nFile net/ssl/ssl_config_service.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/ssl/ssl_config_service.h#newcode98\nnet/ssl/ssl_config_service.h:98: // for all sites.\n\nI suggest describing the \"true\" case before the \"false\" case,\nand rewording the \"false\" case slightly to make the two cases\nmore symmetrical, as follows:\n\n  // If |ssl3_fallback_enabled| is true, SSL 3.0 fallback will be enabled\n  // for all sites.\n  // If |ssl3_fallback_enabled| is false, SSL 3.0 fallback will be disabled\n  // for a site pinned to the Google pin list (indicating that it is a\n  // Google site).\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/ssl/ssl_config_service.h#newcode99\nnet/ssl/ssl_config_service.h:99: bool ssl3_fallback_enabled;\n\nNOTE: I still think this member name is confusing. I think\nsomething like \"permissive_ssl3_fallback_enabled\" or\n\"ssl3_fallback_unrestricted\" would be more accurate.\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/ssl/ssl_config_service_unittest.cc\nFile net/ssl/ssl_config_service_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/ssl/ssl_config_service_unittest.cc#newcode74\nnet/ssl/ssl_config_service_unittest.cc:74: initial_config.ssl3_fallback_enabled = false;\n\nSet this after line 71 (initial_config.false_start_enabled = false).\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/ssl/ssl_config_service_unittest.cc#newcode101\nnet/ssl/ssl_config_service_unittest.cc:101: mock_service->SetSSLConfig(initial_config);\n\nDo this after lines 86-88 (which deals with false_start_enabled).","disapproval":false,"date":"2013-04-18 18:15:34.503960","approval":true},{"sender":"wtc@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"https://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc#newcode1243\nnet/http/http_network_transaction.cc:1243: if (version_max == SSL_PROTOCOL_VERSION_SSL3 &&\n\nOn 2013/04/18 00:05:50, thaidn_google wrote:\n> No, it isn't a bug (otherwise tests have failed).\n\nThe unit test HTTPSRequestTest.TLSv1Fallback in\nnet/url_request/url_request_unittest.cc should have caught\nthis. Do you know why that test didn't fail? Perhaps you\ndidn't run all the tests in net_unittests?","disapproval":false,"date":"2013-04-18 18:23:09.351130","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"wtc: I've addressed your comments. Please take another look.\n\nThere is one problem: looks like I messed up with my git branches, and now this CL contains some unrelated changes from other CLs. I don't know if this causes any problem for merging etc., but if it does I will try to upload from the original branch.\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc\nFile chrome/browser/net/ssl_config_service_manager_pref_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode226\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:226: // * |ssl3_fallback_enabled| is false.\nOn 2013/04/18 18:15:34, wtc wrote:\n> I suggest rewording this comment as follows (please fold long\n> lines as appropriate):\n> \n> // Test that\n> // * without command-line settings for minimum and maximum SSL versions,\n> //   SSL 3.0 ~ default_version_max() are enabled;\n> // * without --enable-ssl3-fallback, |ssl3_fallback_enabled| is false.\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode256\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:256: prefs::kEnableSSL3Fallback));\nAfter the rename, it can't be on one line.\n\nOn 2013/04/18 18:15:34, wtc wrote:\n> \n> This should now fit on one line.\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode268\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:268: &ssl3_fallback_enabled));\nAfter the rename, it can't be on two lines.\n\nOn 2013/04/18 18:15:34, wtc wrote:\n> \n> This call should fit in two lines now.\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode311\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:311: const PrefService::Preference* ssl3_version_fallback_pref =\nOn 2013/04/18 18:15:34, wtc wrote:\n> \n> ssl3_version_fallback_pref => ssl3_fallback_pref\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/92003/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode324\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:324: &ssl3_fallback_enabled));\nAfter the rename, it can't be on two lines.\n\nOn 2013/04/18 18:15:34, wtc wrote:\n> \n> This should fit in two lines now.\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/http/http_network_transaction.cc#newcode1248\nnet/http/http_network_transaction.cc:1248: (version_max == SSL_PROTOCOL_VERSION_SSL3 &&\nNice catch.\n\nThanks!\nOn 2013/04/18 18:15:34, wtc wrote:\n> \n> Delete \"(version_max == SSL_PROTOCOL_VERSION_SSL3 &&\" and the\n> corresponding closing \")\".\n> \n> This is implied by how C/C++ evaluates the two operands of\n> the || operator, and the fact that SSL_PROTOCOL_VERSION_SSL3\n> is the smallest SSL version used by Chrome.","disapproval":false,"date":"2013-04-19 01:20:43.210650","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"On 2013/04/18 18:23:09, wtc wrote:\n> https://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc\n> File net/http/http_network_transaction.cc (right):\n> \n> https://codereview.chromium.org/14125003/diff/87004/net/http/http_network_transaction.cc#newcode1243\n> net/http/http_network_transaction.cc:1243: if (version_max ==\n> SSL_PROTOCOL_VERSION_SSL3 &&\n> \n> On 2013/04/18 00:05:50, thaidn_google wrote:\n> > No, it isn't a bug (otherwise tests have failed).\n> \n> The unit test HTTPSRequestTest.TLSv1Fallback in\n> net/url_request/url_request_unittest.cc should have caught\n> this. Do you know why that test didn't fail? Perhaps you\n> didn't run all the tests in net_unittests?\n\nI didn't run all the tests in net_unittests. Now I'm running them and I get a few failures:\n\n[  FAILED  ] HTTPSOCSPTest.Valid\n[  FAILED  ] HTTPSOCSPTest.Revoked\n[  FAILED  ] HTTPSOCSPTest.Invalid\n[  FAILED  ] HTTPSEVCRLSetTest.MissingCRLSetAndInvalidOCSP\n[  FAILED  ] HTTPSEVCRLSetTest.MissingCRLSetAndGoodOCSP\n[  FAILED  ] HTTPSEVCRLSetTest.ExpiredCRLSet\n[  FAILED  ] HTTPSEVCRLSetTest.FreshCRLSet\n[  FAILED  ] HTTPSEVCRLSetTest.ExpiredCRLSetAndRevokedNonEVCert\n[  FAILED  ] HTTPSCRLSetTest.ExpiredCRLSet\n\nThey look unrelated to what I am doing. Here is the stack trace:\n\nOCSP server started on 127.0.0.1:35480...\nTraceback (most recent call last):\n  File \"/usr/local/google/home/thaidn/p/chrome/src/net/tools/testserver/testserver.py\", line 2089, in <module>\n    sys.exit(ServerRunner().main())\n  File \"/usr/local/google/home/thaidn/p/chrome/src/net/tools/testserver/testserver_base.py\", line 189, in main\n    self.server = self.create_server(server_data)\n  File \"/usr/local/google/home/thaidn/p/chrome/src/net/tools/testserver/testserver.py\", line 1925, in create_server\n    self.options.tls_intolerant)\n  File \"/usr/local/google/home/thaidn/p/chrome/src/net/tools/testserver/testserver.py\", line 132, in __init__\n    self.private_key = tlslite.api.parsePEMKey(pem_cert_and_key, private=True)\n  File \"/usr/local/google/home/thaidn/p/chrome/src/third_party/tlslite/tlslite/utils/keyfactory.py\", line 146, in parsePEMKey\n    key = OpenSSL_RSAKey.parse(s, passwordCallback)\n  File \"/usr/local/google/home/thaidn/p/chrome/src/third_party/tlslite/tlslite/utils/OpenSSL_RSAKey.py\", line 141, in parse\n    raise SyntaxError()\nSyntaxError: None\n\nSeems like it couldn't read the keys?\n\nBTW I talk to rsleevi@, and he assures that the PS will land clearly. It will create a bit more work for you to review. Could you please ignore the unrelated changes (which should be clear from the context), and focus on my changes?\n\nThanks!","disapproval":false,"date":"2013-04-19 01:37:46.198400","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"I mark a few unrelated changes that may be confusing.\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/http/http_network_transaction.cc#newcode1084\nnet/http/http_network_transaction.cc:1084: }\nNot me.\n\nhttps://codereview.chromium.org/14125003/diff/92003/net/http/http_network_transaction.cc#newcode1137\nnet/http/http_network_transaction.cc:1137: }\nNot me.\n\nhttps://codereview.chromium.org/14125003/diff/107001/net/http/http_network_transaction.cc\nFile net/http/http_network_transaction.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/107001/net/http/http_network_transaction.cc#newcode780\nnet/http/http_network_transaction.cc:780: request_headers_.HasHeader(HttpRequestHeaders::kProxyAuthorization);\nNot me.\n\nhttps://codereview.chromium.org/14125003/diff/107001/net/socket/socket_test_util.h\nFile net/socket/socket_test_util.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/107001/net/socket/socket_test_util.h#newcode746\nnet/socket/socket_test_util.h:746: bool peer_closed_connection_;\nnot me.","disapproval":false,"date":"2013-04-19 01:42:55.054190","approval":false},{"sender":"agl@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"LGTM. There's some diff noise (I'm assuming), but I'm ignoring that.\n\nOne tiny typo. Will leave for wtc to hit the CQ button since he had a few comments last time.\n\nhttps://codereview.chromium.org/14125003/diff/107001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc\nFile chrome/browser/net/ssl_config_service_manager_pref_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/107001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode226\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:226: // * without --enable-unrestricted_ssl3-fallback,\ns/_/-/","disapproval":false,"date":"2013-04-19 14:41:52.225590","approval":true},{"sender":"wtc@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Patch set 14 LGTM. Thanks!\n\nPlease make the changes Adam and I suggested in the review.\n\nPlease change the CL's description:\n1. Nit: change \"Does not\" to \"Do not\".\n2. Mention that you deleted the obsolete SSL 3.0 fallback on\nTLS decompression failure.\n\nhttps://codereview.chromium.org/14125003/diff/107001/net/ssl/ssl_config_service.h\nFile net/ssl/ssl_config_service.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/107001/net/ssl/ssl_config_service.h#newcode97\nnet/ssl/ssl_config_service.h:97: // disabled for a site pinned to the Google pin list (indicating that\n\nNit: can you fill up this line?","disapproval":false,"date":"2013-04-19 17:45:17.783820","approval":true},{"sender":"wtc@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"On 2013/04/19 01:20:43, thaidn_google wrote:\n>\n> There is one problem: looks like I messed up with my git branches, and now this\n> CL contains some unrelated changes from other CLs.\n\nThis is normal. If you update/sync your work tree to the tip of the\nChromium trunk, you may pick up changes made by others, and the next\npatch set you upload will include those changes.\n\nYou can avoid this problem by not updating/syncing your work tree\nunless absolutely necesssary. But in general we are used to mentally\nfilter out such unrelated changes.","disapproval":false,"date":"2013-04-19 18:01:43.403800","approval":false},{"sender":"thaidn@google.com","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Thanks for the review, guys!\n\nPlease commit it for me.\n\nhttps://codereview.chromium.org/14125003/diff/107001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc\nFile chrome/browser/net/ssl_config_service_manager_pref_unittest.cc (right):\n\nhttps://codereview.chromium.org/14125003/diff/107001/chrome/browser/net/ssl_config_service_manager_pref_unittest.cc#newcode226\nchrome/browser/net/ssl_config_service_manager_pref_unittest.cc:226: // * without --enable-unrestricted_ssl3-fallback,\nOn 2013/04/19 14:41:52, agl wrote:\n> s/_/-/\n\nDone.\n\nhttps://codereview.chromium.org/14125003/diff/107001/net/ssl/ssl_config_service.h\nFile net/ssl/ssl_config_service.h (right):\n\nhttps://codereview.chromium.org/14125003/diff/107001/net/ssl/ssl_config_service.h#newcode97\nnet/ssl/ssl_config_service.h:97: // disabled for a site pinned to the Google pin list (indicating that\nOn 2013/04/19 17:45:18, wtc wrote:\n> \n> Nit: can you fill up this line?\n\nDone.","disapproval":false,"date":"2013-04-19 18:21:11.604760","approval":false},{"sender":"commit-bot@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/thaidn@google.com/14125003/113002","disapproval":false,"date":"2013-04-19 18:23:43.218830","approval":false},{"sender":"commit-bot@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Presubmit check for 14125003-113002 failed and returned exit status 1.\n\nINFO:root:Found 17 file(s).\n\nRunning presubmit commit checks ...\nRunning /b/commit-queue/workdir/chromium/PRESUBMIT.py\nRunning /b/commit-queue/workdir/chromium/chrome/PRESUBMIT.py\nRunning /b/commit-queue/workdir/chromium/net/PRESUBMIT.py\n\n** Presubmit ERRORS **\nMissing LGTM from an OWNER for these files:\n    chrome/browser/prefs/command_line_pref_store.cc\n\nPresubmit checks took 2.5s to calculate.","disapproval":false,"date":"2013-04-19 18:23:51.079170","approval":false},{"sender":"wtc@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","thestig@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"thestig: could you review the changes to src/chrome in this\nCL or recommend another reviewer (who knows about prefs)?\nThanks.","disapproval":false,"date":"2013-04-19 18:29:36.468180","approval":false},{"sender":"thestig@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","thestig@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"lgtm","disapproval":false,"date":"2013-04-19 19:14:08.628360","approval":true},{"sender":"commit-bot@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","thestig@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/thaidn@google.com/14125003/113002","disapproval":false,"date":"2013-04-19 19:17:27.738670","approval":false},{"sender":"commit-bot@chromium.org","recipients":["thaidn@google.com","agl@chromium.org","rsleevi@chromium.org","wtc@chromium.org","thestig@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","balfanz@google.com"],"text":"Change committed as 195335","disapproval":false,"date":"2013-04-19 23:29:36.463620","approval":false}],"owner_email":"thaidn@google.com","private":false,"base_url":"https://chromium.googlesource.com/chromium/src.git@master","owner":"thaidn_google","subject":"Do not roll back to SSL 3.0 for Google properties.","created":"2013-04-11 01:11:51.977680","patchsets":[1,13001,19001,5003,18002,61001,49015,74001,84002,79005,87004,93001,92003,107001,113002],"modified":"2013-04-19 23:29:36.581530","closed":true,"commit":false,"issue":14125003}