{"description":"Add a static method to get supported container format from MediaCodec\n\nThis will enable us to query the canPlayType for EME\n\nBUG=224793\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=222738","cc":["chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"reviewers":["xhwang@chromium.org","ddorwin@chromium.org"],"messages":[{"sender":"qinmin@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"PTAL","disapproval":false,"date":"2013-09-09 17:26:15.093590","approval":false},{"sender":"xhwang@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"https://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode80\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:80: private static class ContainerCodecPair {\nAdd documentation w/ examples for easier understanding. Also, in the native side, we use Codec's' sometimes. I like it with 's' more since it's more clear. At least we should be consistent.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode134\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:134: private static ContainerCodecPair[] getContainerCodecPairs() {\nAdd comment about what this function is expected to do? Without the context of ddorwin's CL, it's hard to understand what we are doing here.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode147\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:147: MediaCodec secureCodec = MediaCodec.createByCodecName(secureCodecName);\nSo we don't care about the L3 decoders? If we care, then it seems we can reuse the logic on line 200.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode156\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:156: containerCodecMap.put(supportedTypes[j], existingCodecs + \",\" + codecString);\nWill containerCodecMap.get() work if the key is not in the map? If so we can always call:\n\nString existingCodecs = containerCodecMap.get(supportedTypes[j]);\ncontainerCodecMap.put(supportedTypes[j], existingCodecs + \",\n                      \" + codecString);\n\nand drop the \"else\" block on line 158. If supportedTypes[j] is not in the map, existingCodecs will be empty, so this code should still work.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode167\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:167: return containerCodecList.toArray(new ContainerCodecPair[containerCodecList.size()]);\nNewbie question: Is ArrayList and toArray the only way we can pass a list to the native side? It seems that this can be wrapped into a static function.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.cc\nFile media/base/android/media_codec_bridge.cc (right):\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.cc#newcode104\nmedia/base/android/media_codec_bridge.cc:104: ContainerCodecsPair(container_type, codecs));\nOh my, I hate JNI :)\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.cc#newcode108\nmedia/base/android/media_codec_bridge.cc:108: \nremove one extra empty line\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.h\nFile media/base/android/media_codec_bridge.h (right):\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.h#newcode55\nmedia/base/android/media_codec_bridge.h:55: typedef std::pair<std::string, std::string> ContainerCodecsPair;\nadd include for std::pair\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.h#newcode58\nmedia/base/android/media_codec_bridge.h:58: static void GetContainerCodecPairs(\ns/ContainerCodecPairs/ContainerCodec_s_Pairs\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.h#newcode59\nmedia/base/android/media_codec_bridge.h:59: std::vector<ContainerCodecsPair>& container_codec_pairs);\npass by pointer for output parameters?\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.h#newcode59\nmedia/base/android/media_codec_bridge.h:59: std::vector<ContainerCodecsPair>& container_codec_pairs);\ns/container_codec_pairs/container_codec's'_pairs to be consistent.","disapproval":false,"date":"2013-09-10 00:30:20.352510","approval":false},{"sender":"qinmin@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"https://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode80\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:80: private static class ContainerCodecPair {\nOn 2013/09/10 00:30:20, xhwang wrote:\n> Add documentation w/ examples for easier understanding. Also, in the native\n> side, we use Codec's' sometimes. I like it with 's' more since it's more clear.\n> At least we should be consistent.\n\nDone.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode134\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:134: private static ContainerCodecPair[] getContainerCodecPairs() {\nOn 2013/09/10 00:30:20, xhwang wrote:\n> Add comment about what this function is expected to do? Without the context of\n> ddorwin's CL, it's hard to understand what we are doing here.\n\nDone.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode147\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:147: MediaCodec secureCodec = MediaCodec.createByCodecName(secureCodecName);\nAll the codecs returned by MediaCodecList should support L3, so we don't need to instantiate them.\n\nOn 2013/09/10 00:30:20, xhwang wrote:\n> So we don't care about the L3 decoders? If we care, then it seems we can reuse\n> the logic on line 200.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode156\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:156: containerCodecMap.put(supportedTypes[j], existingCodecs + \",\" + codecString);\nThis will add an extra \",\" at the beginning of the string. The if-else statement is trying to avoid that.\n\nOn 2013/09/10 00:30:20, xhwang wrote:\n> Will containerCodecMap.get() work if the key is not in the map? If so we can\n> always call:\n> \n> String existingCodecs = containerCodecMap.get(supportedTypes[j]);\n> containerCodecMap.put(supportedTypes[j], existingCodecs + \",\n>                       \" + codecString);\n> \n> and drop the \"else\" block on line 158. If supportedTypes[j] is not in the map,\n> existingCodecs will be empty, so this code should still work.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode167\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:167: return containerCodecList.toArray(new ContainerCodecPair[containerCodecList.size()]);\nAll container types(ArrayList, Hashmapï¼Œ etc) is a java object, so native side don't have a way to read the individual element. To parse a container object, native need to call jni function to first get the size of the java container object, and then use jni calls to get each element of it. Array, on the other hand, let the native side to access each elemen.\nThe function is pretty short, and the code is not being reused by others. I would rather leave it in the current state.\n\n\nOn 2013/09/10 00:30:20, xhwang wrote:\n> Newbie question: Is ArrayList and toArray the only way we can pass a list to the\n> native side? It seems that this can be wrapped into a static function.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.cc\nFile media/base/android/media_codec_bridge.cc (right):\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.cc#newcode108\nmedia/base/android/media_codec_bridge.cc:108: \nOn 2013/09/10 00:30:20, xhwang wrote:\n> remove one extra empty line\n\nDone.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.h\nFile media/base/android/media_codec_bridge.h (right):\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.h#newcode55\nmedia/base/android/media_codec_bridge.h:55: typedef std::pair<std::string, std::string> ContainerCodecsPair;\nOn 2013/09/10 00:30:20, xhwang wrote:\n> add include for std::pair\n\n<utility> included.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.h#newcode58\nmedia/base/android/media_codec_bridge.h:58: static void GetContainerCodecPairs(\nOn 2013/09/10 00:30:20, xhwang wrote:\n> s/ContainerCodecPairs/ContainerCodec_s_Pairs\n\nDone.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.h#newcode59\nmedia/base/android/media_codec_bridge.h:59: std::vector<ContainerCodecsPair>& container_codec_pairs);\nOn 2013/09/10 00:30:20, xhwang wrote:\n> pass by pointer for output parameters?\n\nDone.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/media_codec_bridge.h#newcode59\nmedia/base/android/media_codec_bridge.h:59: std::vector<ContainerCodecsPair>& container_codec_pairs);\nOn 2013/09/10 00:30:20, xhwang wrote:\n> s/container_codec_pairs/container_codec's'_pairs to be consistent.\n\nDone.","disapproval":false,"date":"2013-09-10 02:49:12.709110","approval":false},{"sender":"xhwang@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"looking good. just a few more discussions.\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/3001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode156\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:156: containerCodecMap.put(supportedTypes[j], existingCodecs + \",\" + codecString);\nOn 2013/09/10 02:49:12, qinmin wrote:\n> This will add an extra \",\" at the beginning of the string. The if-else statement\n> is trying to avoid that.\n> \n> On 2013/09/10 00:30:20, xhwang wrote:\n> > Will containerCodecMap.get() work if the key is not in the map? If so we can\n> > always call:\n> > \n> > String existingCodecs = containerCodecMap.get(supportedTypes[j]);\n> > containerCodecMap.put(supportedTypes[j], existingCodecs + \",\n> >                       \" + codecString);\n> > \n> > and drop the \"else\" block on line 158. If supportedTypes[j] is not in the map,\n> > existingCodecs will be empty, so this code should still work.\n> \n\nHmm, can we always append the \",\" after the codec name? e.g.\n\nString existingCodecs = containerCodecMap.get(supportedTypes[j]);\ncontainerCodecMap.put(supportedTypes[j], existingCodecs + codecString + \",\");\n\nThen when we copy the list into the array, we always strip the last char?\n\nhttps://codereview.chromium.org/23549021/diff/9001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/9001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode83\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:83: * \"OMX.google.aac.decoder\".\nhmm, native code won't understand what \"OMX.google.aac.decoder\" is. So we have to translate this into something like \"aac\" or \"mp4a\" at some point. If we have to do the translation later, does it make sense to keep a list of codec names instead of searializing it into a comma separated string, which we have to parse again later for translation?\n\nhttps://codereview.chromium.org/23549021/diff/9001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode139\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:139: * Get a list of container-codecs pairs\nAppend period.\n\nhttps://codereview.chromium.org/23549021/diff/9001/media/base/android/media_codec_bridge.h\nFile media/base/android/media_codec_bridge.h (right):\n\nhttps://codereview.chromium.org/23549021/diff/9001/media/base/android/media_codec_bridge.h#newcode10\nmedia/base/android/media_codec_bridge.h:10: #include <string>\nfix order\n\nhttps://codereview.chromium.org/23549021/diff/9001/media/base/android/media_codec_bridge.h#newcode52\nmedia/base/android/media_codec_bridge.h:52: // Represents container-codec combinations. The second string may contain zero\ns/codec/codecs/","disapproval":false,"date":"2013-09-10 16:00:58.643810","approval":false},{"sender":"qinmin@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"https://codereview.chromium.org/23549021/diff/9001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/9001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode83\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:83: * \"OMX.google.aac.decoder\".\nThat's a good question for David.\nDavid, what is the expected codec format in KeySystemInfo?\nAre you expecting aac or something like OMX.google.aac.decoderï¼Ÿ And how do we differentiate .secure codecs?\n\nOn 2013/09/10 16:00:58, xhwang wrote:\n> hmm, native code won't understand what \"OMX.google.aac.decoder\" is. So we have\n> to translate this into something like \"aac\" or \"mp4a\" at some point. If we have\n> to do the translation later, does it make sense to keep a list of codec names\n> instead of searializing it into a comma separated string, which we have to parse\n> again later for translation?\n\nhttps://codereview.chromium.org/23549021/diff/9001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode139\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:139: * Get a list of container-codecs pairs\nOn 2013/09/10 16:00:58, xhwang wrote:\n> Append period.\n\nDone.\n\nhttps://codereview.chromium.org/23549021/diff/9001/media/base/android/media_codec_bridge.h\nFile media/base/android/media_codec_bridge.h (right):\n\nhttps://codereview.chromium.org/23549021/diff/9001/media/base/android/media_codec_bridge.h#newcode10\nmedia/base/android/media_codec_bridge.h:10: #include <string>\nOn 2013/09/10 16:00:58, xhwang wrote:\n> fix order\n\nDone.\n\nhttps://codereview.chromium.org/23549021/diff/9001/media/base/android/media_codec_bridge.h#newcode52\nmedia/base/android/media_codec_bridge.h:52: // Represents container-codec combinations. The second string may contain zero\nOn 2013/09/10 16:00:58, xhwang wrote:\n> s/codec/codecs/\n\nDone.","disapproval":false,"date":"2013-09-10 16:33:18.060410","approval":false},{"sender":"qinmin@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"PTAL again, changed the code to use container types to get the codecs as suggested by android folks.\nWill look into how to use CodecProfileLevel to get a more accurate codecs string.","disapproval":false,"date":"2013-09-10 23:52:44.635370","approval":false},{"sender":"xhwang@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"More comments; mostly on container/codec confusion.\n\nhttps://codereview.chromium.org/23549021/diff/17001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/17001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode177\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:177: getCodecsFromMediaCodecInfo(supportedTypes[j]),\nI am confused here, we are supposed to get a container-codec pair list. But it seems supportedTypes[j] is also a codec type (based on the list on 192. \n\nActually MediaCodec doesn't care about container type (e.g. mp4 or webm). Only Demuxer and MediaDrm cares about container. Demuxer needs to know the container type to be able to parse it correctly. MediaDrm needs to support the initdata which is container type specific. So in our case, it seems that container type and codec type are orthogonal: we can get a list of codec separately and then just multiply it with the container type we support.\n\nhttps://codereview.chromium.org/23549021/diff/17001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode191\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:191: private static String getCodecsFromMediaCodecInfo(String containerType) {\ns/containerType/codecType/\n\navc, vorbis etc are all codec names.\n\nhttps://codereview.chromium.org/23549021/diff/17001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode191\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:191: private static String getCodecsFromMediaCodecInfo(String containerType) {\nThis function is kind of the reverse of https://code.google.com/p/chromium/codesearch#chromium/src/media/base/android/media_codec_bridge.cc&sq=package:chromium&l=55\n\nIt'll be nice to have both functions in the same layer (native or java), and have a static map that we can use to do the conversion. But that can be done in a separate CL.\n\nhttps://codereview.chromium.org/23549021/diff/17001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode213\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:213: int count = MediaCodecList.getCodecCount();\n4 space indent","disapproval":false,"date":"2013-09-11 00:29:23.138490","approval":false},{"sender":"qinmin@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"https://codereview.chromium.org/23549021/diff/17001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/17001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode177\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:177: getCodecsFromMediaCodecInfo(supportedTypes[j]),\nJust return mime types and secure decoder information to the native side.\nAnd added 2 calls in native to map mime to container type and codecs.\n\nOn 2013/09/11 00:29:23, xhwang wrote:\n> I am confused here, we are supposed to get a container-codec pair list. But it\n> seems supportedTypes[j] is also a codec type (based on the list on 192. \n> \n> Actually MediaCodec doesn't care about container type (e.g. mp4 or webm). Only\n> Demuxer and MediaDrm cares about container. Demuxer needs to know the container\n> type to be able to parse it correctly. MediaDrm needs to support the initdata\n> which is container type specific. So in our case, it seems that container type\n> and codec type are orthogonal: we can get a list of codec separately and then\n> just multiply it with the container type we support.\n\nhttps://codereview.chromium.org/23549021/diff/17001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode191\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:191: private static String getCodecsFromMediaCodecInfo(String containerType) {\nthis function is moved to native and renamed.\nOn 2013/09/11 00:29:23, xhwang wrote:\n> s/containerType/codecType/\n> \n> avc, vorbis etc are all codec names.\n\nhttps://codereview.chromium.org/23549021/diff/17001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode191\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:191: private static String getCodecsFromMediaCodecInfo(String containerType) {\nto be consistent, moved this to native side.\nOn 2013/09/11 00:29:23, xhwang wrote:\n> This function is kind of the reverse of\n> https://code.google.com/p/chromium/codesearch#chromium/src/media/base/android/media_codec_bridge.cc&sq=package:chromium&l=55\n> \n> It'll be nice to have both functions in the same layer (native or java), and\n> have a static map that we can use to do the conversion. But that can be done in\n> a separate CL.\n\nhttps://codereview.chromium.org/23549021/diff/17001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode213\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:213: int count = MediaCodecList.getCodecCount();\nOn 2013/09/11 00:29:23, xhwang wrote:\n> 4 space indent\n\nDone.","disapproval":false,"date":"2013-09-11 02:20:13.900540","approval":false},{"sender":"xhwang@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"https://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode83\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:83: private static class CodecMimeInfo {\nCan we try to avoid the word \"mime\"? It's kind of confusing. How about SupportedCodecInfo or just CodecInfo?\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode142\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:142: new HashMap<String, CodecMimeInfo>();\nhmm, can we just have a map <codec_type, secure_decoder_supported> ?\n\nI am not sure why we need a map like:\n<codec_type, pair<codec_type, secure_decoder_supported> > ...\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/media_codec_bridge.h\nFile media/base/android/media_codec_bridge.h (right):\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/media_codec_bridge.h#newcode55\nmedia/base/android/media_codec_bridge.h:55: std::string container_type;\nHmm, I see why you have the map in the java code. But really the first element is still a codec type. MediaCodec knows nothing about the container type. We need MediaSourcePlayer or something else to combine container and codec info and make the final ContainerCodecsInfo.","disapproval":false,"date":"2013-09-11 18:16:00.219580","approval":false},{"sender":"qinmin@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"https://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode83\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:83: private static class CodecMimeInfo {\nOn 2013/09/11 18:16:00, xhwang wrote:\n> Can we try to avoid the word \"mime\"? It's kind of confusing. How about\n> SupportedCodecInfo or just CodecInfo?\n\nDone.\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode142\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:142: new HashMap<String, CodecMimeInfo>();\nThis is to facilitate the output of the Array.\nIf we use <codec_type, secure_decoder_supported>, the we need an extra loop to create an array, and insert each item from the map to the array.\nuse <codec_type, pair<codec_type, secure_decoder_supported> >, we can simply call Hashmap.values().toArray() to convert the output to an array. The code is much cleaner than the former\n\nOn 2013/09/11 18:16:00, xhwang wrote:\n> hmm, can we just have a map <codec_type, secure_decoder_supported> ?\n> \n> I am not sure why we need a map like:\n> <codec_type, pair<codec_type, secure_decoder_supported> > ...\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/media_codec_bridge.h\nFile media/base/android/media_codec_bridge.h (right):\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/media_codec_bridge.h#newcode55\nmedia/base/android/media_codec_bridge.h:55: std::string container_type;\nYes, that's why i added 2 static functions in the C++ file to convert codec type to container type and codecs.\nSo the final ContainerCodecsInfo will be something like {\"video/webm\",\"vp8\", false}\n\nOn 2013/09/11 18:16:00, xhwang wrote:\n> Hmm, I see why you have the map in the java code. But really the first element\n> is still a codec type. MediaCodec knows nothing about the container type. We\n> need MediaSourcePlayer or something else to combine container and codec info and\n> make the final ContainerCodecsInfo.","disapproval":false,"date":"2013-09-11 19:07:09.971890","approval":false},{"sender":"xhwang@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"https://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode142\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:142: new HashMap<String, CodecMimeInfo>();\nI am not familiar with Java. But why we can't use Vector<CodecMimeInfo>.toArray()?\n\nOn 2013/09/11 19:07:10, qinmin wrote:\n> This is to facilitate the output of the Array.\n> If we use <codec_type, secure_decoder_supported>, the we need an extra loop to\n> create an array, and insert each item from the map to the array.\n> use <codec_type, pair<codec_type, secure_decoder_supported> >, we can simply\n> call Hashmap.values().toArray() to convert the output to an array. The code is\n> much cleaner than the former\n> \n> On 2013/09/11 18:16:00, xhwang wrote:\n> > hmm, can we just have a map <codec_type, secure_decoder_supported> ?\n> > \n> > I am not sure why we need a map like:\n> > <codec_type, pair<codec_type, secure_decoder_supported> > ...\n\nhttps://codereview.chromium.org/23549021/diff/24001/media/base/android/media_codec_bridge.cc\nFile media/base/android/media_codec_bridge.cc (right):\n\nhttps://codereview.chromium.org/23549021/diff/24001/media/base/android/media_codec_bridge.cc#newcode70\nmedia/base/android/media_codec_bridge.cc:70: static const std::string MimeTypeToCodecType(const std::string& mime) {\ns/MimeType/AndroidCodecType or AndroidMimeType\n\nhttps://codereview.chromium.org/23549021/diff/24001/media/base/android/media_codec_bridge.cc#newcode106\nmedia/base/android/media_codec_bridge.cc:106: }\nContainer and codec should be relatively orthogonal. Nothing prevents people from putting vp8 into a .mp4 container. This list is fine for our use cases, but I really think we should not have anything related to container in MediaCodec* classes. Maybe move this conversion to MediaSourcePlayer?\n\nhttps://codereview.chromium.org/23549021/diff/24001/media/base/android/media_codec_bridge.h\nFile media/base/android/media_codec_bridge.h (right):\n\nhttps://codereview.chromium.org/23549021/diff/24001/media/base/android/media_codec_bridge.h#newcode58\nmedia/base/android/media_codec_bridge.h:58: };\nThis list is is intermediate result and we have to combine it with container type, key_system, security level etc to create a KeySystemInfo list. So I'd keep it concise and short. How about dropping |container_type| here and handles containers in a higher level (e.g. in MediaSourcePlayer)?","disapproval":false,"date":"2013-09-11 21:01:23.035950","approval":false},{"sender":"qinmin@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"https://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode142\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:142: new HashMap<String, CodecMimeInfo>();\nThere are several problems:\n1. vector.indexOf() is inefficient compared to map\n2. we need to implement the equals() function for CodecMimeInfo as it is not a primitive type as string\n3. \"video/vp8, true\" and \"video/vp8, false\" will be separate entries if we use vector.indexOf(), but we only need to return 1 entry since the former implies the latter\n\nOn 2013/09/11 21:01:23, xhwang wrote:\n> I am not familiar with Java. But why we can't use\n> Vector<CodecMimeInfo>.toArray()?\n> \n> On 2013/09/11 19:07:10, qinmin wrote:\n> > This is to facilitate the output of the Array.\n> > If we use <codec_type, secure_decoder_supported>, the we need an extra loop to\n> > create an array, and insert each item from the map to the array.\n> > use <codec_type, pair<codec_type, secure_decoder_supported> >, we can simply\n> > call Hashmap.values().toArray() to convert the output to an array. The code is\n> > much cleaner than the former\n> > \n> > On 2013/09/11 18:16:00, xhwang wrote:\n> > > hmm, can we just have a map <codec_type, secure_decoder_supported> ?\n> > > \n> > > I am not sure why we need a map like:\n> > > <codec_type, pair<codec_type, secure_decoder_supported> > ...\n>\n\nhttps://codereview.chromium.org/23549021/diff/24001/media/base/android/media_codec_bridge.cc\nFile media/base/android/media_codec_bridge.cc (right):\n\nhttps://codereview.chromium.org/23549021/diff/24001/media/base/android/media_codec_bridge.cc#newcode70\nmedia/base/android/media_codec_bridge.cc:70: static const std::string MimeTypeToCodecType(const std::string& mime) {\nJust to be consistent with the function name above. Changed both function names to AndroidMimeType.\n\nOn 2013/09/11 21:01:23, xhwang wrote:\n> s/MimeType/AndroidCodecType or AndroidMimeType\n\nhttps://codereview.chromium.org/23549021/diff/24001/media/base/android/media_codec_bridge.cc#newcode106\nmedia/base/android/media_codec_bridge.cc:106: }\nRemoved this conversion, will have this map in a separate cl when I hook up with the key_system_info\n\nOn 2013/09/11 21:01:23, xhwang wrote:\n> Container and codec should be relatively orthogonal. Nothing prevents people\n> from putting vp8 into a .mp4 container. This list is fine for our use cases, but\n> I really think we should not have anything related to container in MediaCodec*\n> classes. Maybe move this conversion to MediaSourcePlayer?\n\nhttps://codereview.chromium.org/23549021/diff/24001/media/base/android/media_codec_bridge.h\nFile media/base/android/media_codec_bridge.h (right):\n\nhttps://codereview.chromium.org/23549021/diff/24001/media/base/android/media_codec_bridge.h#newcode58\nmedia/base/android/media_codec_bridge.h:58: };\nOn 2013/09/11 21:01:23, xhwang wrote:\n> This list is is intermediate result and we have to combine it with container\n> type, key_system, security level etc to create a KeySystemInfo list. So I'd keep\n> it concise and short. How about dropping |container_type| here and handles\n> containers in a higher level (e.g. in MediaSourcePlayer)?\n\nDone.","disapproval":false,"date":"2013-09-11 22:08:05.835400","approval":false},{"sender":"xhwang@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"Thanks for the patience! lgtm % comments.\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode142\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:142: new HashMap<String, CodecMimeInfo>();\nOn 2013/09/11 22:08:06, qinmin wrote:\n> There are several problems:\n> 1. vector.indexOf() is inefficient compared to map\n> 2. we need to implement the equals() function for CodecMimeInfo as it is not a\n> primitive type as string\n> 3. \"video/vp8, true\" and \"video/vp8, false\" will be separate entries if we use\n> vector.indexOf(), but we only need to return 1 entry since the former implies\n> the latter\n> \n> On 2013/09/11 21:01:23, xhwang wrote:\n> > I am not familiar with Java. But why we can't use\n> > Vector<CodecMimeInfo>.toArray()?\n> > \n> > On 2013/09/11 19:07:10, qinmin wrote:\n> > > This is to facilitate the output of the Array.\n> > > If we use <codec_type, secure_decoder_supported>, the we need an extra loop\n> to\n> > > create an array, and insert each item from the map to the array.\n> > > use <codec_type, pair<codec_type, secure_decoder_supported> >, we can simply\n> > > call Hashmap.values().toArray() to convert the output to an array. The code\n> is\n> > > much cleaner than the former\n> > > \n> > > On 2013/09/11 18:16:00, xhwang wrote:\n> > > > hmm, can we just have a map <codec_type, secure_decoder_supported> ?\n> > > > \n> > > > I am not sure why we need a map like:\n> > > > <codec_type, pair<codec_type, secure_decoder_supported> > ...\n> > \n\nI see. Good to learn!\n\nMy last attempt though. Can we drop CodecMimeInfo and have:\nHashMap<String /*codec_type*/, bool /*secure_decoder_supported*/> codecMap;\n\nThen we do codecMap.entrySet().toArray() ?\n\nIf it doesn't work then nevermind.\n\nhttps://codereview.chromium.org/23549021/diff/28001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/28001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode142\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:142: new HashMap<String, CodecInfo>();\nfit in one line?\n\nhttps://codereview.chromium.org/23549021/diff/28001/media/base/android/media_codec_bridge.h\nFile media/base/android/media_codec_bridge.h (right):\n\nhttps://codereview.chromium.org/23549021/diff/28001/media/base/android/media_codec_bridge.h#newcode62\nmedia/base/android/media_codec_bridge.h:62: std::vector<CodecsInfo>* codecs_info);\nfit in one line?","disapproval":false,"date":"2013-09-11 23:14:05.358970","approval":true},{"sender":"qinmin@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"https://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/4004/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode142\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:142: new HashMap<String, CodecMimeInfo>();\nEntrySet is a generic type, and generic array creation is not allowed in Java. So I need to return an object[] from this function. \nThen when the native side ask java to return the value of the entry inside the object array, java side needs to convert the object to an EntrySet.\nIn this case, the CodecMimeInfo class is no longer needed. All we need is EntrySet<String, Boolean> and object[]. But the code then becomes hard to read. There are wierd java functions that tries to parse an jobject. \n\nOn 2013/09/11 23:14:05, xhwang wrote:\n> On 2013/09/11 22:08:06, qinmin wrote:\n> > There are several problems:\n> > 1. vector.indexOf() is inefficient compared to map\n> > 2. we need to implement the equals() function for CodecMimeInfo as it is not a\n> > primitive type as string\n> > 3. \"video/vp8, true\" and \"video/vp8, false\" will be separate entries if we use\n> > vector.indexOf(), but we only need to return 1 entry since the former implies\n> > the latter\n> > \n> > On 2013/09/11 21:01:23, xhwang wrote:\n> > > I am not familiar with Java. But why we can't use\n> > > Vector<CodecMimeInfo>.toArray()?\n> > > \n> > > On 2013/09/11 19:07:10, qinmin wrote:\n> > > > This is to facilitate the output of the Array.\n> > > > If we use <codec_type, secure_decoder_supported>, the we need an extra\n> loop\n> > to\n> > > > create an array, and insert each item from the map to the array.\n> > > > use <codec_type, pair<codec_type, secure_decoder_supported> >, we can\n> simply\n> > > > call Hashmap.values().toArray() to convert the output to an array. The\n> code\n> > is\n> > > > much cleaner than the former\n> > > > \n> > > > On 2013/09/11 18:16:00, xhwang wrote:\n> > > > > hmm, can we just have a map <codec_type, secure_decoder_supported> ?\n> > > > > \n> > > > > I am not sure why we need a map like:\n> > > > > <codec_type, pair<codec_type, secure_decoder_supported> > ...\n> > > \n> \n> I see. Good to learn!\n> \n> My last attempt though. Can we drop CodecMimeInfo and have:\n> HashMap<String /*codec_type*/, bool /*secure_decoder_supported*/> codecMap;\n> \n> Then we do codecMap.entrySet().toArray() ?\n> \n> If it doesn't work then nevermind.\n\nhttps://codereview.chromium.org/23549021/diff/28001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java\nFile media/base/android/java/src/org/chromium/media/MediaCodecBridge.java (right):\n\nhttps://codereview.chromium.org/23549021/diff/28001/media/base/android/java/src/org/chromium/media/MediaCodecBridge.java#newcode142\nmedia/base/android/java/src/org/chromium/media/MediaCodecBridge.java:142: new HashMap<String, CodecInfo>();\nOn 2013/09/11 23:14:05, xhwang wrote:\n> fit in one line?\n\nDone.\n\nhttps://codereview.chromium.org/23549021/diff/28001/media/base/android/media_codec_bridge.h\nFile media/base/android/media_codec_bridge.h (right):\n\nhttps://codereview.chromium.org/23549021/diff/28001/media/base/android/media_codec_bridge.h#newcode62\nmedia/base/android/media_codec_bridge.h:62: std::vector<CodecsInfo>* codecs_info);\nOn 2013/09/11 23:14:05, xhwang wrote:\n> fit in one line?\n\nDone.","disapproval":false,"date":"2013-09-12 00:10:12.401510","approval":false},{"sender":"commit-bot@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/qinmin@chromium.org/23549021/34001","disapproval":false,"date":"2013-09-12 01:32:08.701260","approval":false},{"sender":"commit-bot@chromium.org","recipients":["qinmin@chromium.org","xhwang@chromium.org","ddorwin@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"Change committed as 222738","disapproval":false,"date":"2013-09-12 08:02:24.956810","approval":false}],"owner_email":"qinmin@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"qinmin","subject":"Add a static to get supported container format for MediaCodec","created":"2013-09-09 17:19:22.279030","patchsets":[3001,9001,17001,4004,24001,28001,34001],"modified":"2013-09-12 08:02:25.170870","closed":true,"commit":false,"issue":23549021}