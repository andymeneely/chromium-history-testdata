{"files":{"content/renderer/media/media_stream_dependency_factory.cc":{"status":"M","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":36,"num_removed":1,"messages":[{"author":"tommi","author_email":"tommi@chromium.org","text":"is this the only definition of this constant or does it exist in libjingle too?\n\"googLog\" doesn't sound very descriptive. Can we call it \"webrtc_log\"?","draft":false,"lineno":40,"date":"2013-04-21 22:58:45.910170","left":false},{"author":"tommi","author_email":"tommi@chromium.org","text":"Why doesn't the caller just do this instead of going through the factory?","draft":false,"lineno":733,"date":"2013-04-21 22:58:45.910400","left":false},{"author":"Henrik Grunell","author_email":"grunell@chromium.org","text":"On 2013/04/21 22:58:45, tommi wrote:\n> is this the only definition of this constant or does it exist in libjingle too?\n\nIt's the one and only place here. Here is where the parsing of that constraint takes place and the log is enabled.\n\n> \"googLog\" doesn't sound very descriptive. Can we call it \"webrtc_log\"?\n\nThat was decided in the design doc dev process. We can check with Justin if that's OK. I think the goog prefix must be there. (See also other constraints parsed in libjingle.)","draft":false,"lineno":40,"date":"2013-04-22 06:33:47.928080","left":false},{"author":"Henrik Grunell","author_email":"grunell@chromium.org","text":"On 2013/04/21 22:58:45, tommi wrote:\n> Why doesn't the caller just do this instead of going through the factory?\n\nIt's a bit odd to have this done in a dependency factory. But it seems to be the natural place to parse the constraint, which triggers enabling the log. WebKit is the caller, I don't think we should parse the constraint there. (This function itself is only for opening the log on the right thread.)","draft":false,"lineno":733,"date":"2013-04-22 06:33:47.928260","left":false},{"author":"tommi","author_email":"tommi@chromium.org","text":"On 2013/04/22 06:33:47, Henrik Grunell wrote:\n> On 2013/04/21 22:58:45, tommi wrote:\n> > is this the only definition of this constant or does it exist in libjingle\n> too?\n> \n> It's the one and only place here. Here is where the parsing of that constraint\n> takes place and the log is enabled.\n> \n> > \"googLog\" doesn't sound very descriptive. Can we call it \"webrtc_log\"?\n> \n> That was decided in the design doc dev process. We can check with Justin if\n> that's OK. I think the goog prefix must be there. (See also other constraints\n> parsed in libjingle.)\n\nOK, if you could add a comment here that explains the name and purpose, that'd be great.","draft":false,"lineno":40,"date":"2013-04-22 09:05:38.184910","left":false},{"author":"tommi","author_email":"tommi@chromium.org","text":"On 2013/04/22 06:33:47, Henrik Grunell wrote:\n> On 2013/04/21 22:58:45, tommi wrote:\n> > Why doesn't the caller just do this instead of going through the factory?\n> \n> It's a bit odd to have this done in a dependency factory. But it seems to be the\n> natural place to parse the constraint, which triggers enabling the log. WebKit\n> is the caller, I don't think we should parse the constraint there. (This\n> function itself is only for opening the log on the right thread.)\n\nAh, I see.  In that case you can remove this function and do this instead:\n\nRenderThreadImpl::current()->GetIOMessageLoopProxy()->PostTask(\n    FROM_HERE, base::Bind(\n        &WebRtcLoggingHandlerImpl::OpenLog,\n        handler));\n","draft":false,"lineno":733,"date":"2013-04-22 09:05:38.185190","left":false},{"author":"Henrik Grunell","author_email":"grunell@chromium.org","text":"On 2013/04/22 09:05:38, tommi wrote:\n> On 2013/04/22 06:33:47, Henrik Grunell wrote:\n> > On 2013/04/21 22:58:45, tommi wrote:\n> > > is this the only definition of this constant or does it exist in libjingle\n> > too?\n> > \n> > It's the one and only place here. Here is where the parsing of that constraint\n> > takes place and the log is enabled.\n> > \n> > > \"googLog\" doesn't sound very descriptive. Can we call it \"webrtc_log\"?\n> > \n> > That was decided in the design doc dev process. We can check with Justin if\n> > that's OK. I think the goog prefix must be there. (See also other constraints\n> > parsed in libjingle.)\n> \n> OK, if you could add a comment here that explains the name and purpose, that'd\n> be great.\n\nDone.","draft":false,"lineno":40,"date":"2013-04-22 10:51:24.370780","left":false},{"author":"Henrik Grunell","author_email":"grunell@chromium.org","text":"On 2013/04/22 09:05:38, tommi wrote:\n> On 2013/04/22 06:33:47, Henrik Grunell wrote:\n> > On 2013/04/21 22:58:45, tommi wrote:\n> > > Why doesn't the caller just do this instead of going through the factory?\n> > \n> > It's a bit odd to have this done in a dependency factory. But it seems to be\n> the\n> > natural place to parse the constraint, which triggers enabling the log. WebKit\n> > is the caller, I don't think we should parse the constraint there. (This\n> > function itself is only for opening the log on the right thread.)\n> \n> Ah, I see.  In that case you can remove this function and do this instead:\n> \n> RenderThreadImpl::current()->GetIOMessageLoopProxy()->PostTask(\n>     FROM_HERE, base::Bind(\n>         &WebRtcLoggingHandlerImpl::OpenLog,\n>         handler));\n\nOf course. Done.","draft":false,"lineno":733,"date":"2013-04-22 10:51:24.371100","left":false}],"id":2,"is_binary":false},"content/renderer/media/media_stream_dependency_factory.h":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":5,"num_removed":0,"messages":[],"id":3,"is_binary":false},"content/renderer/render_thread_impl.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":0,"messages":[],"id":4,"is_binary":false},"content/renderer/webrtc_logging_handler_impl.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":0,"messages":[{"author":"tommi","author_email":"tommi@chromium.org","text":"Since this is more than regular logging, can we call this InitWebRTCLoggingDelegate?","draft":false,"lineno":48,"date":"2013-04-21 22:58:45.910580","left":false},{"author":"Henrik Grunell","author_email":"grunell@chromium.org","text":"On 2013/04/21 22:58:45, tommi wrote:\n> Since this is more than regular logging, can we call this\n> InitWebRTCLoggingDelegate?\n\nsgtm. Done. Also updated a CL this depends on.","draft":false,"lineno":48,"date":"2013-04-22 10:51:24.371410","left":false}],"id":5,"is_binary":false}},"owner_email":"grunell@chromium.org","owner":"Henrik Grunell","message":null,"try_job_results":[],"created":"2013-04-21 11:44:42.664040","url":null,"num_comments":10,"modified":"2013-04-22 10:51:24.423810","patchset":1,"issue":13976016}