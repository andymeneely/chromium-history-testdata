{"description":"sync: Count nodes more efficiently\n\nThe GetTotalNodesCount() function is called sufficiently often that it\nmakes sense to spend some effort optimizing its implementation.\n\nThe current implementation uses some traversal functions that are fairly\nslow, especially since GetSuccessorId() was made more expensive by the\nimplementation of UniquePositions.\n\nThis change moves the implementation into the syncable::Directory.  This\nallows it to take advantage of the Directory's internal data structures\nand avoid unnecessary lookups. \n\nBUG=248143,238621\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=202973","cc":["chromium-reviews@chromium.org","rsimha@chromium.org","haitaol@chromium.org","akalin@chromium.org","tim@chromium.org"],"reviewers":["tim@chromium.org","zea@chromium.org"],"messages":[{"sender":"rlarocque@chromium.org","recipients":["rlarocque@chromium.org","tim@chromium.org","chromium-reviews@chromium.org","rsimha@chromium.org","haitaol@chromium.org","akalin@chromium.org","tim@chromium.org"],"text":"Please review.\n\nhttps://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.cc\nFile sync/syncable/directory.cc (right):\n\nhttps://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.cc#newcode348\nsync/syncable/directory.cc:348: void Directory::GetTotalNodeCountImpl(\nThis is the main reason I wanted to use recursion.  I'm not sure how to name this function.  If I use recursion, then this function is no longer necessary, and the naming problem disappears.","disapproval":false,"date":"2013-05-21 00:09:06.933530","approval":false},{"sender":"rlarocque@chromium.org","recipients":["rlarocque@chromium.org","tim@chromium.org","zea@chromium.org","chromium-reviews@chromium.org","rsimha@chromium.org","haitaol@chromium.org","akalin@chromium.org","tim@chromium.org"],"text":"Re-assigning to Nicolas because Tim will be OOO for a while.\n\nThe original review message references a discussion Tim and I had earlier about whether or not it's a good idea to use recursion to traverse the syncable::Directory.  There are some technical arguments in favor of not using recursion, though I think the recursive version of the code is easier to understand.  I'd be OK with either approach, though I have a slight preference for the non-recursive version.","disapproval":false,"date":"2013-05-28 18:22:58.281460","approval":false},{"sender":"zea@chromium.org","recipients":["rlarocque@chromium.org","tim@chromium.org","zea@chromium.org","chromium-reviews@chromium.org","rsimha@chromium.org","haitaol@chromium.org","akalin@chromium.org","tim@chromium.org"],"text":"https://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.cc\nFile sync/syncable/directory.cc (right):\n\nhttps://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.cc#newcode324\nsync/syncable/directory.cc:324: int Directory::GetTotalNodeCount(\nthis seems complex enough to warrant a unit test, or are there existing ones that cover this?\n\nhttps://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.cc#newcode348\nsync/syncable/directory.cc:348: void Directory::GetTotalNodeCountImpl(\nOn 2013/05/21 00:09:07, rlarocque wrote:\n> This is the main reason I wanted to use recursion.  I'm not sure how to name\n> this function.  If I use recursion, then this function is no longer necessary,\n> and the naming problem disappears.\n\nSeems like it's just a child grabber right? Maybe something like GetChildrenForKernel?\n\nThat said, this method seems like it's just a wrapper for GetChildren, and isn't used anywhere else. Given that GetTotalNodeCount isn't doing much to being with, you could just inline this logic, and avoid the naming issue altogether.\n\nhttps://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.h\nFile sync/syncable/directory.h (right):\n\nhttps://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.h#newcode460\nsync/syncable/directory.h:460: \nremove extra newline, and period at end of comment.","disapproval":false,"date":"2013-05-28 22:12:39.250550","approval":false},{"sender":"rlarocque@chromium.org","recipients":["rlarocque@chromium.org","tim@chromium.org","zea@chromium.org","chromium-reviews@chromium.org","rsimha@chromium.org","haitaol@chromium.org","akalin@chromium.org","tim@chromium.org"],"text":"PTAL.\n\nhttps://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.cc\nFile sync/syncable/directory.cc (right):\n\nhttps://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.cc#newcode324\nsync/syncable/directory.cc:324: int Directory::GetTotalNodeCount(\nOn 2013/05/28 22:12:39, Nicolas Zea wrote:\n> this seems complex enough to warrant a unit test, or are there existing ones\n> that cover this?\n\nThere are some existing tests.  See SyncApiTest.GetTotalNodeCount*.\n\nhttps://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.cc#newcode348\nsync/syncable/directory.cc:348: void Directory::GetTotalNodeCountImpl(\nOn 2013/05/28 22:12:39, Nicolas Zea wrote:\n> On 2013/05/21 00:09:07, rlarocque wrote:\n> > This is the main reason I wanted to use recursion.  I'm not sure how to name\n> > this function.  If I use recursion, then this function is no longer necessary,\n> > and the naming problem disappears.\n> \n> Seems like it's just a child grabber right? Maybe something like\n> GetChildrenForKernel?\n\nI like that general idea.  I decided to go with GetChildSetForKernel.\n\n> That said, this method seems like it's just a wrapper for GetChildren, and isn't\n> used anywhere else. Given that GetTotalNodeCount isn't doing much to being with,\n> you could just inline this logic, and avoid the naming issue altogether.\n\nIt would have to be inlined at both line 334 and line 341.  I'd prefer to avoid that.\n\nhttps://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.h\nFile sync/syncable/directory.h (right):\n\nhttps://codereview.chromium.org/15322003/diff/3001/sync/syncable/directory.h#newcode460\nsync/syncable/directory.h:460: \nOn 2013/05/28 22:12:39, Nicolas Zea wrote:\n> remove extra newline, and period at end of comment.\n\nDone.","disapproval":false,"date":"2013-05-29 19:01:13.475760","approval":false},{"sender":"zea@chromium.org","recipients":["rlarocque@chromium.org","tim@chromium.org","zea@chromium.org","chromium-reviews@chromium.org","rsimha@chromium.org","haitaol@chromium.org","akalin@chromium.org","tim@chromium.org"],"text":"lgtm","disapproval":false,"date":"2013-05-29 19:02:30.092870","approval":true},{"sender":"commit-bot@chromium.org","recipients":["rlarocque@chromium.org","tim@chromium.org","zea@chromium.org","chromium-reviews@chromium.org","rsimha@chromium.org","haitaol@chromium.org","akalin@chromium.org","tim@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/rlarocque@chromium.org/15322003/13001","disapproval":false,"date":"2013-05-29 19:03:50.200690","approval":false},{"sender":"commit-bot@chromium.org","recipients":["rlarocque@chromium.org","tim@chromium.org","zea@chromium.org","chromium-reviews@chromium.org","rsimha@chromium.org","haitaol@chromium.org","akalin@chromium.org","tim@chromium.org"],"text":"Change committed as 202973","disapproval":false,"date":"2013-05-29 21:18:33.880110","approval":false}],"owner_email":"rlarocque@chromium.org","private":false,"base_url":"https://chromium.googlesource.com/chromium/src.git@master","owner":"rlarocque","subject":"sync: Count nodes more efficiently","created":"2013-05-18 01:50:30.680700","patchsets":[1,1001,3001,13001],"modified":"2013-05-29 21:18:34.076590","closed":true,"commit":false,"issue":15322003}