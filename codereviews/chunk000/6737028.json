{"description":"Put back \"Enable component extensions for DefaultProfile used in login screen dialogs\"\r\n\r\nInitial commit: http://src.chromium.org/viewvc/chrome?view=rev&revision=79526\r\n\r\nBUG=chromium-os:12741\r\nTEST=Run debug Chrome on device\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=81770","cc":["chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"reviewers":["davemoore@chromium.org","aa@chromium.org","mpcomplete@chromium.org"],"messages":[{"sender":"dpolukhin@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","aa@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"http://codereview.chromium.org/6737028/diff/1/chrome/browser/extensions/extension_management_api.cc\nFile chrome/browser/extensions/extension_management_api.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/1/chrome/browser/extensions/extension_management_api.cc#newcode266\nchrome/browser/extensions/extension_management_api.cc:266: if (registrar_.IsEmpty()) {\nAll other event routers already do this.","disapproval":false,"date":"2011-03-31 14:12:25.797543","approval":false},{"sender":"dpolukhin@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","aa@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"I'm sorry this CL is not ready for review yet. I found another issue with this CL: external extensions get installed in default profile and they are running in background. Only component extensions should work for default profile all other extensions should work only in user's profile.\n\nPossible solution is to add profile attribute to distinguish profiles with enabled and disabled user's extensions. Alternative solution is to unload default profile after user logs in bit it is also not implemented.","disapproval":false,"date":"2011-03-31 14:44:27.320446","approval":false},{"sender":"dpolukhin@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","aa@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"Please take a look now. It works and all tests passes.","disapproval":false,"date":"2011-04-07 17:13:21.759763","approval":false},{"sender":"aa@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","aa@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"http://codereview.chromium.org/6737028/diff/11001/chrome/browser/chromeos/login/login_browsertest.cc\nFile chrome/browser/chromeos/login/login_browsertest.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/chromeos/login/login_browsertest.cc#newcode95\nchrome/browser/chromeos/login/login_browsertest.cc:95: EXPECT_NE(static_cast<ExtensionService*>(NULL),\nThere's ASSERT_NOT_NULL you can use instead. Or you can just use EXPECT_TRUE.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_management_api.cc\nFile chrome/browser/extensions/extension_management_api.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_management_api.cc#newcode266\nchrome/browser/extensions/extension_management_api.cc:266: if (registrar_.IsEmpty()) {\nunrelated change?\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_process_manager.cc\nFile chrome/browser/extensions/extension_process_manager.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_process_manager.cc#newcode175\nchrome/browser/extensions/extension_process_manager.cc:175: ExtensionService* extension_service =\nWhy is this change necessary? How do we even get in here when we aren't loading any extensions in ExtensionService?\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_service.h\nFile chrome/browser/extensions/extension_service.h (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_service.h#newcode145\nchrome/browser/extensions/extension_service.h:145: bool autoupdate_enabled,\nBoolean params are bad for readability. How about adding an ExtensionServiceFlags enum to pass in here?\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_impl.cc\nFile chrome/browser/profiles/profile_impl.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_impl.cc#newcode363\nchrome/browser/profiles/profile_impl.cc:363: ExtensionErrorReporter::Init(extensions_enabled);  // allow noisy errors.\nThis should always be true.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_impl.cc#newcode372\nchrome/browser/profiles/profile_impl.cc:372: if (!extensions_enabled)\nWhat do we do in ExtensionUpdater that you're trying to avoid here? It seems like if no extensions are installed that have update URLs, ExtensionUpdater shouldn't do anything.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.cc\nFile chrome/browser/profiles/profile_manager.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.cc#newcode158\nchrome/browser/profiles/profile_manager.cc:158: // for this profile. HelpApp is as example of component extension.\nComment doesn't really make sense.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.h\nFile chrome/browser/profiles/profile_manager.h (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.h#newcode110\nchrome/browser/profiles/profile_manager.h:110: // first to see if the profile already exists.\nWhy would it matter if extensions were enabled the last time this path was used, out of curiosity?\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.h#newcode111\nchrome/browser/profiles/profile_manager.h:111: Profile* GetProfileImpl(const FilePath& profile_dir, bool extensions_enabled);\nWhy the name change GetProfile->GetProfileImpl? Also, why make this method private?","disapproval":false,"date":"2011-04-09 04:53:48.358249","approval":false},{"sender":"dpolukhin@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","aa@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"http://codereview.chromium.org/6737028/diff/11001/chrome/browser/chromeos/login/login_browsertest.cc\nFile chrome/browser/chromeos/login/login_browsertest.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/chromeos/login/login_browsertest.cc#newcode95\nchrome/browser/chromeos/login/login_browsertest.cc:95: EXPECT_NE(static_cast<ExtensionService*>(NULL),\nOn 2011/04/09 04:53:48, Aaron Boodman wrote:\n> There's ASSERT_NOT_NULL you can use instead. Or you can just use EXPECT_TRUE.\n\nDone.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_management_api.cc\nFile chrome/browser/extensions/extension_management_api.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_management_api.cc#newcode266\nchrome/browser/extensions/extension_management_api.cc:266: if (registrar_.IsEmpty()) {\nOn 2011/04/09 04:53:48, Aaron Boodman wrote:\n> unrelated change?\n\nIt is required changes because Init will be called more than once - for login profile and for user's profile. All other event routers already have such guards (see for example http://google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/chrome/browser/extensions/extension_cookies_api.cc&q=ExtensionCookiesEventRouter::Init&exact_package=chromium&sa=N&cd=1&ct=rc&l=33). I don't like such protection but it is required because concept of ExtensionManagementEventRouter as a singleton is broken (singleton shouldn't require Init method that must be called only once before first use).\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_process_manager.cc\nFile chrome/browser/extensions/extension_process_manager.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_process_manager.cc#newcode175\nchrome/browser/extensions/extension_process_manager.cc:175: ExtensionService* extension_service =\nOn 2011/04/09 04:53:48, Aaron Boodman wrote:\n> Why is this change necessary? How do we even get in here when we aren't loading\n> any extensions in ExtensionService?\n\nThis change is required when user logs in and user's extensions start loading. This changes prevents creating renderer for user's extensions in login profile. It looks like we don't have concept of profile unload.\n\nHow it works in general. Initially only login profile is initialized. When user logs in on Chrome OS we don't restart Chrome process and just load user profile. Therefore when user logged in we have 2 profiles in memory. It is already happens, I haven't changed it. My CL initializes extensions in login profile.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_service.h\nFile chrome/browser/extensions/extension_service.h (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_service.h#newcode145\nchrome/browser/extensions/extension_service.h:145: bool autoupdate_enabled,\nOn 2011/04/09 04:53:48, Aaron Boodman wrote:\n> Boolean params are bad for readability. How about adding an\n> ExtensionServiceFlags enum to pass in here?\n\nI'm not sure that I get the idea. It looks like we need all 4 combinations of autoupdate_enabled and extensions_enabled for testing purpose so using single flags enum won't make things simpler, IMHO.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_impl.cc\nFile chrome/browser/profiles/profile_impl.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_impl.cc#newcode363\nchrome/browser/profiles/profile_impl.cc:363: ExtensionErrorReporter::Init(extensions_enabled);  // allow noisy errors.\nOn 2011/04/09 04:53:48, Aaron Boodman wrote:\n> This should always be true.\n\nDone.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_impl.cc#newcode372\nchrome/browser/profiles/profile_impl.cc:372: if (!extensions_enabled)\nOn 2011/04/09 04:53:48, Aaron Boodman wrote:\n> What do we do in ExtensionUpdater that you're trying to avoid here? It seems\n> like if no extensions are installed that have update URLs, ExtensionUpdater\n> shouldn't do anything.\n\nI would like to avoid pings to server from login screen. As far as I understand blacklist will be downloaded if there are component extensions because HasInstalledExtensions returns true.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.cc\nFile chrome/browser/profiles/profile_manager.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.cc#newcode158\nchrome/browser/profiles/profile_manager.cc:158: // for this profile. HelpApp is as example of component extension.\nOn 2011/04/09 04:53:48, Aaron Boodman wrote:\n> Comment doesn't really make sense.\n\nDone.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.h\nFile chrome/browser/profiles/profile_manager.h (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.h#newcode110\nchrome/browser/profiles/profile_manager.h:110: // first to see if the profile already exists.\nOn 2011/04/09 04:53:48, Aaron Boodman wrote:\n> Why would it matter if extensions were enabled the last time this path was used,\n> out of curiosity?\n\nBecause if Profile is initialized already, it is not re-initialized (with new extensions_enabled value) and existing profile is returned. So if profile exists extensions_enabled value is ignored.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.h#newcode111\nchrome/browser/profiles/profile_manager.h:111: Profile* GetProfileImpl(const FilePath& profile_dir, bool extensions_enabled);\nOn 2011/04/09 04:53:48, Aaron Boodman wrote:\n> Why the name change GetProfile->GetProfileImpl? Also, why make this method\n> private?\n\nI did it because I had changed meaning of second argument but preserved type of the argument. So I needed to make sure that I found all use cases. But after that I found that no-one actually using it except for 1 test (see chrome_frame/test/net/fake_external_tab.cc) and this test did it as a try to resolve test flakiness (http://codereview.chromium.org/2051004). I can make it public again but it looks that it is implementation of GetProfile that none should care about (especially taking into account that second parameter is ignored in some cases).","disapproval":false,"date":"2011-04-11 13:01:03.759228","approval":false},{"sender":"dpolukhin@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","aa@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"Friendly ping. I was going to make change in R12 so I need to commit it before FC - merge such massive change after FC is too dangerous.","disapproval":false,"date":"2011-04-13 09:54:33.806120","approval":false},{"sender":"aa@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","aa@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"lgtm w/ comment request below\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_management_api.cc\nFile chrome/browser/extensions/extension_management_api.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_management_api.cc#newcode266\nchrome/browser/extensions/extension_management_api.cc:266: if (registrar_.IsEmpty()) {\nOn 2011/04/11 13:01:03, Dmitry Polukhin wrote:\n> On 2011/04/09 04:53:48, Aaron Boodman wrote:\n> > unrelated change?\n> \n> It is required changes because Init will be called more than once - for login\n> profile and for user's profile. All other event routers already have such guards\n> (see for example\n> http://google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/chrome/browser/extensions/extension_cookies_api.cc&q=ExtensionCookiesEventRouter::Init&exact_package=chromium&sa=N&cd=1&ct=rc&l=33).\n> I don't like such protection but it is required because concept of\n> ExtensionManagementEventRouter as a singleton is broken (singleton shouldn't\n> require Init method that must be called only once before first use).\n\nAgree it is ugly, but acceptable. Can you put a comment here like:\n\n// Don't re-init (eg in the case of multiple profiles).\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_process_manager.cc\nFile chrome/browser/extensions/extension_process_manager.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_process_manager.cc#newcode175\nchrome/browser/extensions/extension_process_manager.cc:175: ExtensionService* extension_service =\nOn 2011/04/11 13:01:03, Dmitry Polukhin wrote:\n> On 2011/04/09 04:53:48, Aaron Boodman wrote:\n> > Why is this change necessary? How do we even get in here when we aren't\n> loading\n> > any extensions in ExtensionService?\n> \n> This change is required when user logs in and user's extensions start loading.\n> This changes prevents creating renderer for user's extensions in login profile.\n> It looks like we don't have concept of profile unload.\n> \n> How it works in general. Initially only login profile is initialized. When user\n> logs in on Chrome OS we don't restart Chrome process and just load user profile.\n> Therefore when user logged in we have 2 profiles in memory. It is already\n> happens, I haven't changed it. My CL initializes extensions in login profile.\n\nIt seems like when we create the first profile (the login profile), we set it up to only load extensions that are Extension::COMPONENT. So it seems like the filtering of what extensions to load has already been done by the time this code runs, so there should be no point in checking it again. Do you ever hit the return statement here?\n\nSee: http://codesearch.google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/chrome/browser/extensions/extension_service.cc&q=extension_service.cc&exact_package=chromium&l=1419\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_service.h\nFile chrome/browser/extensions/extension_service.h (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_service.h#newcode145\nchrome/browser/extensions/extension_service.h:145: bool autoupdate_enabled,\nOn 2011/04/11 13:01:03, Dmitry Polukhin wrote:\n> On 2011/04/09 04:53:48, Aaron Boodman wrote:\n> > Boolean params are bad for readability. How about adding an\n> > ExtensionServiceFlags enum to pass in here?\n> \n> I'm not sure that I get the idea. It looks like we need all 4 combinations of\n> autoupdate_enabled and extensions_enabled for testing purpose so using single\n> flags enum won't make things simpler, IMHO.\n\nThe idea is so that people can see at the call sites what the booleans mean -- so that they have meaningful names.\n\nI don't feel that strongly about this one.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_impl.cc\nFile chrome/browser/profiles/profile_impl.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_impl.cc#newcode372\nchrome/browser/profiles/profile_impl.cc:372: if (!extensions_enabled)\nOn 2011/04/11 13:01:03, Dmitry Polukhin wrote:\n> On 2011/04/09 04:53:48, Aaron Boodman wrote:\n> > What do we do in ExtensionUpdater that you're trying to avoid here? It seems\n> > like if no extensions are installed that have update URLs, ExtensionUpdater\n> > shouldn't do anything.\n> \n> I would like to avoid pings to server from login screen. As far as I understand\n> blacklist will be downloaded if there are component extensions because\n> HasInstalledExtensions returns true.\n\nOk, I talked to asargent. I agree with you.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.h\nFile chrome/browser/profiles/profile_manager.h (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.h#newcode110\nchrome/browser/profiles/profile_manager.h:110: // first to see if the profile already exists.\nOn 2011/04/11 13:01:03, Dmitry Polukhin wrote:\n> On 2011/04/09 04:53:48, Aaron Boodman wrote:\n> > Why would it matter if extensions were enabled the last time this path was\n> used,\n> > out of curiosity?\n> \n> Because if Profile is initialized already, it is not re-initialized (with new\n> extensions_enabled value) and existing profile is returned. So if profile exists\n> extensions_enabled value is ignored.\n\nok.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/profiles/profile_manager.h#newcode111\nchrome/browser/profiles/profile_manager.h:111: Profile* GetProfileImpl(const FilePath& profile_dir, bool extensions_enabled);\nOn 2011/04/11 13:01:03, Dmitry Polukhin wrote:\n> On 2011/04/09 04:53:48, Aaron Boodman wrote:\n> > Why the name change GetProfile->GetProfileImpl? Also, why make this method\n> > private?\n> \n> I did it because I had changed meaning of second argument but preserved type of\n> the argument. So I needed to make sure that I found all use cases. But after\n> that I found that no-one actually using it except for 1 test (see\n> chrome_frame/test/net/fake_external_tab.cc) and this test did it as a try to\n> resolve test flakiness (http://codereview.chromium.org/2051004). I can make it\n> public again but it looks that it is implementation of GetProfile that none\n> should care about (especially taking into account that second parameter is\n> ignored in some cases).\n\nok, makes sense.","disapproval":false,"date":"2011-04-14 17:51:20.215111","approval":true},{"sender":"dpolukhin@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","aa@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"http://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_process_manager.cc\nFile chrome/browser/extensions/extension_process_manager.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_process_manager.cc#newcode175\nchrome/browser/extensions/extension_process_manager.cc:175: ExtensionService* extension_service =\nOn 2011/04/14 17:51:20, Aaron Boodman wrote:\n> It seems like when we create the first profile (the login profile), we set it up\n> to only load extensions that are Extension::COMPONENT. So it seems like the\n> filtering of what extensions to load has already been done by the time this code\n> runs, so there should be no point in checking it again. Do you ever hit the\n> return statement here?\n> \n> See:\n> http://codesearch.google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/chrome/browser/extensions/extension_service.cc&q=extension_service.cc&exact_package=chromium&l=1419\n\nI'll double check it but I observed that return is executed when extensions for user profile are loaded (i.e. extensions for second profile). I saw that all profiles get notified with EXTENSIONS_READY when second profile is loaded. I'll check it once again why it happens - it looks like it shouldn't happen.","disapproval":false,"date":"2011-04-14 18:18:15.146499","approval":false},{"sender":"dpolukhin@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","aa@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"http://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_management_api.cc\nFile chrome/browser/extensions/extension_management_api.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_management_api.cc#newcode266\nchrome/browser/extensions/extension_management_api.cc:266: if (registrar_.IsEmpty()) {\nOn 2011/04/14 17:51:20, Aaron Boodman wrote:\n> On 2011/04/11 13:01:03, Dmitry Polukhin wrote:\n> > On 2011/04/09 04:53:48, Aaron Boodman wrote:\n> > > unrelated change?\n> > \n> > It is required changes because Init will be called more than once - for login\n> > profile and for user's profile. All other event routers already have such\n> guards\n> > (see for example\n> >\n> http://google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/chrome/browser/extensions/extension_cookies_api.cc&q=ExtensionCookiesEventRouter::Init&exact_package=chromium&sa=N&cd=1&ct=rc&l=33).\n> > I don't like such protection but it is required because concept of\n> > ExtensionManagementEventRouter as a singleton is broken (singleton shouldn't\n> > require Init method that must be called only once before first use).\n> \n> Agree it is ugly, but acceptable. Can you put a comment here like:\n> \n> // Don't re-init (eg in the case of multiple profiles).\n\nDone.\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_process_manager.cc\nFile chrome/browser/extensions/extension_process_manager.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/11001/chrome/browser/extensions/extension_process_manager.cc#newcode175\nchrome/browser/extensions/extension_process_manager.cc:175: ExtensionService* extension_service =\nOn 2011/04/14 18:18:15, Dmitry Polukhin wrote:\n> On 2011/04/14 17:51:20, Aaron Boodman wrote:\n> > It seems like when we create the first profile (the login profile), we set it\n> up\n> > to only load extensions that are Extension::COMPONENT. So it seems like the\n> > filtering of what extensions to load has already been done by the time this\n> code\n> > runs, so there should be no point in checking it again. Do you ever hit the\n> > return statement here?\n> > \n> > See:\n> >\n> http://codesearch.google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/chrome/browser/extensions/extension_service.cc&q=extension_service.cc&exact_package=chromium&l=1419\n> \n> I'll double check it but I observed that return is executed when extensions for\n> user profile are loaded (i.e. extensions for second profile). I saw that all\n> profiles get notified with EXTENSIONS_READY when second profile is loaded. I'll\n> check it once again why it happens - it looks like it shouldn't happen.\n\nI found why we got notifications for all profiles: c-tor for ExtensionProcessManager subscribed for all sources - I fixed it.","disapproval":false,"date":"2011-04-15 11:45:18.643372","approval":false},{"sender":"dpolukhin@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","aa@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"Aaron, it looks like this CL works and all tests passes but I still don't fully understand from what sources ExtensionProcessManager should observer notifications. It looks like incognito profile and normal profile share the same ExtensionService but different ExtensionProcessManager. I haven't committed it yet because I would like to check with you that ExtensionProcessManager observes right profile.","disapproval":false,"date":"2011-04-15 13:35:50.382659","approval":false},{"sender":"aa@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"Oh, I did not think about that issue. It's complex for incognito. Adding mpcomplete. If you need to get this checked in in the meantime, please feel free to submit it as you had it in patchset 6.","disapproval":false,"date":"2011-04-15 15:20:00.289211","approval":false},{"sender":"dpolukhin@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","mpcomplete@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"On 2011/04/15 15:20:00, Aaron Boodman wrote:\n> Oh, I did not think about that issue. It's complex for incognito. Adding\n> mpcomplete. If you need to get this checked in in the meantime, please feel free\n> to submit it as you had it in patchset 6.\n\nI think patch last patch #8 is better than #6. ExtensionService exists for original profile only and it sends notifications so I think I suppose monitoring only original profiles is right approach in general. If you don't mind, I would commit patch #8. I see no issue with it in incognito mode.","disapproval":false,"date":"2011-04-15 16:36:55.116476","approval":false},{"sender":"aa@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"On Fri, Apr 15, 2011 at 9:36 AM,  <dpolukhin@chromium.org> wrote:\n> On 2011/04/15 15:20:00, Aaron Boodman wrote:\n>>\n>> Oh, I did not think about that issue. It's complex for incognito. Adding\n>> mpcomplete. If you need to get this checked in in the meantime, please\n>> feel\n>\n> free\n>>\n>> to submit it as you had it in patchset 6.\n>\n> I think patch last patch #8 is better than #6. ExtensionService exists for\n> original profile only and it sends notifications so I think I suppose\n> monitoring\n> only original profiles is right approach in general. If you don't mind, I\n> would\n> commit patch #8. I see no issue with it in incognito mode.\n\nOk with me. Hopefully Matt will chime in if he sees any issues.\n\n- a\n","disapproval":false,"date":"2011-04-15 18:15:16.770909","approval":false},{"sender":"mpcomplete@chromium.org","recipients":["dpolukhin@chromium.org","davemoore@chromium.org","aa@chromium.org","mpcomplete@chromium.org","chromium-reviews@chromium.org","nkostylev+cc@chromium.org","erikkay@chromium.org","brettw-cc@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org","davemoore+watch@chromium.org","stevenjb@chromium.org","pastarmovj@chromium.org"],"text":"http://codereview.chromium.org/6737028/diff/23001/chrome/browser/extensions/extension_process_manager.cc\nFile chrome/browser/extensions/extension_process_manager.cc (right):\n\nhttp://codereview.chromium.org/6737028/diff/23001/chrome/browser/extensions/extension_process_manager.cc#newcode92\nchrome/browser/extensions/extension_process_manager.cc:92: Profile* original_profile = profile->GetOriginalProfile();\nYes, this looks right to me.","disapproval":false,"date":"2011-04-15 19:17:23.615394","approval":false}],"owner_email":"dpolukhin@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"Dmitry Polukhin","subject":"Put back \"Enable component extensions for DefaultProfile used in login screen dialogs\"","created":"2011-03-31 14:06:22.514218","patchsets":[1,4001,6015,7001,9001,11001,17004,23001],"modified":"2011-05-09 13:47:04.491790","closed":true,"commit":false,"issue":6737028}