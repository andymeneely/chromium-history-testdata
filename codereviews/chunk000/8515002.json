{"description":"Take out and generalize user prefs overriding from IncognitoUserPrefStore.\r\n\r\nAdd support for \"local\" and \"global\" user preferences where\r\na \"local\" preference set in the overlay shadows the \"global\" preference.\r\n\r\nBUG=none\r\nTEST=OverlayUserPrefStoreTest*\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=109865","cc":["chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"reviewers":["mnissler@chromium.org"],"messages":[{"sender":"mnaganov@chromium.org","recipients":["mnaganov@chromium.org","mnissler@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"","disapproval":false,"date":"2011-11-10 11:21:21.177893","approval":false},{"sender":"mnissler@chromium.org","recipients":["mnaganov@chromium.org","mnissler@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"mostly good, some suggestions on making the test code more concise.\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store.h\nFile chrome/browser/prefs/overlay_user_pref_store.h (right):\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store.h#newcode60\nchrome/browser/prefs/overlay_user_pref_store.h:60: typedef base::hash_map<std::string, std::string> NamesMap;\nany reason not to use std::map (which we usually do if we don't have a good reason not to)?\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc\nFile chrome/browser/prefs/overlay_user_pref_store_unittest.cc (right):\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode25\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:25: class OverlayUserPrefStoreImpl : public OverlayUserPrefStore {\nYou might get away with just giving the test access to RegisterOverlayProperty(). If you prefer to keep this class, I suggest you rename it to TestOverlayUserPrefStore to make it clear that it's only useful for testing.\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode34\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:34: \nremove newline\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode41\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:41: public:\nthis can be protected\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode115\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:115: EXPECT_EQ(42, i);\nyou could rewrite these three-line blocks as one line like this:\n\nEXPECT_TRUE(FundamentalValue(42).Equals(value));\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode156\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:156: ASSERT_TRUE(modify->GetType() == Value::TYPE_DICTIONARY);\ntype checks are better written using Value::IsType().\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode194\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:194: ASSERT_TRUE(value);\nFundamentalValue.Equals() shortcut also works here.\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode257\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:257: ASSERT_TRUE(value);\nFundamentalValue::Equals shortcut possible here (and below)","disapproval":false,"date":"2011-11-10 12:45:17.709210","approval":false},{"sender":"mnaganov@chromium.org","recipients":["mnaganov@chromium.org","mnissler@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"-40 LOC thanks to your comments!\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store.h\nFile chrome/browser/prefs/overlay_user_pref_store.h (right):\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store.h#newcode60\nchrome/browser/prefs/overlay_user_pref_store.h:60: typedef base::hash_map<std::string, std::string> NamesMap;\nOn 2011/11/10 12:45:17, Mattias Nissler wrote:\n> any reason not to use std::map (which we usually do if we don't have a good\n> reason not to)?\n\nNo, I simply has misguided myself. Fixed.\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc\nFile chrome/browser/prefs/overlay_user_pref_store_unittest.cc (right):\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode25\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:25: class OverlayUserPrefStoreImpl : public OverlayUserPrefStore {\nOn 2011/11/10 12:45:17, Mattias Nissler wrote:\n> You might get away with just giving the test access to\n> RegisterOverlayProperty(). If you prefer to keep this class, I suggest you\n> rename it to TestOverlayUserPrefStore to make it clear that it's only useful for\n> testing.\n\nA good idea! Made test class a friend.\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode34\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:34: \nOn 2011/11/10 12:45:17, Mattias Nissler wrote:\n> remove newline\n\nRemoved class.\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode41\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:41: public:\nOn 2011/11/10 12:45:17, Mattias Nissler wrote:\n> this can be protected\n\nDone.\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode115\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:115: EXPECT_EQ(42, i);\nOn 2011/11/10 12:45:17, Mattias Nissler wrote:\n> you could rewrite these three-line blocks as one line like this:\n> \n> EXPECT_TRUE(FundamentalValue(42).Equals(value));\n\nNeat! That significantly reduces the number of lines :)\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode156\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:156: ASSERT_TRUE(modify->GetType() == Value::TYPE_DICTIONARY);\nOn 2011/11/10 12:45:17, Mattias Nissler wrote:\n> type checks are better written using Value::IsType().\n\nDone.\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode194\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:194: ASSERT_TRUE(value);\nOn 2011/11/10 12:45:17, Mattias Nissler wrote:\n> FundamentalValue.Equals() shortcut also works here.\n\nDone.\n\nhttp://codereview.chromium.org/8515002/diff/1/chrome/browser/prefs/overlay_user_pref_store_unittest.cc#newcode257\nchrome/browser/prefs/overlay_user_pref_store_unittest.cc:257: ASSERT_TRUE(value);\nOn 2011/11/10 12:45:17, Mattias Nissler wrote:\n> FundamentalValue::Equals shortcut possible here (and below)\n\nDone.","disapproval":false,"date":"2011-11-10 14:49:40.807837","approval":false},{"sender":"mnaganov@chromium.org","recipients":["mnaganov@chromium.org","mnissler@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"Sorry, it looks like my change wasn't rebased correctly. Will reupload in a minute","disapproval":false,"date":"2011-11-10 14:51:46.533179","approval":false},{"sender":"mnaganov@chromium.org","recipients":["mnaganov@chromium.org","mnissler@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"On 2011/11/10 14:51:46, Mikhail Naganov (Chromium) wrote:\n> Sorry, it looks like my change wasn't rebased correctly. Will reupload in a\n> minute\n\nMattias, can you take another look, please?","disapproval":false,"date":"2011-11-14 10:15:23.155808","approval":false},{"sender":"mnissler@chromium.org","recipients":["mnaganov@chromium.org","mnissler@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"LGTM with a nit.\n\nhttp://codereview.chromium.org/8515002/diff/8009/chrome/browser/prefs/overlay_user_pref_store.h\nFile chrome/browser/prefs/overlay_user_pref_store.h (right):\n\nhttp://codereview.chromium.org/8515002/diff/8009/chrome/browser/prefs/overlay_user_pref_store.h#newcode12\nchrome/browser/prefs/overlay_user_pref_store.h:12: #include \"base/hash_tables.h\"\nremove this and instead #include <map>","disapproval":false,"date":"2011-11-14 12:04:55.487177","approval":true},{"sender":"mnaganov@chromium.org","recipients":["mnaganov@chromium.org","mnissler@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org"],"text":"Thank you very much!\n\nhttp://codereview.chromium.org/8515002/diff/8009/chrome/browser/prefs/overlay_user_pref_store.h\nFile chrome/browser/prefs/overlay_user_pref_store.h (right):\n\nhttp://codereview.chromium.org/8515002/diff/8009/chrome/browser/prefs/overlay_user_pref_store.h#newcode12\nchrome/browser/prefs/overlay_user_pref_store.h:12: #include \"base/hash_tables.h\"\nOn 2011/11/14 12:04:55, Mattias Nissler wrote:\n> remove this and instead #include <map>\n\nDone.","disapproval":false,"date":"2011-11-14 12:07:31.368443","approval":false}],"owner_email":"mnaganov@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"Mikhail Naganov (Chromium)","subject":"Take out and generalize user prefs overriding from IncognitoUserPrefStore.","created":"2011-11-10 11:16:42.172166","patchsets":[1,7001,8009],"modified":"2011-11-14 12:09:31.514989","closed":true,"commit":false,"issue":8515002}