{"description":"Telemetry: integrates memory_measurement with TCMalloc dumps\n\nAt the end of each memory_measurement test, force TCMalloc to dump the memory maps, and collect all the files.\n\n\nBUG=231800\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=201953","cc":["chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"reviewers":["dmikurube@chromium.org","tonyg@chromium.org","bulach@chromium.org"],"messages":[{"sender":"bulach@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org","dmikurube@chromium.org"],"text":"dai: this would allow telemetry to drive tests and fetch dumps that can then be fed to dmp.\n\ntonyg: this would duplicate the logs per pid :) and will be fixed as part of https://codereview.chromium.org/14978006/.. both patches can progress in parallel..","disapproval":false,"date":"2013-05-14 09:34:40.072420","approval":false},{"sender":"dmikurube@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org","dmikurube@chromium.org"],"text":"Thanks for working on it!  Some comments:\n\nhttps://codereview.chromium.org/15093008/diff/2001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py\nFile tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/2001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py#newcode13\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py:13: 'HEAP_PROFILE_TIME_INTERVAL': ('heapprof.timeinterval', 5),\ns/timeinterval/time_interval/\n\nSince it actually takes 1-2 seconds to dump, dumping every 5 seconds might be too frequent.  Also, I have not well tested a case of 100 or more dumps in one execution (I think it works... but just worried).  How long is the tests expected to run?\n\nhttps://codereview.chromium.org/15093008/diff/2001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py#newcode28\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py:28: properties['HEAPPROFILE'] = ('heapprof', self._DEFAULT_DEVICE_DIR + 'dmp')\nI actually prefer an abbr 'dmprof' for code and filenames. :)  ('dmp' looks too ambiguous... like just an abbr of \"dump\" or else.)","disapproval":false,"date":"2013-05-14 10:47:55.935290","approval":false},{"sender":"bulach@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org","dmikurube@chromium.org"],"text":"thanks dai! comments addressed, another look please?\n\nhttps://codereview.chromium.org/15093008/diff/2001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py\nFile tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/2001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py#newcode13\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py:13: 'HEAP_PROFILE_TIME_INTERVAL': ('heapprof.timeinterval', 5),\nOn 2013/05/14 10:47:56, Dai Mikurube wrote:\n> s/timeinterval/time_interval/\n> \n> Since it actually takes 1-2 seconds to dump, dumping every 5 seconds might be\n> too frequent.  Also, I have not well tested a case of 100 or more dumps in one\n> execution (I think it works... but just worried).  How long is the tests\n> expected to run?\n\nchanged to time_interval.\nI changed to 20 by default, happy to change to whatever you think it's appropriate :)\nat this level, we should make no assumptions for the tests themselves, that is, there will be more tests written over time, and there's no control over how long do they run..\n\nhttps://codereview.chromium.org/15093008/diff/2001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py#newcode28\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py:28: properties['HEAPPROFILE'] = ('heapprof', self._DEFAULT_DEVICE_DIR + 'dmp')\nOn 2013/05/14 10:47:56, Dai Mikurube wrote:\n> I actually prefer an abbr 'dmprof' for code and filenames. :)  ('dmp' looks too\n> ambiguous... like just an abbr of \"dump\" or else.)\n\nDone.","disapproval":false,"date":"2013-05-14 13:10:54.211920","approval":false},{"sender":"dmikurube@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org","dmikurube@chromium.org"],"text":"the latest version not uploaded yet?  ;)","disapproval":false,"date":"2013-05-14 14:00:02.052640","approval":false},{"sender":"dmikurube@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"On 2013/05/14 14:00:02, Dai Mikurube wrote:\n> the latest version not uploaded yet?  ;)\n\nalso, I found that profiler_finder.py is updated, and could not rebase straightforward.","disapproval":false,"date":"2013-05-14 14:01:12.065280","approval":false},{"sender":"bulach@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"uploaded now, sorry for the delay :)","disapproval":false,"date":"2013-05-14 14:19:21.651920","approval":false},{"sender":"dmikurube@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"Sorry for later additional comments.\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/perf/perf_tools/memory_measurement.py\nFile tools/perf/perf_tools/memory_measurement.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/perf/perf_tools/memory_measurement.py#newcode46\ntools/perf/perf_tools/memory_measurement.py:46: def MeasurePage(self, page, tab, results):\nJust a question.  When is is called?\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/perf/perf_tools/memory_measurement.py#newcode51\ntools/perf/perf_tools/memory_measurement.py:51: chrome.memoryBenchmarking.isHeapProfilerRunning()) {\nI'm not confident whether we should always dump when chrome.memoryBenchmarking.isHeapProfilerRunning() is true, or not.  How about when --profiler-tool=tcmalloc?\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/profiler_finder.py\nFile tools/telemetry/telemetry/core/platform/profiler/profiler_finder.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/profiler_finder.py#newcode14\ntools/telemetry/telemetry/core/platform/profiler/profiler_finder.py:14: tcmalloc_profiler.TCMallocProfilerFactory,\nTCMalloc has another profiler than heap profiler: CPU profiler.  (Yes, it's a bit confusing...  TCMalloc is actually OSS \"gperftools\" including malloc and a couple of profilers.  https://code.google.com/p/gperftools/)\n\nWe may use the CPU profiler in future, so we may want another name for it.  Maybe \"TCMalloc*Heap*ProfilerFactory\" or like that.\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py\nFile tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py#newcode75\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py:75: env_vars['HEAPPROFILE'] = ('heapprof', self._DEFAULT_DIR + 'dmp')\nalso 'dmprof'\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py#newcode100\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py:100: class TCMallocProfilerFactory(profiler.Profiler):\nMaybe it's a delegate or a proxy rather than a factory?","disapproval":false,"date":"2013-05-14 15:07:07.146680","approval":false},{"sender":"bulach@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"thanks dai! comments addressed, another look please?\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/perf/perf_tools/memory_measurement.py\nFile tools/perf/perf_tools/memory_measurement.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/perf/perf_tools/memory_measurement.py#newcode46\ntools/perf/perf_tools/memory_measurement.py:46: def MeasurePage(self, page, tab, results):\nOn 2013/05/14 15:07:07, Dai Mikurube wrote:\n> Just a question.  When is is called?\n\nafaict, this is called after all actions for a given page has been executed..\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/perf/perf_tools/memory_measurement.py#newcode51\ntools/perf/perf_tools/memory_measurement.py:51: chrome.memoryBenchmarking.isHeapProfilerRunning()) {\nOn 2013/05/14 15:07:07, Dai Mikurube wrote:\n> I'm not confident whether we should always dump when\n> chrome.memoryBenchmarking.isHeapProfilerRunning() is true, or not.  How about\n> when --profiler-tool=tcmalloc?\n\ngood idea! done.\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/profiler_finder.py\nFile tools/telemetry/telemetry/core/platform/profiler/profiler_finder.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/profiler_finder.py#newcode14\ntools/telemetry/telemetry/core/platform/profiler/profiler_finder.py:14: tcmalloc_profiler.TCMallocProfilerFactory,\nOn 2013/05/14 15:07:07, Dai Mikurube wrote:\n> TCMalloc has another profiler than heap profiler: CPU profiler.  (Yes, it's a\n> bit confusing...  TCMalloc is actually OSS \"gperftools\" including malloc and a\n> couple of profilers.  https://code.google.com/p/gperftools/)\n> \n> We may use the CPU profiler in future, so we may want another name for it. \n> Maybe \"TCMalloc*Heap*ProfilerFactory\" or like that.\n\nahn, I didn't know that. :) thanks! added the \"Heap\".\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py\nFile tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py#newcode75\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py:75: env_vars['HEAPPROFILE'] = ('heapprof', self._DEFAULT_DIR + 'dmp')\nOn 2013/05/14 15:07:07, Dai Mikurube wrote:\n> also 'dmprof'\n\nDone.\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py#newcode100\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py:100: class TCMallocProfilerFactory(profiler.Profiler):\nOn 2013/05/14 15:07:07, Dai Mikurube wrote:\n> Maybe it's a delegate or a proxy rather than a factory?\n\nhmm... it's a factory in the sense that it creates the specific profiler, but yeah, since it's not really returning those objects, just made this TCMallocHeapProfiler, it's simpler..","disapproval":false,"date":"2013-05-14 15:34:17.751510","approval":false},{"sender":"tonyg@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"Great patch! Some suggestions inline\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py\nFile tools/perf/perf_tools/memory_measurement.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py#newcode60\ntools/perf/perf_tools/memory_measurement.py:60: print 'TCMalloc heap dumps available at ', dumps\nI don't like this code in the MemoryMeasurement because it means tcmalloc-heap doesn't work with other measurements. Is there a way we can push this into the Profiler?\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py\nFile tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode18\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:18: class _TCMallocHeapProfilerAndroid(profiler.Profiler):\nCan these just implement object instead of Profiler and drop the is_supported and name methods? It seems like TCMallocHeapProfiler has the Profiler interface covered.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode35\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:35: adb = adb_commands.AdbCommands(android_device)\nI didn't double check, but can't we get an existing adb_commands object from the platform_backend or something?\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode41\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:41: print 'Setting device property ', values[0], values[1]\nlogging.info?\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode45\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:45: raise Exception('New device properties were set, run again.')\nWhy do we have to run again? Can we do Browser.close() or something instead?\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode59\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:59: print 'TCMalloc dumps available in the device ', self._DEFAULT_DEVICE_DIR\nIs this print necessary since it will be pulled to the host?\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode60\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:60: adb = adb_commands.AdbCommands(self._browser_backend.options.android_device)\nAgain, let's try to reuse adb_commands if possible.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode74\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:74: env_vars = dict(_ENV_VARIABLES)\nWhat does the dict() wrapper do? Isn't it already a dict?\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode85\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:85: if not os.path.exists(os.environ['HEAPPROFILE']):\nShould we check isdir() as well?\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode118\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:118: if (sys.platform != 'linux2'):\ndrop the parens. Also, I think we normally do startswith('linux') instead of == 'linux2'.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode120\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:120: if options.browser_type.startswith('android'):\nDo we need to throw in an:\n\nif options.browser_type.startswith('cros'):\n  return False\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode122\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:122: return _TCMallocHeapProfilerLinux.is_supported(options)\nThese is_supported calls are no-ops. I'd just return True.","disapproval":false,"date":"2013-05-14 16:52:44.739050","approval":false},{"sender":"dmikurube@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"Basically lgtm from my side just with one comment about chrome.memoryBenchmarking.isHeapProfilerRunning.  I defer the final approval to tonyg.  Thanks!\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/perf/perf_tools/memory_measurement.py\nFile tools/perf/perf_tools/memory_measurement.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/perf/perf_tools/memory_measurement.py#newcode46\ntools/perf/perf_tools/memory_measurement.py:46: def MeasurePage(self, page, tab, results):\nOn 2013/05/14 15:34:17, bulach wrote:\n> On 2013/05/14 15:07:07, Dai Mikurube wrote:\n> > Just a question.  When is is called?\n> \n> afaict, this is called after all actions for a given page has been executed..\n\nGot it.  Thanks!\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py\nFile tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/10001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py#newcode100\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_profiler.py:100: class TCMallocProfilerFactory(profiler.Profiler):\nOn 2013/05/14 15:34:17, bulach wrote:\n> On 2013/05/14 15:07:07, Dai Mikurube wrote:\n> > Maybe it's a delegate or a proxy rather than a factory?\n> \n> hmm... it's a factory in the sense that it creates the specific profiler, but\n> yeah, since it's not really returning those objects, just made this\n> TCMallocHeapProfiler, it's simpler..\n\nLooks good!\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py\nFile tools/perf/perf_tools/memory_measurement.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py#newcode52\ntools/perf/perf_tools/memory_measurement.py:52: if self._is_running_tcmalloc_heap_profiler:\nAh, I thought that this condition can coexist with chrome && ... && chrome.memoryBenchmarking.isHeapProfilerRunning().","disapproval":false,"date":"2013-05-14 17:02:10.549260","approval":true},{"sender":"bulach@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"thanks tony! comments addressed and some clarifications below..\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py\nFile tools/perf/perf_tools/memory_measurement.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py#newcode60\ntools/perf/perf_tools/memory_measurement.py:60: print 'TCMalloc heap dumps available at ', dumps\nOn 2013/05/14 16:52:44, tonyg wrote:\n> I don't like this code in the MemoryMeasurement because it means tcmalloc-heap\n> doesn't work with other measurements. Is there a way we can push this into the\n> Profiler?\n\n\"it's complicated\" :)\n- Profiler knows nothing about tab, or browser, and that's probably for good.\n\n- tcmalloc will dump the heap at regular intervals, for any measurement, by using --profiler=tcmalloc-heap.. this is just a \"minor\" optimization to ensure that the _last_ dump is actually made, which seems to make sense in \"memory_measurment.py\", no?\n\n- at most, other measurements would loose up to the last \"interval\" dump.. \n\nso whilst I agree it'd be nice to push this to profiler, would you be ok doing as a separate patch?\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py\nFile tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode18\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:18: class _TCMallocHeapProfilerAndroid(profiler.Profiler):\nOn 2013/05/14 16:52:44, tonyg wrote:\n> Can these just implement object instead of Profiler and drop the is_supported\n> and name methods? It seems like TCMallocHeapProfiler has the Profiler interface\n> covered.\n\noh, much nicer! done.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode35\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:35: adb = adb_commands.AdbCommands(android_device)\nOn 2013/05/14 16:52:44, tonyg wrote:\n> I didn't double check, but can't we get an existing adb_commands object from the\n> platform_backend or something?\n\nDone.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode41\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:41: print 'Setting device property ', values[0], values[1]\nOn 2013/05/14 16:52:44, tonyg wrote:\n> logging.info?\n\nDone.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode45\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:45: raise Exception('New device properties were set, run again.')\nOn 2013/05/14 16:52:44, tonyg wrote:\n> Why do we have to run again? Can we do Browser.close() or something instead?\n\nI think at this stage where the profiler has been created is already too late to mess up with the browser...\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode59\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:59: print 'TCMalloc dumps available in the device ', self._DEFAULT_DEVICE_DIR\nOn 2013/05/14 16:52:44, tonyg wrote:\n> Is this print necessary since it will be pulled to the host?\n\nDone.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode60\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:60: adb = adb_commands.AdbCommands(self._browser_backend.options.android_device)\nOn 2013/05/14 16:52:44, tonyg wrote:\n> Again, let's try to reuse adb_commands if possible.\n\nDone.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode74\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:74: env_vars = dict(_ENV_VARIABLES)\nOn 2013/05/14 16:52:44, tonyg wrote:\n> What does the dict() wrapper do? Isn't it already a dict?\n\nat some point I did that in the classmethod and didn't want to mess up with the \"singleton\", so dict() makes a copy of it..\nno longer necessary, removed here and above.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode85\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:85: if not os.path.exists(os.environ['HEAPPROFILE']):\nOn 2013/05/14 16:52:44, tonyg wrote:\n> Should we check isdir() as well?\n\nadding an assertion below.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode118\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:118: if (sys.platform != 'linux2'):\nOn 2013/05/14 16:52:44, tonyg wrote:\n> drop the parens. Also, I think we normally do startswith('linux') instead of ==\n> 'linux2'.\n\nDone.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode118\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:118: if (sys.platform != 'linux2'):\nOn 2013/05/14 16:52:44, tonyg wrote:\n> drop the parens. Also, I think we normally do startswith('linux') instead of ==\n> 'linux2'.\n\nDone.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode120\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:120: if options.browser_type.startswith('android'):\nOn 2013/05/14 16:52:44, tonyg wrote:\n> Do we need to throw in an:\n> \n> if options.browser_type.startswith('cros'):\n>   return False\n\nDone.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode122\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:122: return _TCMallocHeapProfilerLinux.is_supported(options)\nOn 2013/05/14 16:52:44, tonyg wrote:\n> These is_supported calls are no-ops. I'd just return True.\n\nDone.","disapproval":false,"date":"2013-05-14 17:54:47.132820","approval":false},{"sender":"tonyg@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"lgtm\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py\nFile tools/perf/perf_tools/memory_measurement.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py#newcode53\ntools/perf/perf_tools/memory_measurement.py:53: dumps = eval(tab.EvaluateJavaScript(\"\"\"\nPlease use json instead of eval\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py#newcode60\ntools/perf/perf_tools/memory_measurement.py:60: print 'TCMalloc heap dumps available at ', dumps\nOn 2013/05/14 17:54:47, bulach wrote:\n> On 2013/05/14 16:52:44, tonyg wrote:\n> > I don't like this code in the MemoryMeasurement because it means tcmalloc-heap\n> > doesn't work with other measurements. Is there a way we can push this into the\n> > Profiler?\n> \n> \"it's complicated\" :)\n> - Profiler knows nothing about tab, or browser, and that's probably for good.\n> \n> - tcmalloc will dump the heap at regular intervals, for any measurement, by\n> using --profiler=tcmalloc-heap.. this is just a \"minor\" optimization to ensure\n> that the _last_ dump is actually made, which seems to make sense in\n> \"memory_measurment.py\", no?\n> \n> - at most, other measurements would loose up to the last \"interval\" dump.. \n> \n> so whilst I agree it'd be nice to push this to profiler, would you be ok doing\n> as a separate patch?\n> \n> \n\nHow long is the interval? If it is sufficiently short, should we just remove this code from memory_measurement? In any case, it seems like we don't need the print line because the profiler is guaranteed to print that out in collect profiler. Also, if you decide to keep this, please add a comment explaining that this is a minor optimization to ensure the last dump is made.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py\nFile tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode45\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:45: raise Exception('New device properties were set, run again.')\nOn 2013/05/14 17:54:47, bulach wrote:\n> On 2013/05/14 16:52:44, tonyg wrote:\n> > Why do we have to run again? Can we do Browser.close() or something instead?\n> \n> I think at this stage where the profiler has been created is already too late to\n> mess up with the browser...\n\nYou are right, too bad.\n\nhttps://codereview.chromium.org/15093008/diff/24001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py\nFile tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/24001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode103\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:103: return True\nYou can remove this branch now.","disapproval":false,"date":"2013-05-14 18:54:13.547510","approval":true},{"sender":"bulach@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"thanks all!\n\ndai: as we chatted, this is now saving a \"browser.pid\" file to the dump directory, so then we can distinguish the various dump files.\n\n\ntony: all comments addressed. it turns out that the file names are not actually needed, so I removed the \"eval\", \"print\", etc.. I commented why that last dump is necessary, ptal..\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py\nFile tools/perf/perf_tools/memory_measurement.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py#newcode53\ntools/perf/perf_tools/memory_measurement.py:53: dumps = eval(tab.EvaluateJavaScript(\"\"\"\nOn 2013/05/14 18:54:13, tonyg wrote:\n> Please use json instead of eval\n\nDone.\n\nhttps://codereview.chromium.org/15093008/diff/18001/tools/perf/perf_tools/memory_measurement.py#newcode60\ntools/perf/perf_tools/memory_measurement.py:60: print 'TCMalloc heap dumps available at ', dumps\nOn 2013/05/14 18:54:13, tonyg wrote:\n> On 2013/05/14 17:54:47, bulach wrote:\n> > On 2013/05/14 16:52:44, tonyg wrote:\n> > > I don't like this code in the MemoryMeasurement because it means\n> tcmalloc-heap\n> > > doesn't work with other measurements. Is there a way we can push this into\n> the\n> > > Profiler?\n> > \n> > \"it's complicated\" :)\n> > - Profiler knows nothing about tab, or browser, and that's probably for good.\n> > \n> > - tcmalloc will dump the heap at regular intervals, for any measurement, by\n> > using --profiler=tcmalloc-heap.. this is just a \"minor\" optimization to ensure\n> > that the _last_ dump is actually made, which seems to make sense in\n> > \"memory_measurment.py\", no?\n> > \n> > - at most, other measurements would loose up to the last \"interval\" dump.. \n> > \n> > so whilst I agree it'd be nice to push this to profiler, would you be ok doing\n> > as a separate patch?\n> > \n> > \n> \n> How long is the interval? If it is sufficiently short, should we just remove\n> this code from memory_measurement? In any case, it seems like we don't need the\n> print line because the profiler is guaranteed to print that out in collect\n> profiler. Also, if you decide to keep this, please add a comment explaining that\n> this is a minor optimization to ensure the last dump is made.\n\nthe interval is relatively large right now. it takes a couple of secs to dump the files, so in reality it has to be >=5secs..\nI added a comment explaining this.\nalso, the file names seem indeed irrelevant, so I removed the print, eval, etc..\n\nsee more discussion on the underlying layer here:\nhttps://codereview.chromium.org/15082004/\n\nhttps://codereview.chromium.org/15093008/diff/24001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py\nFile tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/24001/tools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py#newcode103\ntools/telemetry/telemetry/core/platform/profiler/tcmalloc_heap_profiler.py:103: return True\nOn 2013/05/14 18:54:13, tonyg wrote:\n> You can remove this branch now.\n\nDone.","disapproval":false,"date":"2013-05-15 10:22:55.951290","approval":false},{"sender":"dmikurube@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"Still lgtm. :)","disapproval":false,"date":"2013-05-15 12:08:16.917390","approval":true},{"sender":"tonyg@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"lgtm\n\nhttps://codereview.chromium.org/15093008/diff/28002/tools/perf/perf_tools/memory_measurement.py\nFile tools/perf/perf_tools/memory_measurement.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/28002/tools/perf/perf_tools/memory_measurement.py#newcode52\ntools/perf/perf_tools/memory_measurement.py:52: if self._is_running_tcmalloc_heap_profiler:\nI think you could remove the member variable and check tab.browser.options.profiler_tool inline here.","disapproval":false,"date":"2013-05-15 15:46:17.774080","approval":true},{"sender":"bulach@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"thanks tony! addressed your comment in a slightly different way, let me know wdyt and I'll follow up if needed.\n\nhttps://codereview.chromium.org/15093008/diff/28002/tools/perf/perf_tools/memory_measurement.py\nFile tools/perf/perf_tools/memory_measurement.py (right):\n\nhttps://codereview.chromium.org/15093008/diff/28002/tools/perf/perf_tools/memory_measurement.py#newcode52\ntools/perf/perf_tools/memory_measurement.py:52: if self._is_running_tcmalloc_heap_profiler:\nOn 2013/05/15 15:46:17, tonyg wrote:\n> I think you could remove the member variable and check\n> tab.browser.options.profiler_tool inline here.\n\nthat's actually a good point.\nbrowser doesn't expose options though, so rather than doing that, I created a \"browser.is_profiler_active(self, name)\" , which seems a nicer API to have...","disapproval":false,"date":"2013-05-16 09:01:29.963820","approval":false},{"sender":"dmikurube@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"I tried running Telemetry tests with this.  What I observed were:\n\nbrowser.pid (it says \"30601\")\nx.30545.0002.buckets\nx.30545.0002.heap\n...\nx.30545.0007.buckets\nx.30545.0007.heap\nx.30797.0001.buckets\nx.30797.0001.heap\n...\nx.30797.0008.buckets\nx.30797.0008.heap\nx.30797.maps\n\nIt looks like\n1) x.30545.0001.* and x.30545.maps are missing.\n2) No dumps by 30601 which browser.pid says.\n\n(1) might be because of clearing /data/local/tmp/heap files after ContentShell starts.  (I haven't verified it yet.)\n\nFor (2), I'm not sure...","disapproval":false,"date":"2013-05-16 11:02:51.151570","approval":false},{"sender":"bulach@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"On 2013/05/16 11:02:51, Dai Mikurube wrote:\n> I tried running Telemetry tests with this.  What I observed were:\n> \n> browser.pid (it says \"30601\")\n> x.30545.0002.buckets\n> x.30545.0002.heap\n> ...\n> x.30545.0007.buckets\n> x.30545.0007.heap\n> x.30797.0001.buckets\n> x.30797.0001.heap\n> ...\n> x.30797.0008.buckets\n> x.30797.0008.heap\n> x.30797.maps\n> \n> It looks like\n> 1) x.30545.0001.* and x.30545.maps are missing.\n> 2) No dumps by 30601 which browser.pid says.\n> \n> (1) might be because of clearing /data/local/tmp/heap files after ContentShell\n> starts.  (I haven't verified it yet.)\n> \n> For (2), I'm not sure...\n\nstrange... I have just collected a bunch of files (I'll send you from my home directory), and they all look correct.. :-/","disapproval":false,"date":"2013-05-16 11:41:27.987670","approval":false},{"sender":"bulach@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"actually, sorry, I see what you're saying... :)\nthe directory gets wiped out *after* the content shell starts.. :-/ let me try to fix this.","disapproval":false,"date":"2013-05-16 11:45:49.867440","approval":false},{"sender":"bulach@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"dai: I have addressed the comments, mind taking another look please?","disapproval":false,"date":"2013-05-22 15:54:18.777370","approval":false},{"sender":"dmikurube@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"lgtm (while I haven't executed it yet)","disapproval":false,"date":"2013-05-23 08:49:22.686840","approval":true},{"sender":"bulach@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"thanks dai! I'll put this in the CQ, we can always refine later (this is not used by any bots, so won't break anything)","disapproval":false,"date":"2013-05-23 08:56:07.879820","approval":false},{"sender":"commit-bot@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","bulach@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/bulach@chromium.org/15093008/42001","disapproval":false,"date":"2013-05-23 09:08:30.285970","approval":false},{"sender":"commit-bot@chromium.org","recipients":["bulach@chromium.org","dmikurube@chromium.org","tonyg@chromium.org","bulach@chromium.org","chromium-reviews@chromium.org","chrome-speed-team+watch@google.com","telemetry+watch@chromium.org"],"text":"Change committed as 201953","disapproval":false,"date":"2013-05-24 01:18:10.258470","approval":false}],"owner_email":"bulach@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"bulach","subject":"Telemetry: integrates memory_measurement with TCMalloc dumps","created":"2013-05-13 20:15:58.556530","patchsets":[2001,10001,18001,24001,28002,36001,42001],"modified":"2013-05-24 01:18:10.649030","closed":true,"commit":false,"issue":15093008}