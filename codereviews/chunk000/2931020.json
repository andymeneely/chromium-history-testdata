{"description":"AutoFill credit cards should be obfuscated on Linux\r\n\r\nAutoFill credit card information now gets stored in obfuscated form on disc.\r\n\r\nBUG=42038, 49115\r\nTEST=EncryptorTest.CypherTextDiffers, EncryptorTest.DecryptError\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=52596","cc":["chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"reviewers":["jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org"],"messages":[{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"Decision for Linux M6 is to obfuscate.  Protected key-store come in M7.","disapproval":false,"date":"2010-07-14 22:09:42.789315","approval":false},{"sender":"evan@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"+mdm","disapproval":false,"date":"2010-07-14 22:13:23.038515","approval":false},{"sender":"evan@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"+agl, crypto master\n\nhttp://codereview.chromium.org/2931020/diff/1/2\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode17\nchrome/browser/password_manager/encryptor_linux.cc:17: const char kSalt[] = \"saltysalt\";\nI believe the correct way to use salt is on a per-pw basis.","disapproval":false,"date":"2010-07-14 22:15:20.437044","approval":false},{"sender":"jhawkins@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"http://codereview.chromium.org/2931020/diff/1/2\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode11\nchrome/browser/password_manager/encryptor_linux.cc:11: #include \"base/scoped_ptr.h\"\nscoped_ptr should go before utf_str...\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode17\nchrome/browser/password_manager/encryptor_linux.cc:17: const char kSalt[] = \"saltysalt\";\nComment this section.\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode26\nchrome/browser/password_manager/encryptor_linux.cc:26: // http://code.google.com/p/chromium/issues/detail?id=25404\nnit: I prefer the short http://crbug.com/25404\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode61\nchrome/browser/password_manager/encryptor_linux.cc:61: // This doesn't actually encrypt, we need to work on the Encryptor API.\nI'd remove this first line of the comment, since it's technically not true anymore.\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode89\nchrome/browser/password_manager/encryptor_linux.cc:89: // This doesn't actually decrypt, we need to work on the Encryptor API.\nSame here.\n\nhttp://codereview.chromium.org/2931020/diff/1/3\nFile chrome/browser/password_manager/encryptor_unittest.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/1/3#newcode20\nchrome/browser/password_manager/encryptor_unittest.cc:20: //#if defined(OS_MACOSX)\nIntentionally commented out?","disapproval":false,"date":"2010-07-14 22:16:21.502768","approval":false},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"On 2010/07/14 22:15:20, Evan Martin wrote:\n> +agl, crypto master\n> \n> http://codereview.chromium.org/2931020/diff/1/2\n> File chrome/browser/password_manager/encryptor_linux.cc (right):\n> \n> http://codereview.chromium.org/2931020/diff/1/2#newcode17\n> chrome/browser/password_manager/encryptor_linux.cc:17: const char kSalt[] =\n> \"saltysalt\";\n> I believe the correct way to use salt is on a per-pw basis.\n\nYes, but in this case we have single hard-coded password.","disapproval":false,"date":"2010-07-14 22:17:23.874915","approval":false},{"sender":"mdm@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"http://codereview.chromium.org/2931020/diff/1/2\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode17\nchrome/browser/password_manager/encryptor_linux.cc:17: const char kSalt[] = \"saltysalt\";\nHow about seasalt, or koshersalt? :)\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode26\nchrome/browser/password_manager/encryptor_linux.cc:26: // http://code.google.com/p/chromium/issues/detail?id=25404\nI was planning on closing this bug soon, once the user-saved passwords are indeed stored in system-level stores by default. It seems like maybe this is a slightly different bug; could we open a new one for this instead?\n\nhttp://codereview.chromium.org/2931020/diff/1/3\nFile chrome/browser/password_manager/encryptor_unittest.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/1/3#newcode124\nchrome/browser/password_manager/encryptor_unittest.cc:124: EXPECT_EQ(plaintext, \"hel\");\nYou mean result here, right?","disapproval":false,"date":"2010-07-14 22:29:09.707288","approval":false},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"http://codereview.chromium.org/2931020/diff/1/2\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode11\nchrome/browser/password_manager/encryptor_linux.cc:11: #include \"base/scoped_ptr.h\"\nOn 2010/07/14 22:16:21, James Hawkins wrote:\n> scoped_ptr should go before utf_str...\n\nDone.\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode17\nchrome/browser/password_manager/encryptor_linux.cc:17: const char kSalt[] = \"saltysalt\";\nOn 2010/07/14 22:16:21, James Hawkins wrote:\n> Comment this section.\n\nDone.\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode26\nchrome/browser/password_manager/encryptor_linux.cc:26: // http://code.google.com/p/chromium/issues/detail?id=25404\nOn 2010/07/14 22:16:21, James Hawkins wrote:\n> nit: I prefer the short http://crbug.com/25404\n\nDone.\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode61\nchrome/browser/password_manager/encryptor_linux.cc:61: // This doesn't actually encrypt, we need to work on the Encryptor API.\nOn 2010/07/14 22:16:21, James Hawkins wrote:\n> I'd remove this first line of the comment, since it's technically not true\n> anymore.\n\nDone.\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode89\nchrome/browser/password_manager/encryptor_linux.cc:89: // This doesn't actually decrypt, we need to work on the Encryptor API.\nOn 2010/07/14 22:16:21, James Hawkins wrote:\n> Same here.\n\nDone.\n\nhttp://codereview.chromium.org/2931020/diff/1/3\nFile chrome/browser/password_manager/encryptor_unittest.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/1/3#newcode20\nchrome/browser/password_manager/encryptor_unittest.cc:20: //#if defined(OS_MACOSX)\nOn 2010/07/14 22:16:21, James Hawkins wrote:\n> Intentionally commented out?\n\nYes, this is temporary.  Will merge with in-flight changes on Mac.","disapproval":false,"date":"2010-07-14 22:30:20.373488","approval":false},{"sender":"agl@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"http://codereview.chromium.org/2931020/diff/1/2\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode17\nchrome/browser/password_manager/encryptor_linux.cc:17: const char kSalt[] = \"saltysalt\";\nOn 2010/07/14 22:15:20, Evan Martin wrote:\n> I believe the correct way to use salt is on a per-pw basis.\n\nThis is simply a slow way to embed a password in the source code. Thus, there is no salt. I figure it's just here to give the PRF something to work with.\n\n(Is there really no way to just say uint8_t key[] = {1, 2, 3, ...}?)","disapproval":false,"date":"2010-07-14 22:38:47.977329","approval":false},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"http://codereview.chromium.org/2931020/diff/1/2\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode17\nchrome/browser/password_manager/encryptor_linux.cc:17: const char kSalt[] = \"saltysalt\";\nOn 2010/07/14 22:29:10, Mike Mammarella wrote:\n> How about seasalt, or koshersalt? :)\n\nOr saltypeanuts to match the password?\n\nhttp://codereview.chromium.org/2931020/diff/1/2#newcode26\nchrome/browser/password_manager/encryptor_linux.cc:26: // http://code.google.com/p/chromium/issues/detail?id=25404\nOn 2010/07/14 22:29:10, Mike Mammarella wrote:\n> I was planning on closing this bug soon, once the user-saved passwords are\n> indeed stored in system-level stores by default. It seems like maybe this is a\n> slightly different bug; could we open a new one for this instead?\n\nDone.  http::/crbug.com/49115\n\nhttp://codereview.chromium.org/2931020/diff/1/3\nFile chrome/browser/password_manager/encryptor_unittest.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/1/3#newcode124\nchrome/browser/password_manager/encryptor_unittest.cc:124: EXPECT_EQ(plaintext, \"hel\");\nOn 2010/07/14 22:29:10, Mike Mammarella wrote:\n> You mean result here, right?\n\nYes, thanks.","disapproval":false,"date":"2010-07-14 22:42:49.592338","approval":false},{"sender":"jhawkins@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"LGTM","disapproval":false,"date":"2010-07-14 22:50:20.026548","approval":true},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"On 2010/07/14 22:38:47, agl wrote:\n> http://codereview.chromium.org/2931020/diff/1/2\n> File chrome/browser/password_manager/encryptor_linux.cc (right):\n> \n> http://codereview.chromium.org/2931020/diff/1/2#newcode17\n> chrome/browser/password_manager/encryptor_linux.cc:17: const char kSalt[] =\n> \"saltysalt\";\n> On 2010/07/14 22:15:20, Evan Martin wrote:\n> > I believe the correct way to use salt is on a per-pw basis.\n> \n> This is simply a slow way to embed a password in the source code. Thus, there is\n> no salt. I figure it's just here to give the PRF something to work with.\n> \n> (Is there really no way to just say uint8_t key[] = {1, 2, 3, ...}?)\n\nEncryptor::Init() takes a typed SymmetricKey...  not sure how to get there from a raw uint8 sequence.  Thoughts?","disapproval":false,"date":"2010-07-14 22:52:01.121523","approval":false},{"sender":"mdm@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"http://codereview.chromium.org/2931020/diff/13001/14001\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/13001/14001#newcode33\nchrome/browser/password_manager/encryptor_linux.cc:33: // http://crbug.com/25404\nPut the new bug number here, and below?","disapproval":false,"date":"2010-07-14 22:53:24.481381","approval":false},{"sender":"mdm@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"Oh, one other question - how do we handle migrating the currently-unencrypted data to be obfuscated, and how will we handle migrating that to be truly encrypted? Seems like we need some way to handle that.","disapproval":false,"date":"2010-07-14 22:55:22.460771","approval":false},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"http://codereview.chromium.org/2931020/diff/13001/14001\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/13001/14001#newcode33\nchrome/browser/password_manager/encryptor_linux.cc:33: // http://crbug.com/25404\nOn 2010/07/14 22:53:24, Mike Mammarella wrote:\n> Put the new bug number here, and below?\n\nDone.","disapproval":false,"date":"2010-07-14 22:58:24.761975","approval":false},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"On 2010/07/14 22:55:22, Mike Mammarella wrote:\n> Oh, one other question - how do we handle migrating the currently-unencrypted\n> data to be obfuscated, and how will we handle migrating that to be truly\n> encrypted? Seems like we need some way to handle that.\n\nFor current unencrypted data the decrypt will fail and user will lose any existing data.  For AutoFill this is acceptable because we're not released.  For stored passwords this might not be so acceptable.  The only other client of the Encryptor is sync for storing transient connection info, so that should not be an issue.\n\nFor future changes from obfuscated to encrypted, my thought was small data-loss (cc#s and passwords) seems a small price to pay for greater security.  No?","disapproval":false,"date":"2010-07-14 23:05:15.297131","approval":false},{"sender":"mdm@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"On 2010/07/14 23:05:15, dhollowa wrote:\n> On 2010/07/14 22:55:22, Mike Mammarella wrote:\n> > Oh, one other question - how do we handle migrating the currently-unencrypted\n> > data to be obfuscated, and how will we handle migrating that to be truly\n> > encrypted? Seems like we need some way to handle that.\n> \n> For current unencrypted data the decrypt will fail and user will lose any\n> existing data.  For AutoFill this is acceptable because we're not released.  For\n> stored passwords this might not be so acceptable.  The only other client of the\n> Encryptor is sync for storing transient connection info, so that should not be\n> an issue.\n> \n> For future changes from obfuscated to encrypted, my thought was small data-loss\n> (cc#s and passwords) seems a small price to pay for greater security.  No?\n\nFor passwords we're all set, I've been working on that and we migrate the existing passwords to the system store. If losing all the stored data is OK for this change, then that's fine if people agree on it.\n\nAs for losing the data again when we put in real encryption, why not just put a version number or some other flag in now? E.g. prefix the ciphertext with \"1\" if it's just obfuscated, and later on we can check for that and switch to \"2\" with encrypted data at some point. (Alternately, see how PasswordStoreDefault deals with migrating passwords from the web data store. This would be better than prefixing, probably.)","disapproval":false,"date":"2010-07-14 23:14:10.283030","approval":false},{"sender":"jhawkins@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"On 2010/07/14 23:14:10, Mike Mammarella wrote:\n> On 2010/07/14 23:05:15, dhollowa wrote:\n> > On 2010/07/14 22:55:22, Mike Mammarella wrote:\n> > > Oh, one other question - how do we handle migrating the\n> currently-unencrypted\n> > > data to be obfuscated, and how will we handle migrating that to be truly\n> > > encrypted? Seems like we need some way to handle that.\n> > \n> > For current unencrypted data the decrypt will fail and user will lose any\n> > existing data.  For AutoFill this is acceptable because we're not released. \n> For\n> > stored passwords this might not be so acceptable.  The only other client of\n> the\n> > Encryptor is sync for storing transient connection info, so that should not be\n> > an issue.\n> > \n> > For future changes from obfuscated to encrypted, my thought was small\n> data-loss\n> > (cc#s and passwords) seems a small price to pay for greater security.  No?\n> \n> For passwords we're all set, I've been working on that and we migrate the\n> existing passwords to the system store. If losing all the stored data is OK for\n> this change, then that's fine if people agree on it.\n> \n> As for losing the data again when we put in real encryption, why not just put a\n> version number or some other flag in now? E.g. prefix the ciphertext with \"1\" if\n> it's just obfuscated, and later on we can check for that and switch to \"2\" with\n> encrypted data at some point. (Alternately, see how PasswordStoreDefault deals\n> with migrating passwords from the web data store. This would be better than\n> prefixing, probably.)\n\nUsing the version number and then +1 version combined with platform checks is ideal.","disapproval":false,"date":"2010-07-14 23:22:53.411229","approval":false},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"On 2010/07/14 22:52:01, dhollowa wrote:\n> On 2010/07/14 22:38:47, agl wrote:\n> > http://codereview.chromium.org/2931020/diff/1/2\n> > File chrome/browser/password_manager/encryptor_linux.cc (right):\n> > \n> > http://codereview.chromium.org/2931020/diff/1/2#newcode17\n> > chrome/browser/password_manager/encryptor_linux.cc:17: const char kSalt[] =\n> > \"saltysalt\";\n> > On 2010/07/14 22:15:20, Evan Martin wrote:\n> > > I believe the correct way to use salt is on a per-pw basis.\n> > \n> > This is simply a slow way to embed a password in the source code. Thus, there\n> is\n> > no salt. I figure it's just here to give the PRF something to work with.\n> > \n> > (Is there really no way to just say uint8_t key[] = {1, 2, 3, ...}?)\n> \n> Encryptor::Init() takes a typed SymmetricKey...  not sure how to get there from\n> a raw uint8 sequence.  Thoughts?\n\nReduced keygen iterations to 1.  To address perf issues.","disapproval":false,"date":"2010-07-14 23:29:59.758732","approval":false},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"On 2010/07/14 23:22:53, James Hawkins wrote:\n> On 2010/07/14 23:14:10, Mike Mammarella wrote:\n> > On 2010/07/14 23:05:15, dhollowa wrote:\n> > > On 2010/07/14 22:55:22, Mike Mammarella wrote:\n> > > > Oh, one other question - how do we handle migrating the\n> > currently-unencrypted\n> > > > data to be obfuscated, and how will we handle migrating that to be truly\n> > > > encrypted? Seems like we need some way to handle that.\n> > > \n> > > For current unencrypted data the decrypt will fail and user will lose any\n> > > existing data.  For AutoFill this is acceptable because we're not released. \n> > For\n> > > stored passwords this might not be so acceptable.  The only other client of\n> > the\n> > > Encryptor is sync for storing transient connection info, so that should not\n> be\n> > > an issue.\n> > > \n> > > For future changes from obfuscated to encrypted, my thought was small\n> > data-loss\n> > > (cc#s and passwords) seems a small price to pay for greater security.  No?\n> > \n> > For passwords we're all set, I've been working on that and we migrate the\n> > existing passwords to the system store. If losing all the stored data is OK\n> for\n> > this change, then that's fine if people agree on it.\n> > \n> > As for losing the data again when we put in real encryption, why not just put\n> a\n> > version number or some other flag in now? E.g. prefix the ciphertext with \"1\"\n> if\n> > it's just obfuscated, and later on we can check for that and switch to \"2\"\n> with\n> > encrypted data at some point. (Alternately, see how PasswordStoreDefault deals\n> > with migrating passwords from the web data store. This would be better than\n> > prefixing, probably.)\n> \n> Using the version number and then +1 version combined with platform checks is\n> ideal.\n\nDone.  I've added \"v10\" as a prefix string to the cypher text.","disapproval":false,"date":"2010-07-15 00:51:15.229795","approval":false},{"sender":"mdm@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"LGTM\n\nhttp://codereview.chromium.org/2931020/diff/31001/32001\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/31001/32001#newcode113\nchrome/browser/password_manager/encryptor_linux.cc:113: return false;\nA thought: if the prefix is not found, there's a very good chance that this is just an unobfuscated password and we could just return it as-is here to prevent data loss. (Of course, old data would remain unobfuscated until modified.)","disapproval":false,"date":"2010-07-15 00:58:24.516170","approval":true},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"On 2010/07/15 00:58:24, Mike Mammarella wrote:\n> LGTM\n> \n> http://codereview.chromium.org/2931020/diff/31001/32001\n> File chrome/browser/password_manager/encryptor_linux.cc (right):\n> \n> http://codereview.chromium.org/2931020/diff/31001/32001#newcode113\n> chrome/browser/password_manager/encryptor_linux.cc:113: return false;\n> A thought: if the prefix is not found, there's a very good chance that this is\n> just an unobfuscated password and we could just return it as-is here to prevent\n> data loss. (Of course, old data would remain unobfuscated until modified.)\n\nMy preference is toward data-loss in this case...  As a user I'd be happier to have the clear-text ccs gone from my drive.  But that's just me.","disapproval":false,"date":"2010-07-15 01:05:34.280728","approval":false},{"sender":"mdm@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"On 2010/07/15 01:05:34, dhollowa wrote:\n> On 2010/07/15 00:58:24, Mike Mammarella wrote:\n> > LGTM\n> > \n> > http://codereview.chromium.org/2931020/diff/31001/32001\n> > File chrome/browser/password_manager/encryptor_linux.cc (right):\n> > \n> > http://codereview.chromium.org/2931020/diff/31001/32001#newcode113\n> > chrome/browser/password_manager/encryptor_linux.cc:113: return false;\n> > A thought: if the prefix is not found, there's a very good chance that this is\n> > just an unobfuscated password and we could just return it as-is here to\n> prevent\n> > data loss. (Of course, old data would remain unobfuscated until modified.)\n> \n> My preference is toward data-loss in this case...  As a user I'd be happier to\n> have the clear-text ccs gone from my drive.  But that's just me.\n\nWill they actually be deleted if they fail to decrypt? Or will they just become inaccessible but remain on disk?","disapproval":false,"date":"2010-07-15 01:07:11.030027","approval":false},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"On 2010/07/15 01:07:11, Mike Mammarella wrote:\n> On 2010/07/15 01:05:34, dhollowa wrote:\n> > On 2010/07/15 00:58:24, Mike Mammarella wrote:\n> > > LGTM\n> > > \n> > > http://codereview.chromium.org/2931020/diff/31001/32001\n> > > File chrome/browser/password_manager/encryptor_linux.cc (right):\n> > > \n> > > http://codereview.chromium.org/2931020/diff/31001/32001#newcode113\n> > > chrome/browser/password_manager/encryptor_linux.cc:113: return false;\n> > > A thought: if the prefix is not found, there's a very good chance that this\n> is\n> > > just an unobfuscated password and we could just return it as-is here to\n> > prevent\n> > > data loss. (Of course, old data would remain unobfuscated until modified.)\n> > \n> > My preference is toward data-loss in this case...  As a user I'd be happier to\n> > have the clear-text ccs gone from my drive.  But that's just me.\n> \n> Will they actually be deleted if they fail to decrypt? Or will they just become\n> inaccessible but remain on disk?\n\nAh, good point!  I'll make the change then.","disapproval":false,"date":"2010-07-15 01:11:12.590677","approval":false},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"http://codereview.chromium.org/2931020/diff/31001/32001\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/31001/32001#newcode113\nchrome/browser/password_manager/encryptor_linux.cc:113: return false;\nOn 2010/07/15 00:58:24, Mike Mammarella wrote:\n> A thought: if the prefix is not found, there's a very good chance that this is\n> just an unobfuscated password and we could just return it as-is here to prevent\n> data loss. (Of course, old data would remain unobfuscated until modified.)\n\nDone.","disapproval":false,"date":"2010-07-15 01:15:43.579626","approval":false},{"sender":"mdm@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"LGTM","disapproval":false,"date":"2010-07-15 01:19:05.626741","approval":true},{"sender":"stuartmorgan@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"http://codereview.chromium.org/2931020/diff/32003/39001\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/32003/39001#newcode32\nchrome/browser/password_manager/encryptor_linux.cc:32: base::SymmetricKey* GetEncryptionKey() {\nNeeds a function-level comment, which should mention that the client owns the returned key.\n\nhttp://codereview.chromium.org/2931020/diff/32003/39001#newcode41\nchrome/browser/password_manager/encryptor_linux.cc:41: scoped_ptr<base::SymmetricKey> encryption_key(\nWhy a scoped_ptr when the only possible path through the code is to release() it?\n\nhttp://codereview.chromium.org/2931020/diff/32003/39001#newcode74\nchrome/browser/password_manager/encryptor_linux.cc:74: // http://crbug.com/25404 and http://crbug.com/49115\nWhy is this comment repeated here and below? Other than versioning prefix, nothing outside of GetEncryptionKey would have to change, right?\n\nhttp://codereview.chromium.org/2931020/diff/32003/39001#newcode112\nchrome/browser/password_manager/encryptor_linux.cc:112: // old data saved as clear text and we'll return it directly.\nMaybe mention that the only case this should apply to in CC numbers, so we don't need to worry about false-positives?\n\nhttp://codereview.chromium.org/2931020/diff/32003/39002\nFile chrome/browser/password_manager/encryptor_unittest.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/32003/39002#newcode22\nchrome/browser/password_manager/encryptor_unittest.cc:22: //#endif\nRemove this.\n\nhttp://codereview.chromium.org/2931020/diff/32003/39002#newcode48\nchrome/browser/password_manager/encryptor_unittest.cc:48: // base::Encryptor::Crypt() on Mac.\nIsn't this part of your other change?","disapproval":false,"date":"2010-07-15 18:16:51.637498","approval":false},{"sender":"dhollowa@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"http://codereview.chromium.org/2931020/diff/32003/39001\nFile chrome/browser/password_manager/encryptor_linux.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/32003/39001#newcode32\nchrome/browser/password_manager/encryptor_linux.cc:32: base::SymmetricKey* GetEncryptionKey() {\nOn 2010/07/15 18:16:51, stuartmorgan wrote:\n> Needs a function-level comment, which should mention that the client owns the\n> returned key.\n\nDone.\n\nhttp://codereview.chromium.org/2931020/diff/32003/39001#newcode41\nchrome/browser/password_manager/encryptor_linux.cc:41: scoped_ptr<base::SymmetricKey> encryption_key(\nOn 2010/07/15 18:16:51, stuartmorgan wrote:\n> Why a scoped_ptr when the only possible path through the code is to release()\n> it?\n\nThis is a defensive coding strategy.  In case new code gets added that returns, we won't leak.\n\nhttp://codereview.chromium.org/2931020/diff/32003/39001#newcode74\nchrome/browser/password_manager/encryptor_linux.cc:74: // http://crbug.com/25404 and http://crbug.com/49115\nOn 2010/07/15 18:16:51, stuartmorgan wrote:\n> Why is this comment repeated here and below? Other than versioning prefix,\n> nothing outside of GetEncryptionKey would have to change, right?\n\nI left these duplicate comments in for obvious-ness to a new reader who might not notice the comment in GetEncryptionKey().\n\nhttp://codereview.chromium.org/2931020/diff/32003/39001#newcode112\nchrome/browser/password_manager/encryptor_linux.cc:112: // old data saved as clear text and we'll return it directly.\nOn 2010/07/15 18:16:51, stuartmorgan wrote:\n> Maybe mention that the only case this should apply to in CC numbers, so we don't\n> need to worry about false-positives?\n\nDone.\n\nhttp://codereview.chromium.org/2931020/diff/32003/39002\nFile chrome/browser/password_manager/encryptor_unittest.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/32003/39002#newcode22\nchrome/browser/password_manager/encryptor_unittest.cc:22: //#endif\nOn 2010/07/15 18:16:51, stuartmorgan wrote:\n> Remove this.\n\nYes, not part of this change.  Will land Mac changes first and then remove this.\n\nThe only thing that will change in this file is removal of #ifdefs that are part of the Mac change.\n\nhttp://codereview.chromium.org/2931020/diff/32003/39002#newcode48\nchrome/browser/password_manager/encryptor_unittest.cc:48: // base::Encryptor::Crypt() on Mac.\nOn 2010/07/15 18:16:51, stuartmorgan wrote:\n> Isn't this part of your other change?\n\nCorrect.  Sorry for the confusion.  Most of these changes will get landed in the Mac CL.","disapproval":false,"date":"2010-07-15 21:11:45.742574","approval":false},{"sender":"stuartmorgan@chromium.org","recipients":["dhollowa@chromium.org","jhawkins@google.com","evan@chromium.org","stuartmorgan@chromium.org","mdm@chromium.org","agl@chromium.org","jhawkins@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","ben+cc@chromium.org"],"text":"LGTM\n\nhttp://codereview.chromium.org/2931020/diff/32003/39002\nFile chrome/browser/password_manager/encryptor_unittest.cc (right):\n\nhttp://codereview.chromium.org/2931020/diff/32003/39002#newcode48\nchrome/browser/password_manager/encryptor_unittest.cc:48: // base::Encryptor::Crypt() on Mac.\nOn 2010/07/15 21:11:45, dhollowa wrote:\n> On 2010/07/15 18:16:51, stuartmorgan wrote:\n> > Isn't this part of your other change?\n> \n> Correct.  Sorry for the confusion.  Most of these changes will get landed in the\n> Mac CL.\n\nMay I recommend git? ;)","disapproval":false,"date":"2010-07-15 22:14:08.909286","approval":true}],"owner_email":"dhollowa@chromium.org","private":false,"base_url":"","owner":"dhollowa","subject":"AutoFill credit cards should be obfuscated on Linux","created":"2010-07-14 22:06:57.946246","patchsets":[1,9001,13001,1004,25001,28001,31001,32003,44001,49001],"modified":"2011-05-09 13:35:40.074269","closed":true,"commit":false,"issue":2931020}