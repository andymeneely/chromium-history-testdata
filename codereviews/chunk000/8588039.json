{"description":"Remove \"open in new tab\" items from context menu if the process doesn't\nhave permission to open them directly.  For example, right-click on a\n\"chrome://\" link in an ordinary window should show two items: Copy link\nlocation and inspect element, but a full menu from a WebUI window itself.\n\nNOTE: Fixing this issue requires a fix to ChildProcessSecurityPolicy, which as been silently too permissive.\n\nBUG=104466\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=113818","cc":["chromium-reviews@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"reviewers":["abarth@chromium.org","tsepez@google.com","jam@chromium.org"],"messages":[{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"Since the browser_process_impl is already adding a scheme from its lofty position in /chrome to the child process security policy in /content, seems reasonable to make it inform the child about the other schemes that content can't know about here, even if there is no handler for them registered later on via the per-profile code.\n\nChange the handling of these pseudo-schemes so that they must be blessed, apart from the 3 special cases we already had.","disapproval":false,"date":"2011-11-17 21:29:31.204002","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"So it looks like ChildProcessSecurityPolicy has been permissive since the beginning, since it didn't realize the chrome:// wasn't an external URL.\n\nNow that ChildProcessSecurityPolicy is actually returning \"no\" for chrome:// URLs unless the webui has been granted, the next test to bomb is AllUrlsApiTest.WhitelistedExtension, which seems to be hitting a denial when it tries to call ui_test_utils::Navigate(\"chrome://\") while showing a data: url.\n\nNeed to figure out if we should be giving the test framework an exemption.","disapproval":false,"date":"2011-11-18 00:35:07.787247","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"The first place the WhiteListedExtension is tripping over this is:\n\n\tChildProcessSecurityPolicy::SecurityState::CanRequestURL() [0x36c2116]\n\tChildProcessSecurityPolicy::CanRequestURL() [0x36c19c2]\n\tRenderViewHost::FilterURL() [0x37a641c]\n\tTabContents::OnDidStartProvisionalLoadForFrame() [0x380b8eb]","disapproval":false,"date":"2011-11-18 17:42:49.065499","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"Part of the problem is that when transitioning from a data: URL to the chrome://version URL, the security test is being made against the RVH associated with data:, not the pending one associated with the navigation to chrome://\n\nUnfortunately, the new RVH doesn't have its WebUI permission bits set either.","disapproval":false,"date":"2011-11-18 20:26:34.292491","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"RenderViewHostManager::UpdateRendererStateForNavigate() isn't setting pending_web_ui_ because chrome://version is a browser about handler, not a full-fledged web_ui.  Thus RenderViewHostManager::InitRenderView() doesn't call allowBindings() on the RVH.","disapproval":false,"date":"2011-11-18 20:59:54.140613","approval":false},{"sender":"cdn@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"I am absolutely certain that I don't even approach understanding this well enough to review it. Adam I think this is on you :)\n\nOn 2011/11/18 20:59:54, Tom Sepez wrote:\n> RenderViewHostManager::UpdateRendererStateForNavigate() isn't setting\n> pending_web_ui_ because chrome://version is a browser about handler, not a\n> full-fledged web_ui.  Thus RenderViewHostManager::InitRenderView() doesn't call\n> allowBindings() on the RVH.","disapproval":false,"date":"2011-11-18 22:15:57.479379","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"Adam, might as well kick off a review.  Need to wait for LKGR to advance a bit before the trybots have a chance at this ...","disapproval":false,"date":"2011-12-01 00:13:30.984986","approval":false},{"sender":"abarth@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"Hum...  Can you ping me again about this tomorrow?  I'm a bit too frazzled right now to think it through clearly.\n\nhttp://codereview.chromium.org/8588039/diff/16001/chrome/browser/browser_process_impl.cc\nFile chrome/browser/browser_process_impl.cc (right):\n\nhttp://codereview.chromium.org/8588039/diff/16001/chrome/browser/browser_process_impl.cc#newcode152\nchrome/browser/browser_process_impl.cc:152: policy->RegisterWebSafeScheme(chrome::kChromeDevToolsScheme);\nWhy is dev tools web-safe?  You shouldn't be able to follow hyperlinks into the inspector.  That would be strange.\n\nhttp://codereview.chromium.org/8588039/diff/16001/chrome/browser/browser_process_impl.cc#newcode153\nchrome/browser/browser_process_impl.cc:153: policy->RegisterPseudoScheme(chrome::kChromeUIScheme);\nWhy is ChromeUIScheme a pseudo scheme?  That doesn't seem right.","disapproval":false,"date":"2011-12-01 00:22:35.653530","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"http://codereview.chromium.org/8588039/diff/16001/chrome/browser/browser_process_impl.cc\nFile chrome/browser/browser_process_impl.cc (right):\n\nhttp://codereview.chromium.org/8588039/diff/16001/chrome/browser/browser_process_impl.cc#newcode152\nchrome/browser/browser_process_impl.cc:152: policy->RegisterWebSafeScheme(chrome::kChromeDevToolsScheme);\nLooks like this is in response to breaking the devtools.  Will remove this and retest.\n\nhttp://codereview.chromium.org/8588039/diff/16001/chrome/browser/browser_process_impl.cc#newcode153\nchrome/browser/browser_process_impl.cc:153: policy->RegisterPseudoScheme(chrome::kChromeUIScheme);\nOn 2011/12/01 00:22:35, abarth wrote:\n> Why is ChromeUIScheme a pseudo scheme?  That doesn't seem right.\n\nThis has to do with ChildProcessSecurityPolicy::CanRequestURL() and its overzealous desire to conclude that URLs are destined for the shell if !net::URLRequest::IsHandledURL(url).  We change this to conclude that shell requests also aren't pseudo-schemes, and add chrome to that list.  chrome smells like a pseudo scheme if its not being handled by URLRequest, no?","disapproval":false,"date":"2011-12-01 00:43:35.949889","approval":false},{"sender":"abarth@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"The ChromeUIScheme is handled by URLRequest.","disapproval":false,"date":"2011-12-01 00:45:49.878541","approval":false},{"sender":"tsepez@google.com","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"Seems like it should be.  But adding some tracing to\nchild_process_security_policy (just to get this in print so I don't have to\ntrust my gdb-fu):\n\n if (!net::URLRequest::IsHandledURL(url))\n    LOG(WARNING) << \"IsHandledURL() is false for \" << url.spec();\n\nresults in the following when I right-click on a chrome link on an http\npage:\n\n[7880:7880:1740865125093:WARNING:child_process_security_policy.cc(387)]\nIsHandledURL() is false for chrome://flags/\n\nMaybe that's where the bug lies.  But does the net:: layer 's idea of\nURLRequest grok a chrome:// ?? seems like layering is off if it does\n\nOn Wed, Nov 30, 2011 at 4:45 PM, <abarth@chromium.org> wrote:\n\n> The ChromeUIScheme is handled by URLRequest.\n>\n> http://codereview.chromium.**org/8588039/<http://codereview.chromium.org/8588039/>\n>\n","disapproval":false,"date":"2011-12-01 01:13:55.367145","approval":false},{"sender":"abarth@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"I feel like this bug keeps coming up.  The \"chrome\" scheme should be a\nhandled URL.  I'm nto sure what's involved in fixing that.  Whatever\nregisters the chrome scheme to get URLRequests should mark it as\nhandled.\n\nAdam\n\n\nOn Wed, Nov 30, 2011 at 5:13 PM, Thomas Sepez <tsepez@google.com> wrote:\n> Seems like it should be.  But adding some tracing to\n> child_process_security_policy (just to get this in print so I don't have to\n> trust my gdb-fu):\n>\n>  if (!net::URLRequest::IsHandledURL(url))\n>     LOG(WARNING) << \"IsHandledURL() is false for \" << url.spec();\n>\n> results in the following when I right-click on a chrome link on an http\n> page:\n>\n> [7880:7880:1740865125093:WARNING:child_process_security_policy.cc(387)]\n> IsHandledURL() is false for chrome://flags/\n>\n> Maybe that's where the bug lies.  But does the net:: layer 's idea of\n> URLRequest grok a chrome:// ?? seems like layering is off if it does\n>\n> On Wed, Nov 30, 2011 at 4:45 PM, <abarth@chromium.org> wrote:\n>>\n>> The ChromeUIScheme is handled by URLRequest.\n>>\n>> http://codereview.chromium.org/8588039/\n>\n>\n","disapproval":false,"date":"2011-12-01 01:32:52.510104","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","tsepez@google.com","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"Here's why this is hard:\nThere's a single static net::URLRequest::IsHandledURL() for the whole browser.  Schemes never get added to it.\nThere's a per-profile net::URLRequestJobFactory object which schemes get added to when the profile is opened.  It already has an isHandledURL() function that is updated with the new protocols. So we want to call this function instead of the net::URLRequest::IsHandledURL.\n\nThis means that the per-process ChildProcessSecurityPolicy object must determine the appropriate profile to retrieve the URLRequestJobFactory.\n\nI haven't been able to convince myself that a single per-process CPSP will always correspond to a single profile.  Do we launch separate renderers etc for the same site under different profiles?  If we do keep this separation, then it should be possible to link them.\n\nEven so,  profiles (and hence the path to the URJF) is a chrome layer concept, and CPSP is a content layer object.  There's some layering work to overcome.","disapproval":false,"date":"2011-12-02 02:07:36.058629","approval":false},{"sender":"abarth@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"I believe there is only one profile per render process.\n\nAdam\n\n\nOn Thu, Dec 1, 2011 at 6:07 PM,  <tsepez@chromium.org> wrote:\n> Here's why this is hard:\n> There's a single static net::URLRequest::IsHandledURL() for the whole\n> browser.\n> Schemes never get added to it.\n> There's a per-profile net::URLRequestJobFactory object which schemes get\n> added\n> to when the profile is opened.  It already has an isHandledURL() function\n> that\n> is updated with the new protocols. So we want to call this function instead\n> of\n> the net::URLRequest::IsHandledURL.\n>\n> This means that the per-process ChildProcessSecurityPolicy object must\n> determine\n> the appropriate profile to retrieve the URLRequestJobFactory.\n>\n> I haven't been able to convince myself that a single per-process CPSP will\n> always correspond to a single profile.  Do we launch separate renderers etc\n> for\n> the same site under different profiles?  If we do keep this separation, then\n> it\n> should be possible to link them.\n>\n> Even so,  profiles (and hence the path to the URJF) is a chrome layer\n> concept,\n> and CPSP is a content layer object.  There's some layering work to overcome.\n>\n>\n>\n> http://codereview.chromium.org/8588039/\n","disapproval":false,"date":"2011-12-02 21:25:46.828695","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","tsepez@google.com","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"Some comments for Patch Set #10:  Not happy with content API but lets do some testing to find what's broken.\n\nCondensed summary about why I'm doing this:\n\nCPSP is still relying on net::URLRequest::isHandledURL() to see if a request is destined for an external handler.  This is wrong in the new world, where only the URLRequestJobFactory knows the real answer.  As a result CPSP thinks too many protocols are externally handled, and thus has been silently too permissive for some time.  Part of the fix to this can be to pass an URJF to CPSP, which allows the correct result to be obtained -- so long as the JobFactory is available and one is on the IO thread.\n\nWhere I get into trouble is with RenderViewHost::FilterURL, which wants to call into CPSP as part of its filtering.  This happens on the UI thread, so I don't want to bounce over the the IO thread to get the correct answer. \n\nOne approach would be to make a thread-safe URJF, but that is too large a change for this purpose.  Instead add an API to allow CPSP to get at ProfileIOData::IsHandledURL() for the case where we aren't allowed to poke at the job factory.","disapproval":false,"date":"2011-12-07 22:34:40.152672","approval":false},{"sender":"jam@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","tsepez@google.com","willchan@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"api lgtm. just one question\n\nhttp://codereview.chromium.org/8588039/diff/31003/content/browser/mock_content_browser_client.cc\nFile content/browser/mock_content_browser_client.cc (right):\n\nhttp://codereview.chromium.org/8588039/diff/31003/content/browser/mock_content_browser_client.cc#newcode94\ncontent/browser/mock_content_browser_client.cc:94: return net::URLRequest::IsHandledURL(url);\nwhy isn't the mock impl returning false?","disapproval":false,"date":"2011-12-07 23:37:04.892774","approval":true},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","tsepez@google.com","willchan@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"yeah, I'll fix that.  Just stuck it there to get a test in.  Probably should be something like:\n\nbool OverrideIsHandledURL(const GURL&, bool *is_handled);\n\nReturning true if it was overriden with *is_handled set or false if the default should continue in CPSP.","disapproval":false,"date":"2011-12-07 23:43:01.784093","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","tsepez@google.com","willchan@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"(Trying to avoid two calls to check the same thing since the one in profileIOData covers the cases in net::)","disapproval":false,"date":"2011-12-07 23:51:34.569728","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","tsepez@google.com","willchan@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"But I guess there's no reason to believe that an embedder is always going to have this property of covering for net:: itself, so  I think its back to having the IsHandledURL() API and making a second call on false in CPSP.","disapproval":false,"date":"2011-12-08 00:30:12.237031","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","cdn@chromium.org","tsepez@google.com","willchan@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"I don't think that its right that CPSP can return different results depending upon whether URJFs are present.  So until we get a thread safe URJF, I'm just going to fall back to the new Content Client API.  This leads to a vast simplification.\n\nRework the CPSP tests to stop using the deprecated global registry functions -- these don't happen in the real world anymore.  By continuing to call them, they masked the broken real-word CPSP behaviour in the tests.  Instead, mock the new Client Content API.","disapproval":false,"date":"2011-12-08 22:06:01.211845","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","tsepez@google.com","willchan@chromium.org","jam@chromium.org","avi@chromium.org","chromium-reviews@chromium.org","avi@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"+AVI to get a reviewer for chrome/browser/tab_contents","disapproval":false,"date":"2011-12-08 22:24:41.646958","approval":false},{"sender":"avi@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","tsepez@google.com","willchan@chromium.org","jam@chromium.org","avi@chromium.org","chromium-reviews@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"On 2011/12/08 22:24:41, Tom Sepez wrote:\n> +AVI to get a reviewer for chrome/browser/tab_contents\n\njam@ still wants to review all API changes. Poke him.","disapproval":false,"date":"2011-12-08 23:20:30.288669","approval":false},{"sender":"tsepez@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","tsepez@google.com","jam@chromium.org","chromium-reviews@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","jam@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"John, would you take a final look when you get a chance?  thanks.","disapproval":false,"date":"2011-12-08 23:29:00.096806","approval":false},{"sender":"jam@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","tsepez@google.com","jam@chromium.org","chromium-reviews@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"On 2011/12/08 23:29:00, Tom Sepez wrote:\n> John, would you take a final look when you get a chance?  thanks.\n\nlgtm\n\nAvi: just to be clear, I'd like to review new interfaces when they go in to make sure they belong in content. but for updates to existing APIs, feel free to review.","disapproval":false,"date":"2011-12-09 01:46:53.419939","approval":true},{"sender":"avi@chromium.org","recipients":["tsepez@chromium.org","abarth@chromium.org","tsepez@google.com","jam@chromium.org","chromium-reviews@chromium.org","creis+watch@chromium.org","ajwong+watch@chromium.org","dpranke-watch+content@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"OK, no problem.","disapproval":false,"date":"2011-12-09 06:26:21.192151","approval":false}],"owner_email":"tsepez@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src/","owner":"Tom Sepez","subject":"Remove \"open in new tab\" items from context menu if the process doesn't","created":"2011-11-17 21:16:50.440671","patchsets":[1,5,5001,2004,8002,16001,24001,29001,30001,31003,39001,45001],"modified":"2011-12-09 17:57:48.208784","closed":true,"commit":false,"issue":8588039}