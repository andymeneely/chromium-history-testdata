{"description":"[chromedriver] Support click an element in sub frames.\n\nBUG=170998\nNOTRY=true\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=187920","cc":["chromium-reviews@chromium.org"],"reviewers":["kkania@chromium.org"],"messages":[{"sender":"chrisgao@chromium.org","recipients":["chrisgao@chromium.org","kkania@chromium.org","chromium-reviews@chromium.org"],"text":"","disapproval":false,"date":"2013-03-12 01:48:07.866630","approval":false},{"sender":"kkania@chromium.org","recipients":["chrisgao@chromium.org","kkania@chromium.org","chromium-reviews@chromium.org"],"text":"also, what tests do you have?\n\nhttps://codereview.chromium.org/12764021/diff/1/chrome/test/chromedriver/element_util.cc\nFile chrome/test/chromedriver/element_util.cc (right):\n\nhttps://codereview.chromium.org/12764021/diff/1/chrome/test/chromedriver/element_util.cc#newcode193\nchrome/test/chromedriver/element_util.cc:193: base::StringToInt(border_left_str, border_left);\ncheck return value?\n\nhttps://codereview.chromium.org/12764021/diff/1/chrome/test/chromedriver/element_util.cc#newcode529\nchrome/test/chromedriver/element_util.cc:529: xpath += base::StringPrintf(\"[@name=\\\"%s\\\"]\", it->name.c_str());\nwhy do we support both name and index?  i don't think relying on index is good.  how about we create a random attribute like the old chromedriver and look up the frame based on that?\n\nhttps://codereview.chromium.org/12764021/diff/1/chrome/test/chromedriver/run_py_tests.py\nFile chrome/test/chromedriver/run_py_tests.py (right):\n\nhttps://codereview.chromium.org/12764021/diff/1/chrome/test/chromedriver/run_py_tests.py#newcode67\nchrome/test/chromedriver/run_py_tests.py:67: self._driver.Load(self.GetHttpUrlForFile('/chromedriver/frame_test.html'))\n?","disapproval":false,"date":"2013-03-12 04:04:07.882130","approval":false},{"sender":"chrisgao@chromium.org","recipients":["chrisgao@chromium.org","kkania@chromium.org","chromium-reviews@chromium.org"],"text":"The testcase might be flanking because of the frame switch problem. But it runs well locally.\n\nhttps://codereview.chromium.org/12764021/diff/1/chrome/test/chromedriver/element_util.cc\nFile chrome/test/chromedriver/element_util.cc (right):\n\nhttps://codereview.chromium.org/12764021/diff/1/chrome/test/chromedriver/element_util.cc#newcode193\nchrome/test/chromedriver/element_util.cc:193: base::StringToInt(border_left_str, border_left);\nOn 2013/03/12 04:04:07, kkania wrote:\n> check return value?\n\nDone.\n\nhttps://codereview.chromium.org/12764021/diff/1/chrome/test/chromedriver/element_util.cc#newcode529\nchrome/test/chromedriver/element_util.cc:529: xpath += base::StringPrintf(\"[@name=\\\"%s\\\"]\", it->name.c_str());\nOn 2013/03/12 04:04:07, kkania wrote:\n> why do we support both name and index?  i don't think relying on index is good. \n> how about we create a random attribute like the old chromedriver and look up the\n> frame based on that?\n\nBecause name of frame is optional in the Inspector.json\n\nDo the same way as the old chromedriver.\n\nhttps://codereview.chromium.org/12764021/diff/1/chrome/test/chromedriver/run_py_tests.py\nFile chrome/test/chromedriver/run_py_tests.py (right):\n\nhttps://codereview.chromium.org/12764021/diff/1/chrome/test/chromedriver/run_py_tests.py#newcode67\nchrome/test/chromedriver/run_py_tests.py:67: self._driver.Load(self.GetHttpUrlForFile('/chromedriver/frame_test.html'))\nOn 2013/03/12 04:04:07, kkania wrote:\n> ?\n\nWhoops, forgot to remove this...\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/run_py_tests.py\nFile chrome/test/chromedriver/run_py_tests.py (right):\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/run_py_tests.py#newcode253\nchrome/test/chromedriver/run_py_tests.py:253: self._driver.ExecuteScript('arguments[0].src = \"empty.html\";', frame)\nA workaround for the hanging issue during switching to sub-frame.","disapproval":false,"date":"2013-03-12 17:41:18.239670","approval":false},{"sender":"kkania@chromium.org","recipients":["chrisgao@chromium.org","kkania@chromium.org","chromium-reviews@chromium.org"],"text":"https://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/basic_types.h\nFile chrome/test/chromedriver/basic_types.h (right):\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/basic_types.h#newcode43\nchrome/test/chromedriver/basic_types.h:43: struct FrameInfo {\ni don't think i'd call this a basic type. how about move it to session.h?\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/basic_types.h#newcode43\nchrome/test/chromedriver/basic_types.h:43: struct FrameInfo {\ncan you think of a better name?\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/basic_types.h#newcode47\nchrome/test/chromedriver/basic_types.h:47: std::string xpath;\nat first read, it is a bit unclear what this refers to. can you think of a better name\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/element_util.cc\nFile chrome/test/chromedriver/element_util.cc (right):\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/element_util.cc#newcode104\nchrome/test/chromedriver/element_util.cc:104: WebPoint* location) {\nmake this const WebPoint&; also, change all the CreateValueFrom to take a const ref instead of a pointer\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/element_util.cc#newcode147\nchrome/test/chromedriver/element_util.cc:147: if (!ParseFromValue(result.get(), location))\nusually we've been trying to keep to the convention if status is error, the output will not be modified\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/session.h\nFile chrome/test/chromedriver/session.h (right):\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/session.h#newcode37\nchrome/test/chromedriver/session.h:37: std::string frame;\nthis is a bit messy now that the client must remember to keep frame_elements and frame in sync. Fix this.","disapproval":false,"date":"2013-03-12 18:34:25.611450","approval":false},{"sender":"chrisgao@chromium.org","recipients":["chrisgao@chromium.org","kkania@chromium.org","chromium-reviews@chromium.org"],"text":"ptal\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/basic_types.h\nFile chrome/test/chromedriver/basic_types.h (right):\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/basic_types.h#newcode43\nchrome/test/chromedriver/basic_types.h:43: struct FrameInfo {\nOn 2013/03/12 18:34:25, kkania wrote:\n> i don't think i'd call this a basic type. how about move it to session.h?\n\nDone.\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/basic_types.h#newcode43\nchrome/test/chromedriver/basic_types.h:43: struct FrameInfo {\nOn 2013/03/12 18:34:25, kkania wrote:\n> can you think of a better name?\n\nFrameElement.\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/basic_types.h#newcode47\nchrome/test/chromedriver/basic_types.h:47: std::string xpath;\nOn 2013/03/12 18:34:25, kkania wrote:\n> at first read, it is a bit unclear what this refers to. can you think of a\n> better name\n\nchromedriver_frame_id, holding the random value of attribute cd_frame_id_.\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/element_util.cc\nFile chrome/test/chromedriver/element_util.cc (right):\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/element_util.cc#newcode104\nchrome/test/chromedriver/element_util.cc:104: WebPoint* location) {\nOn 2013/03/12 18:34:25, kkania wrote:\n> make this const WebPoint&; also, change all the CreateValueFrom to take a const\n> ref instead of a pointer\n\nDone.\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/element_util.cc#newcode147\nchrome/test/chromedriver/element_util.cc:147: if (!ParseFromValue(result.get(), location))\nOn 2013/03/12 18:34:25, kkania wrote:\n> usually we've been trying to keep to the convention if status is error, the\n> output will not be modified\n\nDone.\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/session.h\nFile chrome/test/chromedriver/session.h (right):\n\nhttps://codereview.chromium.org/12764021/diff/9001/chrome/test/chromedriver/session.h#newcode37\nchrome/test/chromedriver/session.h:37: std::string frame;\nOn 2013/03/12 18:34:25, kkania wrote:\n> this is a bit messy now that the client must remember to keep frame_elements and\n> frame in sync. Fix this.\n\nRemove frame, and only maintain frame_elements.","disapproval":false,"date":"2013-03-12 23:17:41.429550","approval":false},{"sender":"kkania@chromium.org","recipients":["chrisgao@chromium.org","kkania@chromium.org","chromium-reviews@chromium.org"],"text":"lgtm\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/basic_types.h\nFile chrome/test/chromedriver/basic_types.h (right):\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/basic_types.h#newcode14\nchrome/test/chromedriver/basic_types.h:14: int X() const;\nwhy do we need these?\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/basic_types.h#newcode26\nchrome/test/chromedriver/basic_types.h:26: int Width() const;\nwhy?\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/run_py_tests.py\nFile chrome/test/chromedriver/run_py_tests.py (right):\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/run_py_tests.py#newcode253\nchrome/test/chromedriver/run_py_tests.py:253: self._driver.ExecuteScript('arguments[0].src = \"empty.html\";', frame)\ncan you remove this now? optional, but you can check\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/session.cc\nFile chrome/test/chromedriver/session.cc (right):\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/session.cc#newcode19\nchrome/test/chromedriver/session.cc:19: : parent_frame_id(parent_frame_id), frame_id(frame_id),\nnormal style is to put these on separate lines if they can't all fit on one\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/session.cc#newcode67\nchrome/test/chromedriver/session.cc:67: std::string parent_frame_id = \"\";\nremove = \"\"\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/session.h\nFile chrome/test/chromedriver/session.h (right):\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/session.h#newcode25\nchrome/test/chromedriver/session.h:25: struct FrameElement {\nactually, i think FrameInfo is better than FrameElement","disapproval":false,"date":"2013-03-13 00:06:20.375860","approval":true},{"sender":"chrisgao@chromium.org","recipients":["chrisgao@chromium.org","kkania@chromium.org","chromium-reviews@chromium.org"],"text":"https://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/basic_types.h\nFile chrome/test/chromedriver/basic_types.h (right):\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/basic_types.h#newcode14\nchrome/test/chromedriver/basic_types.h:14: int X() const;\nOn 2013/03/13 00:06:20, kkania wrote:\n> why do we need these?\n\nWhoops, i thought direct access to const object member leads to compile error.\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/basic_types.h#newcode26\nchrome/test/chromedriver/basic_types.h:26: int Width() const;\nOn 2013/03/13 00:06:20, kkania wrote:\n> why?\n\nRemoved.\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/run_py_tests.py\nFile chrome/test/chromedriver/run_py_tests.py (right):\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/run_py_tests.py#newcode253\nchrome/test/chromedriver/run_py_tests.py:253: self._driver.ExecuteScript('arguments[0].src = \"empty.html\";', frame)\nOn 2013/03/13 00:06:20, kkania wrote:\n> can you remove this now? optional, but you can check\n\nRemoved. It is not needed anymore.\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/session.cc\nFile chrome/test/chromedriver/session.cc (right):\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/session.cc#newcode19\nchrome/test/chromedriver/session.cc:19: : parent_frame_id(parent_frame_id), frame_id(frame_id),\nOn 2013/03/13 00:06:20, kkania wrote:\n> normal style is to put these on separate lines if they can't all fit on one\n\nDone.\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/session.cc#newcode67\nchrome/test/chromedriver/session.cc:67: std::string parent_frame_id = \"\";\nOn 2013/03/13 00:06:20, kkania wrote:\n> remove = \"\"\n\nDone.\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/session.h\nFile chrome/test/chromedriver/session.h (right):\n\nhttps://codereview.chromium.org/12764021/diff/13001/chrome/test/chromedriver/session.h#newcode25\nchrome/test/chromedriver/session.h:25: struct FrameElement {\nOn 2013/03/13 00:06:20, kkania wrote:\n> actually, i think FrameInfo is better than FrameElement\n\nOk, take FrameInfo.","disapproval":false,"date":"2013-03-13 00:36:48.560040","approval":false},{"sender":"commit-bot@chromium.org","recipients":["chrisgao@chromium.org","kkania@chromium.org","chromium-reviews@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/chrisgao@chromium.org/12764021/43001","disapproval":false,"date":"2013-03-13 19:31:14.041960","approval":false},{"sender":"commit-bot@chromium.org","recipients":["chrisgao@chromium.org","kkania@chromium.org","chromium-reviews@chromium.org"],"text":"Change committed as 187920","disapproval":false,"date":"2013-03-13 19:35:50.953310","approval":false}],"owner_email":"chrisgao@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"chrisgao","subject":"[chromedriver] Support clicking an element in sub frames.","created":"2013-03-12 01:37:23.780690","patchsets":[1,9001,13001,21001,35001,33016,43001],"modified":"2013-03-13 19:35:50.995520","closed":true,"commit":false,"issue":12764021}