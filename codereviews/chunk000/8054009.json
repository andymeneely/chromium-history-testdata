{"description":"Enhance error reporting for leveldb errors in origin/directory database code\r\n\r\nBUG=94314\r\nTEST=none (no functionality changes)\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=103099","cc":["chromium-reviews@chromium.org","kinuko+watch@chromium.org","darin-cc@chromium.org"],"reviewers":["ericu@chromium.org"],"messages":[{"sender":"kinuko@chromium.org","recipients":["kinuko@chromium.org","ericu@chromium.org","chromium-reviews@chromium.org","kinuko+watch@chromium.org","darin-cc@chromium.org"],"text":"","disapproval":false,"date":"2011-09-27 12:12:55.982449","approval":false},{"sender":"ericu@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"LGTM; good idea.\n\nOn Tue, Sep 27, 2011 at 5:12 AM,  <kinuko@chromium.org> wrote:\n> Reviewers: ericu,\n>\n> Description:\n> Enhance error reporting for leveldb errors in origin/directory database code\n>\n> BUG=94314\n> TEST=none (no functionality changes)\n>\n>\n> Please review this at http://codereview.chromium.org/8054009/\n>\n> SVN Base: svn://svn.chromium.org/chrome/trunk/src\n>\n> Affected files:\n>  M webkit/fileapi/file_system_directory_database.h\n>  M webkit/fileapi/file_system_directory_database.cc\n>  M webkit/fileapi/file_system_origin_database.h\n>  M webkit/fileapi/file_system_origin_database.cc\n>\n>\n> Index: webkit/fileapi/file_system_directory_database.cc\n> diff --git a/webkit/fileapi/file_system_directory_database.cc\n> b/webkit/fileapi/file_system_directory_database.cc\n> index\n> c7e5b3790ee80e592dc5dcc8e0d64ee298a1ace0..efab27bbe1f0ca8157458e9a30a0330193a156d2\n> 100644\n> --- a/webkit/fileapi/file_system_directory_database.cc\n> +++ b/webkit/fileapi/file_system_directory_database.cc\n> @@ -6,6 +6,7 @@\n>\n>  #include <math.h>\n>\n> +#include \"base/location.h\"\n>  #include \"base/pickle.h\"\n>  #include \"base/string_number_conversions.h\"\n>  #include \"base/string_util.h\"\n> @@ -144,7 +145,7 @@ bool FileSystemDirectoryDatabase::GetChildWithName(\n>     }\n>     return true;\n>   }\n> -  HandleError(status);\n> +  HandleError(FROM_HERE, status);\n>   return false;\n>  }\n>\n> @@ -213,7 +214,7 @@ bool FileSystemDirectoryDatabase::GetFileInfo(FileId\n> file_id, FileInfo* info) {\n>     info->parent_id = 0;\n>     return true;\n>   }\n> -  HandleError(status);\n> +  HandleError(FROM_HERE, status);\n>   return false;\n>  }\n>\n> @@ -231,7 +232,7 @@ bool FileSystemDirectoryDatabase::AddFileInfo(\n>     return false;\n>   }\n>   if (!status.IsNotFound()) {\n> -    HandleError(status);\n> +    HandleError(FROM_HERE, status);\n>     return false;\n>   }\n>\n> @@ -253,7 +254,7 @@ bool FileSystemDirectoryDatabase::AddFileInfo(\n>   batch.Put(LastFileIdKey(), base::Int64ToString(temp_id));\n>   status = db_->Write(leveldb::WriteOptions(), &batch);\n>   if (!status.ok()) {\n> -    HandleError(status);\n> +    HandleError(FROM_HERE, status);\n>     return false;\n>   }\n>   *file_id = temp_id;\n> @@ -268,7 +269,7 @@ bool FileSystemDirectoryDatabase::RemoveFileInfo(FileId\n> file_id) {\n>     return false;\n>   leveldb::Status status = db_->Write(leveldb::WriteOptions(), &batch);\n>   if (!status.ok()) {\n> -    HandleError(status);\n> +    HandleError(FROM_HERE, status);\n>     return false;\n>   }\n>   return true;\n> @@ -302,7 +303,7 @@ bool FileSystemDirectoryDatabase::UpdateFileInfo(\n>     return false;\n>   leveldb::Status status = db_->Write(leveldb::WriteOptions(), &batch);\n>   if (!status.ok()) {\n> -    HandleError(status);\n> +    HandleError(FROM_HERE, status);\n>     return false;\n>   }\n>   return true;\n> @@ -323,7 +324,7 @@ bool\n> FileSystemDirectoryDatabase::UpdateModificationTime(\n>       leveldb::Slice(reinterpret_cast<const char *>(pickle.data()),\n>                      pickle.size()));\n>   if (!status.ok()) {\n> -    HandleError(status);\n> +    HandleError(FROM_HERE, status);\n>     return false;\n>   }\n>   return true;\n> @@ -355,7 +356,7 @@ bool FileSystemDirectoryDatabase::OverwritingMoveFile(\n>                      pickle.size()));\n>   leveldb::Status status = db_->Write(leveldb::WriteOptions(), &batch);\n>   if (!status.ok()) {\n> -    HandleError(status);\n> +    HandleError(FROM_HERE, status);\n>     return false;\n>   }\n>   return true;\n> @@ -378,14 +379,14 @@ bool\n> FileSystemDirectoryDatabase::GetNextInteger(int64* next) {\n>     status = db_->Put(leveldb::WriteOptions(), LastIntegerKey(),\n>         base::Int64ToString(temp));\n>     if (!status.ok()) {\n> -      HandleError(status);\n> +      HandleError(FROM_HERE, status);\n>       return false;\n>     }\n>     *next = temp;\n>     return true;\n>   }\n>   if (!status.IsNotFound()) {\n> -    HandleError(status);\n> +    HandleError(FROM_HERE, status);\n>     return false;\n>   }\n>   // The database must not yet exist; initialize it.\n> @@ -423,7 +424,7 @@ bool FileSystemDirectoryDatabase::Init() {\n>    db_.reset(db);\n>    return true;\n>  }\n> - HandleError(status);\n> + HandleError(FROM_HERE, status);\n>  return false;\n>  }\n>\n> @@ -447,7 +448,7 @@ bool FileSystemDirectoryDatabase::StoreDefaultValues() {\n>   batch.Put(LastIntegerKey(), base::Int64ToString(-1));\n>   leveldb::Status status = db_->Write(leveldb::WriteOptions(), &batch);\n>   if (!status.ok()) {\n> -    HandleError(status);\n> +    HandleError(FROM_HERE, status);\n>     return false;\n>   }\n>   return true;\n> @@ -468,7 +469,7 @@ bool FileSystemDirectoryDatabase::GetLastFileId(FileId*\n> file_id) {\n>     return true;\n>   }\n>   if (!status.IsNotFound()) {\n> -    HandleError(status);\n> +    HandleError(FROM_HERE, status);\n>     return false;\n>   }\n>   // The database must not yet exist; initialize it.\n> @@ -535,9 +536,11 @@ bool FileSystemDirectoryDatabase::RemoveFileInfoHelper(\n>   return true;\n>  }\n>\n> -void FileSystemDirectoryDatabase::HandleError(leveldb::Status status) {\n> -  LOG(ERROR) << \"FileSystemDirectoryDatabase failed with error: \" <<\n> -      status.ToString();\n> +void FileSystemDirectoryDatabase::HandleError(\n> +    const tracked_objects::Location& from_here,\n> +    leveldb::Status status) {\n> +  LOG(ERROR) << \"FileSystemDirectoryDatabase failed at: \"\n> +             << from_here.ToString() << \" with error: \" <<\n> status.ToString();\n>   db_.reset();\n>  }\n>\n> Index: webkit/fileapi/file_system_directory_database.h\n> diff --git a/webkit/fileapi/file_system_directory_database.h\n> b/webkit/fileapi/file_system_directory_database.h\n> index\n> 78cae7d685ab58efc9a8f8ffaba2bdb70ccd77c8..1c760b8e3fd8c487e708a8830553f0c576a625ce\n> 100644\n> --- a/webkit/fileapi/file_system_directory_database.h\n> +++ b/webkit/fileapi/file_system_directory_database.h\n> @@ -13,6 +13,10 @@\n>  #include \"base/time.h\"\n>  #include \"third_party/leveldatabase/src/include/leveldb/db.h\"\n>\n> +namespace tracked_objects {\n> +class Location;\n> +}\n> +\n>  namespace leveldb {\n>  class WriteBatch;\n>  }\n> @@ -90,7 +94,8 @@ class FileSystemDirectoryDatabase {\n>   bool AddFileInfoHelper(\n>       const FileInfo& info, FileId file_id, leveldb::WriteBatch* batch);\n>   bool RemoveFileInfoHelper(FileId file_id, leveldb::WriteBatch* batch);\n> -  void HandleError(leveldb::Status status);\n> +  void HandleError(const tracked_objects::Location& from_here,\n> +                   leveldb::Status status);\n>\n>   std::string path_;\n>   scoped_ptr<leveldb::DB> db_;\n> Index: webkit/fileapi/file_system_origin_database.cc\n> diff --git a/webkit/fileapi/file_system_origin_database.cc\n> b/webkit/fileapi/file_system_origin_database.cc\n> index\n> 5762ee9fe859d60e7b3714b42f9330c31eed0c6d..125576ae38d1eda4f7dfeae35a63059f1b326c06\n> 100644\n> --- a/webkit/fileapi/file_system_origin_database.cc\n> +++ b/webkit/fileapi/file_system_origin_database.cc\n> @@ -5,6 +5,7 @@\n>  #include \"webkit/fileapi/file_system_origin_database.h\"\n>\n>  #include \"base/format_macros.h\"\n> +#include \"base/location.h\"\n>  #include \"base/logging.h\"\n>  #include \"base/string_number_conversions.h\"\n>  #include \"base/stringprintf.h\"\n> @@ -65,14 +66,15 @@ bool FileSystemOriginDatabase::Init() {\n>     db_.reset(db);\n>     return true;\n>   }\n> -  HandleError(status);\n> +  HandleError(FROM_HERE, status);\n>   return false;\n>  }\n>\n> -void FileSystemOriginDatabase::HandleError(leveldb::Status status) {\n> +void FileSystemOriginDatabase::HandleError(\n> +    const tracked_objects::Location& from_here, leveldb::Status status) {\n>   db_.reset();\n> -  LOG(ERROR) << \"FileSystemOriginDatabase failed with error: \" <<\n> -      status.ToString();\n> +  LOG(ERROR) << \"FileSystemOriginDatabase failed at: \"\n> +             << from_here.ToString() << \" with error: \" <<\n> status.ToString();\n>  }\n>\n>  bool FileSystemOriginDatabase::HasOriginPath(const std::string& origin) {\n> @@ -87,7 +89,7 @@ bool FileSystemOriginDatabase::HasOriginPath(const\n> std::string& origin) {\n>     return true;\n>   if (status.IsNotFound())\n>     return false;\n> -  HandleError(status);\n> +  HandleError(FROM_HERE, status);\n>   return false;\n>  }\n>\n> @@ -113,7 +115,7 @@ bool FileSystemOriginDatabase::GetPathForOrigin(\n>     batch.Put(origin_key, path_string);\n>     status = db_->Write(leveldb::WriteOptions(), &batch);\n>     if (!status.ok()) {\n> -      HandleError(status);\n> +      HandleError(FROM_HERE, status);\n>       return false;\n>     }\n>   }\n> @@ -125,7 +127,7 @@ bool FileSystemOriginDatabase::GetPathForOrigin(\n>  #endif\n>     return true;\n>   }\n> -  HandleError(status);\n> +  HandleError(FROM_HERE, status);\n>   return false;\n>  }\n>\n> @@ -136,7 +138,7 @@ bool FileSystemOriginDatabase::RemovePathForOrigin(const\n> std::string& origin) {\n>       db_->Delete(leveldb::WriteOptions(), OriginToOriginKey(origin));\n>   if (status.ok() || status.IsNotFound())\n>     return true;\n> -  HandleError(status);\n> +  HandleError(FROM_HERE, status);\n>   return false;\n>  }\n>\n> @@ -178,7 +180,7 @@ bool FileSystemOriginDatabase::GetLastPathNumber(int*\n> number) {\n>   if (status.ok())\n>     return base::StringToInt(number_string, number);\n>   if (!status.IsNotFound()) {\n> -    HandleError(status);\n> +    HandleError(FROM_HERE, status);\n>     return false;\n>   }\n>   // Verify that this is a totally new database, and initialize it.\n> @@ -193,7 +195,7 @@ bool FileSystemOriginDatabase::GetLastPathNumber(int*\n> number) {\n>   status =\n>       db_->Put(leveldb::WriteOptions(), LastPathKey(), std::string(\"-1\"));\n>   if (!status.ok()) {\n> -    HandleError(status);\n> +    HandleError(FROM_HERE, status);\n>     return false;\n>   }\n>   *number = -1;\n> Index: webkit/fileapi/file_system_origin_database.h\n> diff --git a/webkit/fileapi/file_system_origin_database.h\n> b/webkit/fileapi/file_system_origin_database.h\n> index\n> 0501ff652d1f004cba0a88ed80d0fc94dc85bdc6..ac729dfbf50d9433fb64328a4409510987fd96ce\n> 100644\n> --- a/webkit/fileapi/file_system_origin_database.h\n> +++ b/webkit/fileapi/file_system_origin_database.h\n> @@ -13,6 +13,10 @@\n>  #include \"base/memory/scoped_ptr.h\"\n>  #include \"third_party/leveldatabase/src/include/leveldb/db.h\"\n>\n> +namespace tracked_objects {\n> +class Location;\n> +}\n> +\n>  namespace fileapi {\n>\n>  // All methods of this class other than the constructor may be used only\n> from\n> @@ -49,7 +53,8 @@ class FileSystemOriginDatabase {\n>\n>  private:\n>   bool Init();\n> -  void HandleError(leveldb::Status status);\n> +  void HandleError(const tracked_objects::Location& from_here,\n> +                   leveldb::Status status);\n>   bool GetLastPathNumber(int* number);\n>\n>   std::string path_;\n>\n>\n>\n","disapproval":false,"date":"2011-09-27 16:15:44.213087","approval":true}],"owner_email":"kinuko@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"kinuko","subject":"Enhance error reporting for leveldb errors in origin/directory database","created":"2011-09-27 12:07:19.902851","patchsets":[1],"modified":"2011-09-28 09:07:38.276554","closed":true,"commit":false,"issue":8054009}