{"description":"Support persistent incognito preferences\r\n\r\n\r\nBUG=60099\r\nTEST=no\r\n\r\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=86713","cc":["chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"reviewers":["mpcomplete@chromium.org","bauerb@chromium.org"],"messages":[{"sender":"battre@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"And this is the next one, enabling persistent incognito preferences. I decided to do this before the session scoped incognito preferences because it is easier for me this way.\n\nI can just re-enable all test-cases that we had before. I am confident to create a good CL for the session scoped incognito preferences by tomorrow evening and will create new test cases for this.","disapproval":false,"date":"2011-05-24 18:18:40.894132","approval":false},{"sender":"mpcomplete@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/7065033/diff/1/chrome/browser/extensions/extension_pref_value_map.h\nFile chrome/browser/extensions/extension_pref_value_map.h (right):\n\nhttp://codereview.chromium.org/7065033/diff/1/chrome/browser/extensions/extension_pref_value_map.h#newcode15\nchrome/browser/extensions/extension_pref_value_map.h:15: #include \"chrome/browser/extensions/extension_prefs_scope.h\"\nI don't see this file in the CL.","disapproval":false,"date":"2011-05-24 18:23:24.306069","approval":false},{"sender":"battre@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/7065033/diff/1/chrome/browser/extensions/extension_pref_value_map.h\nFile chrome/browser/extensions/extension_pref_value_map.h (right):\n\nhttp://codereview.chromium.org/7065033/diff/1/chrome/browser/extensions/extension_pref_value_map.h#newcode15\nchrome/browser/extensions/extension_pref_value_map.h:15: #include \"chrome/browser/extensions/extension_prefs_scope.h\"\nOn 2011/05/24 18:23:24, Matt Perry wrote:\n> I don't see this file in the CL.\n\nDone.","disapproval":false,"date":"2011-05-24 18:24:59.346022","approval":false},{"sender":"mpcomplete@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/7065033/diff/1/chrome/browser/extensions/extension_pref_value_map.cc\nFile chrome/browser/extensions/extension_pref_value_map.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/1/chrome/browser/extensions/extension_pref_value_map.cc#newcode124\nchrome/browser/extensions/extension_pref_value_map.cc:124: return &(i->second->reg_preferences);\nPer the style guide, avoid abbrevs.\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_preference_api.cc#newcode371\nchrome/browser/extensions/extension_preference_api.cc:371: if (incognito && !include_incognito()) {\nHmm.. what is the desired behavior for the preferences API in a split-mode extension? include_incognito will always be false in that case.\n\nYou probably want to restrict things this way:\n- split-mode regular profile: error unless scope is kRegular\n- split-mode incognito profile: error unless scope is kIncognito*\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_prefs_scope.h\nFile chrome/browser/extensions/extension_prefs_scope.h (right):\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_prefs_scope.h#newcode9\nchrome/browser/extensions/extension_prefs_scope.h:9: namespace extension_prefs_scope {\nThis should not be a namespace. See this discussion on chromium-dev http://groups.google.com/a/chromium.org/group/chromium-dev/browse_thread/thread/455a6ceb4e8807f8/a650ba672aebd2aa?lnk=gst&q=Namespace+usage+clarifications#a650ba672aebd2aa\n\nI'd say you can just make it a member of either the ExtensionPrefs or ExtensionPrefValueMap class.","disapproval":false,"date":"2011-05-24 21:04:56.608360","approval":false},{"sender":"bauerb@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_preference_api.cc#newcode371\nchrome/browser/extensions/extension_preference_api.cc:371: if (incognito && !include_incognito()) {\nOn 2011/05/24 21:04:56, Matt Perry wrote:\n> Hmm.. what is the desired behavior for the preferences API in a split-mode\n> extension? include_incognito will always be false in that case.\n> \n> You probably want to restrict things this way:\n> - split-mode regular profile: error unless scope is kRegular\n> - split-mode incognito profile: error unless scope is kIncognito*\n\nMy idea behind it was that for a split-mode incognito profile regular scope is automatically mapped to incognito.","disapproval":false,"date":"2011-05-24 21:16:25.122830","approval":false},{"sender":"bauerb@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/7065033/diff/1044/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/1044/chrome/browser/extensions/extension_preference_api.cc#newcode123\nchrome/browser/extensions/extension_preference_api.cc:123: NOTREACHED();\nIn that case you should fail validation (EXTENSION_FUNCTION_VALIDATE style) instead of DCHECKing.","disapproval":false,"date":"2011-05-25 00:43:00.205593","approval":false},{"sender":"battre@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/7065033/diff/1/chrome/browser/extensions/extension_pref_value_map.cc\nFile chrome/browser/extensions/extension_pref_value_map.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/1/chrome/browser/extensions/extension_pref_value_map.cc#newcode124\nchrome/browser/extensions/extension_pref_value_map.cc:124: return &(i->second->reg_preferences);\nOn 2011/05/24 21:04:56, Matt Perry wrote:\n> Per the style guide, avoid abbrevs.\n\nDone.\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_preference_api.cc#newcode371\nchrome/browser/extensions/extension_preference_api.cc:371: if (incognito && !include_incognito()) {\nOn 2011/05/24 21:16:25, Bernhard Bauer wrote:\n> On 2011/05/24 21:04:56, Matt Perry wrote:\n> > Hmm.. what is the desired behavior for the preferences API in a split-mode\n> > extension? include_incognito will always be false in that case.\n> > \n> > You probably want to restrict things this way:\n> > - split-mode regular profile: error unless scope is kRegular\n> > - split-mode incognito profile: error unless scope is kIncognito*\n> \n> My idea behind it was that for a split-mode incognito profile regular scope is\n> automatically mapped to incognito.\n\nI am not familiar with the split-mode preferences - in particular how I can figure out whether a extension runs in split mode. Can you please provide the snippet you would like to see here?\nThanks.\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_prefs_scope.h\nFile chrome/browser/extensions/extension_prefs_scope.h (right):\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_prefs_scope.h#newcode9\nchrome/browser/extensions/extension_prefs_scope.h:9: namespace extension_prefs_scope {\nOn 2011/05/24 21:04:56, Matt Perry wrote:\n> This should not be a namespace. See this discussion on chromium-dev\n> http://groups.google.com/a/chromium.org/group/chromium-dev/browse_thread/thread/455a6ceb4e8807f8/a650ba672aebd2aa?lnk=gst&q=Namespace+usage+clarifications#a650ba672aebd2aa\n> \n> I'd say you can just make it a member of either the ExtensionPrefs or\n> ExtensionPrefValueMap class.\n\nBoth would be a layering violation.\n- ExtensionPrefValueMap is an implementation detail that should not be visible to consumers of ExtensionPrefs.\n- ExtensionPrefs on the other hand builds upon ExtensionPrefValueMap and therefore should not be required for ExtensionPrefValueMap.\n\nI have taken a note and propose to discuss this afterwards. After all it is just an implementation detail that is not visible to the outside.\n\nhttp://codereview.chromium.org/7065033/diff/1044/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/1044/chrome/browser/extensions/extension_preference_api.cc#newcode123\nchrome/browser/extensions/extension_preference_api.cc:123: NOTREACHED();\nOn 2011/05/25 00:43:00, Bernhard Bauer wrote:\n> In that case you should fail validation (EXTENSION_FUNCTION_VALIDATE style)\n> instead of DCHECKing.\n\nThe EXTENSION_FUNCTION_VALIDATE style validation has taken place already. The Extension API guarantees that only valid strings arrive here. If anything else arrives, this is a bug and should DCHECK.","disapproval":false,"date":"2011-05-25 11:31:45.661376","approval":false},{"sender":"bauerb@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_prefs_scope.h\nFile chrome/browser/extensions/extension_prefs_scope.h (right):\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_prefs_scope.h#newcode9\nchrome/browser/extensions/extension_prefs_scope.h:9: namespace extension_prefs_scope {\nOn 2011/05/25 11:31:45, battre wrote:\n> On 2011/05/24 21:04:56, Matt Perry wrote:\n> > This should not be a namespace. See this discussion on chromium-dev\n> >\n> http://groups.google.com/a/chromium.org/group/chromium-dev/browse_thread/thread/455a6ceb4e8807f8/a650ba672aebd2aa?lnk=gst&q=Namespace+usage+clarifications#a650ba672aebd2aa\n> > \n> > I'd say you can just make it a member of either the ExtensionPrefs or\n> > ExtensionPrefValueMap class.\n> \n> Both would be a layering violation.\n> - ExtensionPrefValueMap is an implementation detail that should not be visible\n> to consumers of ExtensionPrefs.\n> - ExtensionPrefs on the other hand builds upon ExtensionPrefValueMap and\n> therefore should not be required for ExtensionPrefValueMap.\n> \n> I have taken a note and propose to discuss this afterwards. After all it is just\n> an implementation detail that is not visible to the outside.\n\nHow about just calling it ExtensionPrefScope?\n\nhttp://codereview.chromium.org/7065033/diff/1044/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/1044/chrome/browser/extensions/extension_preference_api.cc#newcode123\nchrome/browser/extensions/extension_preference_api.cc:123: NOTREACHED();\nOn 2011/05/25 11:31:45, battre wrote:\n> On 2011/05/25 00:43:00, Bernhard Bauer wrote:\n> > In that case you should fail validation (EXTENSION_FUNCTION_VALIDATE style)\n> > instead of DCHECKing.\n> \n> The EXTENSION_FUNCTION_VALIDATE style validation has taken place already. The\n> Extension API guarantees that only valid strings arrive here. \n\nAs in, the Javascript API? That can be circumvented though (in which case we should kill the renderer). I don't think this case is any different from the other EXTENSION_FUNCTION_VALIDATE below, which also check stuff which has been checked renderer-side by the JSON validator.\n\n> If anything else\n> arrives, this is a bug and should DCHECK.","disapproval":false,"date":"2011-05-25 17:48:34.860617","approval":false},{"sender":"mpcomplete@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_preference_api.cc#newcode371\nchrome/browser/extensions/extension_preference_api.cc:371: if (incognito && !include_incognito()) {\nOn 2011/05/25 11:31:45, battre wrote:\n> On 2011/05/24 21:16:25, Bernhard Bauer wrote:\n> > On 2011/05/24 21:04:56, Matt Perry wrote:\n> > > Hmm.. what is the desired behavior for the preferences API in a split-mode\n> > > extension? include_incognito will always be false in that case.\n> > > \n> > > You probably want to restrict things this way:\n> > > - split-mode regular profile: error unless scope is kRegular\n> > > - split-mode incognito profile: error unless scope is kIncognito*\n> > \n> > My idea behind it was that for a split-mode incognito profile regular scope is\n> > automatically mapped to incognito.\n> \n> I am not familiar with the split-mode preferences - in particular how I can\n> figure out whether a extension runs in split mode. Can you please provide the\n> snippet you would like to see here?\n> Thanks.\n\nbool incognito = (scope == ...);\nif (incognito) {\n  // regular profiles can't access incognito unless\n  // include_incognito is true.\n  if (!profile()->IsOffTheRecord() && !include_incognito())\n    error = kIncognitoErrorMessage;\n} else {\n  // incognito profiles can't access regular mode ever. \n  // (they only exist in split mode).\n  if (profile()->IsOffTheRecord())\n    error = \"Incognito extension can't access regular settings.\";\n}\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_prefs_scope.h\nFile chrome/browser/extensions/extension_prefs_scope.h (right):\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_prefs_scope.h#newcode9\nchrome/browser/extensions/extension_prefs_scope.h:9: namespace extension_prefs_scope {\nOn 2011/05/25 11:31:45, battre wrote:\n> On 2011/05/24 21:04:56, Matt Perry wrote:\n> > This should not be a namespace. See this discussion on chromium-dev\n> >\n> http://groups.google.com/a/chromium.org/group/chromium-dev/browse_thread/thread/455a6ceb4e8807f8/a650ba672aebd2aa?lnk=gst&q=Namespace+usage+clarifications#a650ba672aebd2aa\n> > \n> > I'd say you can just make it a member of either the ExtensionPrefs or\n> > ExtensionPrefValueMap class.\n> \n> Both would be a layering violation.\n> - ExtensionPrefValueMap is an implementation detail that should not be visible\n> to consumers of ExtensionPrefs.\n> - ExtensionPrefs on the other hand builds upon ExtensionPrefValueMap and\n> therefore should not be required for ExtensionPrefValueMap.\n> \n> I have taken a note and propose to discuss this afterwards. After all it is just\n> an implementation detail that is not visible to the outside.\n\nPlease add a TODO(battre) in that case.\n\nhttp://codereview.chromium.org/7065033/diff/1044/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/1044/chrome/browser/extensions/extension_preference_api.cc#newcode123\nchrome/browser/extensions/extension_preference_api.cc:123: NOTREACHED();\nOn 2011/05/25 17:48:35, Bernhard Bauer wrote:\n> On 2011/05/25 11:31:45, battre wrote:\n> > On 2011/05/25 00:43:00, Bernhard Bauer wrote:\n> > > In that case you should fail validation (EXTENSION_FUNCTION_VALIDATE style)\n> > > instead of DCHECKing.\n> > \n> > The EXTENSION_FUNCTION_VALIDATE style validation has taken place already. The\n> > Extension API guarantees that only valid strings arrive here. \n> \n> As in, the Javascript API? That can be circumvented though (in which case we\n> should kill the renderer). I don't think this case is any different from the\n> other EXTENSION_FUNCTION_VALIDATE below, which also check stuff which has been\n> checked renderer-side by the JSON validator.\n\nAgreed. EXTENSION_FUNCTION_VALIDATE exists because a renderer could be compromised and send bad messages to the browser. You've only validated that it's a string. You should also validate the enum value.","disapproval":false,"date":"2011-05-25 18:40:42.260245","approval":false},{"sender":"battre@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_preference_api.cc#newcode371\nchrome/browser/extensions/extension_preference_api.cc:371: if (incognito && !include_incognito()) {\nOn 2011/05/25 18:40:42, Matt Perry wrote:\n> On 2011/05/25 11:31:45, battre wrote:\n> > On 2011/05/24 21:16:25, Bernhard Bauer wrote:\n> > > On 2011/05/24 21:04:56, Matt Perry wrote:\n> > > > Hmm.. what is the desired behavior for the preferences API in a split-mode\n> > > > extension? include_incognito will always be false in that case.\n> > > > \n> > > > You probably want to restrict things this way:\n> > > > - split-mode regular profile: error unless scope is kRegular\n> > > > - split-mode incognito profile: error unless scope is kIncognito*\n> > > \n> > > My idea behind it was that for a split-mode incognito profile regular scope\n> is\n> > > automatically mapped to incognito.\n> > \n> > I am not familiar with the split-mode preferences - in particular how I can\n> > figure out whether a extension runs in split mode. Can you please provide the\n> > snippet you would like to see here?\n> > Thanks.\n> \n> bool incognito = (scope == ...);\n> if (incognito) {\n>   // regular profiles can't access incognito unless\n>   // include_incognito is true.\n>   if (!profile()->IsOffTheRecord() && !include_incognito())\n>     error = kIncognitoErrorMessage;\n> } else {\n>   // incognito profiles can't access regular mode ever. \n>   // (they only exist in split mode).\n>   if (profile()->IsOffTheRecord())\n>     error = \"Incognito extension can't access regular settings.\";\n> }\n\nDone.\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_prefs_scope.h\nFile chrome/browser/extensions/extension_prefs_scope.h (right):\n\nhttp://codereview.chromium.org/7065033/diff/3003/chrome/browser/extensions/extension_prefs_scope.h#newcode9\nchrome/browser/extensions/extension_prefs_scope.h:9: namespace extension_prefs_scope {\nOn 2011/05/25 18:40:42, Matt Perry wrote:\n> On 2011/05/25 11:31:45, battre wrote:\n> > On 2011/05/24 21:04:56, Matt Perry wrote:\n> > > This should not be a namespace. See this discussion on chromium-dev\n> > >\n> >\n> http://groups.google.com/a/chromium.org/group/chromium-dev/browse_thread/thread/455a6ceb4e8807f8/a650ba672aebd2aa?lnk=gst&q=Namespace+usage+clarifications#a650ba672aebd2aa\n> > > \n> > > I'd say you can just make it a member of either the ExtensionPrefs or\n> > > ExtensionPrefValueMap class.\n> > \n> > Both would be a layering violation.\n> > - ExtensionPrefValueMap is an implementation detail that should not be visible\n> > to consumers of ExtensionPrefs.\n> > - ExtensionPrefs on the other hand builds upon ExtensionPrefValueMap and\n> > therefore should not be required for ExtensionPrefValueMap.\n> > \n> > I have taken a note and propose to discuss this afterwards. After all it is\n> just\n> > an implementation detail that is not visible to the outside.\n> \n> Please add a TODO(battre) in that case.\n\nDone.\n\nhttp://codereview.chromium.org/7065033/diff/1044/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/1044/chrome/browser/extensions/extension_preference_api.cc#newcode123\nchrome/browser/extensions/extension_preference_api.cc:123: NOTREACHED();\nOn 2011/05/25 18:40:42, Matt Perry wrote:\n> On 2011/05/25 17:48:35, Bernhard Bauer wrote:\n> > On 2011/05/25 11:31:45, battre wrote:\n> > > On 2011/05/25 00:43:00, Bernhard Bauer wrote:\n> > > > In that case you should fail validation (EXTENSION_FUNCTION_VALIDATE\n> style)\n> > > > instead of DCHECKing.\n> > > \n> > > The EXTENSION_FUNCTION_VALIDATE style validation has taken place already.\n> The\n> > > Extension API guarantees that only valid strings arrive here. \n> > \n> > As in, the Javascript API? That can be circumvented though (in which case we\n> > should kill the renderer). I don't think this case is any different from the\n> > other EXTENSION_FUNCTION_VALIDATE below, which also check stuff which has been\n> > checked renderer-side by the JSON validator.\n> \n> Agreed. EXTENSION_FUNCTION_VALIDATE exists because a renderer could be\n> compromised and send bad messages to the browser. You've only validated that\n> it's a string. You should also validate the enum value.\n\nDone.","disapproval":false,"date":"2011-05-25 19:47:43.963863","approval":false},{"sender":"mpcomplete@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"LGTM with tweaks below\n\nhttp://codereview.chromium.org/7065033/diff/11003/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/11003/chrome/browser/extensions/extension_preference_api.cc#newcode122\nchrome/browser/extensions/extension_preference_api.cc:122: NOTREACHED();\nremove the NOTREACHED. VALIDATE is enough\n\nhttp://codereview.chromium.org/7065033/diff/11003/chrome/browser/extensions/extension_preference_api.cc#newcode385\nchrome/browser/extensions/extension_preference_api.cc:385: error_ = \"Incognito extension can't access regular settings.\";\nFix the comments (full sentences), make this error message a constant, and reword it like \"Can't modify regular settings from an incognito context.\"\n\nhttp://codereview.chromium.org/7065033/diff/11003/chrome/browser/extensions/extension_preference_api.cc#newcode440\nchrome/browser/extensions/extension_preference_api.cc:440: // We don't check incognito permissions here, as an extension should be always\nline length","disapproval":false,"date":"2011-05-25 21:13:08.787348","approval":true},{"sender":"battre@chromium.org","recipients":["battre@chromium.org","mpcomplete@chromium.org","bauerb@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","erikkay@chromium.org","pam+watch@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/7065033/diff/11003/chrome/browser/extensions/extension_preference_api.cc\nFile chrome/browser/extensions/extension_preference_api.cc (right):\n\nhttp://codereview.chromium.org/7065033/diff/11003/chrome/browser/extensions/extension_preference_api.cc#newcode122\nchrome/browser/extensions/extension_preference_api.cc:122: NOTREACHED();\nOn 2011/05/25 21:13:08, Matt Perry wrote:\n> remove the NOTREACHED. VALIDATE is enough\n\nDone.\n\nhttp://codereview.chromium.org/7065033/diff/11003/chrome/browser/extensions/extension_preference_api.cc#newcode385\nchrome/browser/extensions/extension_preference_api.cc:385: error_ = \"Incognito extension can't access regular settings.\";\nOn 2011/05/25 21:13:08, Matt Perry wrote:\n> Fix the comments (full sentences), make this error message a constant, and\n> reword it like \"Can't modify regular settings from an incognito context.\"\n\nDone.\n\nhttp://codereview.chromium.org/7065033/diff/11003/chrome/browser/extensions/extension_preference_api.cc#newcode440\nchrome/browser/extensions/extension_preference_api.cc:440: // We don't check incognito permissions here, as an extension should be always\nOn 2011/05/25 21:13:08, Matt Perry wrote:\n> line length\n\nDone.","disapproval":false,"date":"2011-05-25 22:07:46.882669","approval":false}],"owner_email":"battre@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"battre","subject":"Support persistent incognito preferences","created":"2011-05-24 18:16:35.611324","patchsets":[1,2003,3003,1044,7002,11003,13003],"modified":"2011-05-25 22:16:16.694847","closed":true,"commit":false,"issue":7065033}