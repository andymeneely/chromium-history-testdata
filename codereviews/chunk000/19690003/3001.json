{"files":{"chrome/browser/extensions/activity_log/activity_log_unittest.cc":{"status":"M","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":8,"num_removed":9,"messages":[],"id":4016,"is_binary":false},"chrome/browser/extensions/activity_log/fullstream_ui_policy_unittest.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":26,"num_removed":11,"messages":[],"id":4019,"is_binary":false},"chrome/browser/extensions/activity_log/dom_actions.h":{"status":"D","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":67,"messages":[],"id":4006,"is_binary":false},"chrome/browser/extensions/activity_log/dom_actions.cc":{"status":"D","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":151,"messages":[],"id":4005,"is_binary":false},"chrome/browser/extensions/activity_log/activity_log.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":12,"num_removed":1,"messages":[{"author":"felt","author_email":"felt@chromium.org","text":"*does not wish","draft":false,"lineno":73,"date":"2013-07-23 17:07:17.603650","left":false},{"author":"felt","author_email":"felt@chromium.org","text":"I'm not entirely sure how I feel about forcing the callers to create Action objects. After mulling over it, I think it's OK, but I'm wondering if there are cases where the caller won't know the right ActionType to assign to it?\n\nAre there any changes that are dependent on this refactoring, or can you make a separate bug & TODO for it?","draft":false,"lineno":75,"date":"2013-07-23 17:07:17.604210","left":false},{"author":"felt","author_email":"felt@chromium.org","text":"I'm confused, maybe there is a word missing in this comment?","draft":false,"lineno":78,"date":"2013-07-23 17:07:17.604780","left":false},{"author":"mvrable","author_email":"mvrable@chromium.org","text":"On 2013/07/23 17:07:17, felt wrote:\n> *does not wish\n\nDone.","draft":false,"lineno":73,"date":"2013-07-23 18:16:56.450630","left":false},{"author":"mvrable","author_email":"mvrable@chromium.org","text":"On 2013/07/23 17:07:17, felt wrote:\n> I'm not entirely sure how I feel about forcing the callers to create Action\n> objects. After mulling over it, I think it's OK, but I'm wondering if there are\n> cases where the caller won't know the right ActionType to assign to it?\n\nI haven't noticed cases where the caller wouldn't know which ActionType to use, though it's possible I haven't come across them yet.\n\n> Are there any changes that are dependent on this refactoring, or can you make a\n> separate bug & TODO for it?\n\nThis is mostly independent, though passing Action objects directly makes it easier to change exactly what is logged, or even add new types of items that are logged, without having to change the intermediate function calls.\n\nThere's one change for incognito handling where this might be relevant.  When do we want to strip out the URLs for incognito tabs?  Do we want to leave the URL accessible purely in memory (for example, in the activity log developer console that is watching raw events before they are sent to the policy)?  An option is to log the raw URL in the Action object, but add a flag to mark it as an incognito URL.  When the policy processes the Action, it would scrub the URL at that point.  For this change, passing along an Action object is simpler than adding an extra boolean parameter or two at each level to track incognito state.  I am still undecided whether this is how we should handle incognito.","draft":false,"lineno":75,"date":"2013-07-23 18:16:56.450820","left":false},{"author":"mvrable","author_email":"mvrable@chromium.org","text":"On 2013/07/23 17:07:17, felt wrote:\n> I'm confused, maybe there is a word missing in this comment?\n\nReworded.  I understand the code a bit better since writing this comment, so I added more details.","draft":false,"lineno":78,"date":"2013-07-23 18:16:56.451020","left":false},{"author":"felt","author_email":"felt@chromium.org","text":"On 2013/07/23 18:16:56, mvrable wrote:\n> On 2013/07/23 17:07:17, felt wrote:\n> > I'm not entirely sure how I feel about forcing the callers to create Action\n> > objects. After mulling over it, I think it's OK, but I'm wondering if there\n> are\n> > cases where the caller won't know the right ActionType to assign to it?\n> \n> I haven't noticed cases where the caller wouldn't know which ActionType to use,\n> though it's possible I haven't come across them yet.\n\nWell, I'm worried about a few things, another one being URLs. Is the caller going to go through the args lists, looking to see if there are URLs, and then separate out the URL from the args list? It seems like that processing should happen here in a single place, rather than scattered throughout the code. Maybe we could offer convenience methods?\n\n> \n> > Are there any changes that are dependent on this refactoring, or can you make\n> a\n> > separate bug & TODO for it?\n> \n> This is mostly independent, though passing Action objects directly makes it\n> easier to change exactly what is logged, or even add new types of items that are\n> logged, without having to change the intermediate function calls.\n> \n> There's one change for incognito handling where this might be relevant.  When do\n> we want to strip out the URLs for incognito tabs?  Do we want to leave the URL\n> accessible purely in memory (for example, in the activity log developer console\n> that is watching raw events before they are sent to the policy)?  An option is\n> to log the raw URL in the Action object, but add a flag to mark it as an\n> incognito URL.  When the policy processes the Action, it would scrub the URL at\n> that point.  For this change, passing along an Action object is simpler than\n> adding an extra boolean parameter or two at each level to track incognito state.\n>  I am still undecided whether this is how we should handle incognito.\n\n","draft":false,"lineno":75,"date":"2013-07-23 19:06:33.146650","left":false},{"author":"mvrable","author_email":"mvrable@chromium.org","text":"On 2013/07/23 19:06:33, felt wrote:\n> Well, I'm worried about a few things, another one being URLs. Is the caller\n> going to go through the args lists, looking to see if there are URLs, and then\n> separate out the URL from the args list? It seems like that processing should\n> happen here in a single place, rather than scattered throughout the code. Maybe\n> we could offer convenience methods?\n\nThe current plan is to keep URL scanning through the argument list in the ActivityLog class (where tab ID lookups can happen on the UI thread)--but this can take an Action object as input and modify the object to extract the URLs.  If there are other common operations that are needed we can create convenience methods.","draft":false,"lineno":75,"date":"2013-07-23 19:17:55.191540","left":false},{"author":"felt","author_email":"felt@chromium.org","text":"On 2013/07/23 19:17:55, mvrable wrote:\n> On 2013/07/23 19:06:33, felt wrote:\n> > Well, I'm worried about a few things, another one being URLs. Is the caller\n> > going to go through the args lists, looking to see if there are URLs, and then\n> > separate out the URL from the args list? It seems like that processing should\n> > happen here in a single place, rather than scattered throughout the code.\n> Maybe\n> > we could offer convenience methods?\n> \n> The current plan is to keep URL scanning through the argument list in the\n> ActivityLog class (where tab ID lookups can happen on the UI thread)--but this\n> can take an Action object as input and modify the object to extract the URLs. \n> If there are other common operations that are needed we can create convenience\n> methods.\n\nAh, OK. I am happy with this plan, where the object will be modified by the ActivityLog class.","draft":false,"lineno":75,"date":"2013-07-23 19:22:33.499070","left":false},{"author":"felt","author_email":"felt@chromium.org","text":"> There's one change for incognito handling where this might be relevant.  When do\n> we want to strip out the URLs for incognito tabs?  Do we want to leave the URL\n> accessible purely in memory (for example, in the activity log developer console\n> that is watching raw events before they are sent to the policy)?  An option is\n> to log the raw URL in the Action object, but add a flag to mark it as an\n> incognito URL.  When the policy processes the Action, it would scrub the URL at\n> that point.  For this change, passing along an Action object is simpler than\n> adding an extra boolean parameter or two at each level to track incognito state.\n>  I am still undecided whether this is how we should handle incognito.\n\nWe want to send along incognito URLs to the API and database if & only if we're in testing mode. So they should be written to disk if we are in testing mode. (Does that answer your question?)","draft":false,"lineno":75,"date":"2013-07-23 19:22:33.499270","left":false},{"author":"mvrable","author_email":"mvrable@chromium.org","text":"On 2013/07/23 19:22:33, felt wrote:\n> We want to send along incognito URLs to the API and database if & only if we're\n> in testing mode. So they should be written to disk if we are in testing mode.\n> (Does that answer your question?)\n\nI think this answers my question.  I think we don't want to bother checking command-line flags at the point where the data is collected.  So, we'll want to record the full URL and also a flag that indicates whether it is incognito (the change I was proposing).\n\nThe policy can then discard incognito URLs if appropriate--the log-everything policy will keep the URLs, and the non-testing policy will blank them out.  Incognito scrubbing should be in a helper method, so it can also be applied to the data forwarded directly to the API.  Or perhaps the ActivityLog can do the scrubbing for both, depending on command-line flags.","draft":false,"lineno":75,"date":"2013-07-23 21:54:03.313200","left":false}],"id":4013,"is_binary":false},"chrome/browser/extensions/activity_log/stream_noargs_ui_policy_unittest.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":26,"num_removed":11,"messages":[],"id":4022,"is_binary":false},"chrome/browser/extensions/activity_log/activity_log.cc":{"status":"M","num_chunks":6,"no_base_file":false,"property_changes":"","num_added":69,"num_removed":119,"messages":[],"id":4012,"is_binary":false},"chrome/browser/extensions/activity_log/stream_noargs_ui_policy.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":5,"messages":[],"id":4021,"is_binary":false},"chrome/browser/extensions/activity_log/api_actions.h":{"status":"D","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":78,"messages":[],"id":4002,"is_binary":false},"chrome/browser/extensions/activity_log/activity_log_browsertest.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":3,"messages":[],"id":4014,"is_binary":false},"chrome/browser/extensions/extension_function_dispatcher.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":1,"messages":[],"id":4024,"is_binary":false},"chrome/browser/extensions/activity_log/activity_database.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":38,"num_removed":36,"messages":[{"author":"felt","author_email":"felt@chromium.org","text":"good call :)","draft":false,"lineno":160,"date":"2013-07-23 17:07:17.603300","left":false},{"author":"mvrable","author_email":"mvrable@chromium.org","text":"On 2013/07/23 17:07:17, felt wrote:\n> good call :)\n\nTo be fair, this wasn't possible before since the records were spread across three independent tables.","draft":false,"lineno":160,"date":"2013-07-23 18:16:56.450450","left":false}],"id":4009,"is_binary":false},"chrome/browser/renderer_host/chrome_render_message_filter.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":2,"messages":[],"id":4025,"is_binary":false},"chrome/browser/extensions/activity_log/fullstream_ui_policy.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":9,"messages":[],"id":4018,"is_binary":false},"chrome/chrome_browser_extensions.gypi":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":6,"messages":[],"id":4026,"is_binary":false},"chrome/browser/extensions/activity_log/fullstream_ui_policy.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":9,"num_removed":111,"messages":[],"id":4017,"is_binary":false},"chrome/browser/extensions/activity_log/api_actions.cc":{"status":"D","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":257,"messages":[],"id":4001,"is_binary":false},"chrome/browser/extensions/activity_log/blocked_actions.h":{"status":"D","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":64,"messages":[],"id":4004,"is_binary":false},"chrome/browser/extensions/activity_log/activity_actions.h":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":98,"num_removed":40,"messages":[{"author":"felt","author_email":"felt@chromium.org","text":"Why are these all setters instead of constructors? Is this to handle optional fields?\n\nOne benefit of putting them in a constructor is that you could check whether the correct set of non-optional fields have been specified for the given action type. (And then DCHECK if it's a mismatch.)","draft":false,"lineno":57,"date":"2013-07-23 17:07:17.602980","left":false},{"author":"mvrable","author_email":"mvrable@chromium.org","text":"On 2013/07/23 17:07:17, felt wrote:\n> Why are these all setters instead of constructors? Is this to handle optional\n> fields?\n> \n> One benefit of putting them in a constructor is that you could check whether the\n> correct set of non-optional fields have been specified for the given action\n> type. (And then DCHECK if it's a mismatch.)\n\nMostly to handle optional fields and to avoid having constructors with very long argument lists.\n\nI was thinking of using the Action class for objects loaded by a policy from the database; because data might have been stripped out while saving (for space or privacy reasons), we need to leave many fields as optional.  That limits the amount of checking we can do, unless I change the design.\n\n(Looking back, api_name is something that probably could be set in the constructor, though--would that be a good change to make?)","draft":false,"lineno":57,"date":"2013-07-23 18:16:56.450240","left":false},{"author":"felt","author_email":"felt@chromium.org","text":"api_name is sometimes null but usually not. Maybe add it to the constructor just out of convenience?\n\nYou have a good point about loading from the database, so this does make sense.\n\nOn 2013/07/23 18:16:56, mvrable wrote:\n> On 2013/07/23 17:07:17, felt wrote:\n> > Why are these all setters instead of constructors? Is this to handle optional\n> > fields?\n> > \n> > One benefit of putting them in a constructor is that you could check whether\n> the\n> > correct set of non-optional fields have been specified for the given action\n> > type. (And then DCHECK if it's a mismatch.)\n> \n> Mostly to handle optional fields and to avoid having constructors with very long\n> argument lists.\n> \n> I was thinking of using the Action class for objects loaded by a policy from the\n> database; because data might have been stripped out while saving (for space or\n> privacy reasons), we need to leave many fields as optional.  That limits the\n> amount of checking we can do, unless I change the design.\n> \n> (Looking back, api_name is something that probably could be set in the\n> constructor, though--would that be a good change to make?)\n\n","draft":false,"lineno":57,"date":"2013-07-23 19:06:33.146230","left":false},{"author":"mvrable","author_email":"mvrable@chromium.org","text":"On 2013/07/23 19:06:33, felt wrote:\n> api_name is sometimes null but usually not. Maybe add it to the constructor just\n> out of convenience?\n\nI'll add the API name to the constructor--patch will be coming up after I've had a chance to make the changes everywhere.","draft":false,"lineno":57,"date":"2013-07-23 19:17:55.191230","left":false}],"id":4008,"is_binary":false},"chrome/browser/extensions/activity_log/activity_log_policy.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":7,"messages":[],"id":4015,"is_binary":false},"chrome/browser/extensions/activity_log/stream_noargs_ui_policy.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":9,"num_removed":8,"messages":[],"id":4020,"is_binary":false},"chrome/browser/extensions/activity_log/activity_database.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":3,"messages":[],"id":4010,"is_binary":false},"chrome/browser/extensions/activity_log/blocked_actions.cc":{"status":"D","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":98,"messages":[],"id":4003,"is_binary":false},"chrome/browser/extensions/activity_log/activity_actions.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":311,"num_removed":31,"messages":[],"id":4007,"is_binary":false},"chrome/browser/extensions/api/activity_log_private/activity_log_private_api_unittest.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":2,"messages":[],"id":4023,"is_binary":false},"chrome/browser/extensions/activity_log/activity_database_unittest.cc":{"status":"M","num_chunks":10,"no_base_file":false,"property_changes":"","num_added":85,"num_removed":209,"messages":[],"id":4011,"is_binary":false}},"owner_email":"mvrable@chromium.org","owner":"mvrable","message":"Rebase","try_job_results":[],"created":"2013-07-18 22:43:44.370610","url":null,"num_comments":17,"modified":"2013-07-23 21:54:03.350790","patchset":3001,"issue":19690003}