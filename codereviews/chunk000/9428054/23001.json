{"files":{"chrome/browser/sync/glue/frontend_data_type_controller_unittest.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":1,"messages":[],"id":23009,"is_binary":false},"chrome/browser/sync/glue/data_type_controller.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":12,"num_removed":0,"messages":[{"author":"akalin","author_email":"akalin@chromium.org","text":"can you make these functions protected instead?","draft":false,"lineno":96,"date":"2012-03-01 21:11:07.384393","left":false},{"author":"akalin","author_email":"akalin@chromium.org","text":"How about just have a single pure virtual method called\nReportAndHandleUnrecoverableError().  Also update the comment.","draft":false,"lineno":103,"date":"2012-03-01 21:11:07.384758","left":false},{"author":"lipalani1","author_email":"lipalani@chromium.org","text":"On 2012/03/01 21:11:07, akalin wrote:\n> can you make these functions protected instead?\n\nDone.","draft":false,"lineno":96,"date":"2012-03-03 00:20:47.321600","left":false},{"author":"lipalani1","author_email":"lipalani@chromium.org","text":"When i coded this up RecoredUnrecoverableError was implemented in each dervived class.  Also we did not want each derived class to call \"ChromeSendErrorReport\".\n\nNow I have moved RecordUrecoverableError to DTC and made it private and non virtual.\n\nThe new function is virtual function.(virtual because of unit tests) and protected. Base classes call it when there is an UE.\nOn 2012/03/01 21:11:07, akalin wrote:\n> How about just have a single pure virtual method called\n> ReportAndHandleUnrecoverableError().  Also update the comment.\n\n","draft":false,"lineno":103,"date":"2012-03-03 00:20:47.321768","left":false}],"id":23003,"is_binary":false},"chrome/browser/sync/glue/data_type_manager_impl_unittest.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":11,"num_removed":0,"messages":[],"id":23005,"is_binary":false},"chrome/browser/sync/glue/non_frontend_data_type_controller_mock.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":0,"messages":[],"id":23014,"is_binary":false},"chrome/browser/sync/glue/non_frontend_data_type_controller.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":7,"messages":[],"id":23013,"is_binary":false},"chrome/browser/sync/glue/non_frontend_data_type_controller.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":8,"num_removed":2,"messages":[],"id":23012,"is_binary":false},"chrome/chrome_browser.gypi":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":0,"messages":[],"id":23016,"is_binary":false},"chrome/browser/sync/glue/new_non_frontend_data_type_controller_mock.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":0,"messages":[],"id":23010,"is_binary":false},"chrome/browser/sync/glue/non_frontend_data_type_controller_unittest.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":9,"num_removed":1,"messages":[],"id":23015,"is_binary":false},"chrome/browser/sync/glue/data_type_manager_impl.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":0,"messages":[{"author":"akalin","author_email":"akalin@chromium.org","text":"maybe make this the first thing in the block","draft":false,"lineno":309,"date":"2012-03-01 21:11:07.385068","left":false},{"author":"lipalani1","author_email":"lipalani@chromium.org","text":"On 2012/03/01 21:11:07, akalin wrote:\n> maybe make this the first thing in the block\n\nDone.","draft":false,"lineno":309,"date":"2012-03-03 00:20:47.321923","left":false}],"id":23004,"is_binary":false},"chrome/browser/sync/glue/frontend_data_type_controller_mock.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":1,"messages":[],"id":23008,"is_binary":false},"chrome/browser/sync/glue/data_type_controller.cc":{"status":"A","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":17,"num_removed":0,"messages":[],"id":23002,"is_binary":false},"chrome/browser/sync/glue/new_non_frontend_data_type_controller_unittest.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":9,"num_removed":1,"messages":[],"id":23011,"is_binary":false},"chrome/browser/sync/glue/frontend_data_type_controller.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":2,"messages":[{"author":"akalin","author_email":"akalin@chromium.org","text":"it looks like your checkout is outdated?  There should be a 'RecordUnrecoverableError' implementation here","draft":false,"lineno":221,"date":"2012-03-01 21:11:07.385391","left":false},{"author":"lipalani1","author_email":"lipalani@chromium.org","text":"On 2012/03/01 21:11:07, akalin wrote:\n> it looks like your checkout is outdated?  There should be a\n> 'RecordUnrecoverableError' implementation here\n\nDone.","draft":false,"lineno":221,"date":"2012-03-03 00:20:47.322089","left":false}],"id":23006,"is_binary":false},"chrome/browser/sync/glue/frontend_data_type_controller.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":6,"messages":[],"id":23007,"is_binary":false}},"owner_email":"lipalani@chromium.org","owner":"lipalani1","message":"For review.","try_job_results":[],"created":"2012-03-01 02:11:33.727330","url":null,"num_comments":8,"modified":"2012-03-03 00:20:47.365903","patchset":23001,"issue":9428054}