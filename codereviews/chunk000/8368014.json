{"description":"base::Bind: Convert CloudPrintProxyService.\n\nBUG=none\nTEST=none\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=107235","cc":["chromium-reviews@chromium.org","phajdan.jr@chromium.org","brettw-cc@chromium.org"],"reviewers":["csilv@chromium.org","willchan@chromium.org","ajwong@chromium.org","darin@chromium.org","akalin@chromium.org","hclam@chromium.org"],"messages":[{"sender":"jhawkins@chromium.org","recipients":["jhawkins@chromium.org","csilv@chromium.org","willchan@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","brettw-cc@chromium.org"],"text":"+csilv for review\n+willchan for Callback::Equals move to public.","disapproval":false,"date":"2011-10-21 23:55:01.961186","approval":false},{"sender":"csilv@chromium.org","recipients":["jhawkins@chromium.org","csilv@chromium.org","willchan@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","brettw-cc@chromium.org"],"text":"lgtm","disapproval":false,"date":"2011-10-22 00:24:27.932164","approval":true},{"sender":"willchan@chromium.org","recipients":["jhawkins@chromium.org","csilv@chromium.org","willchan@chromium.org","ajwong@chromium.org","darin@chromium.org","akalin@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","brettw-cc@chromium.org"],"text":"+other callback folks since this is an API change to Callback.\n\nI'm a bit hesitant to make Equals() public because I'm not sure I see any other use cases for it. I'm pretty sure the code can be written not to rely on it. The code that uses Equals() here is being a bit weird. I'd rather you just change the callsite instead.\n\nEquality semantics for callbacks are weird. If the function pointer is the same, but it came from two separate Bind() calls, should the Callbacks be Equal()? What if they have bound arguments? Those bound arguments may not have operator== defined. Currently the semantics are just do the Callback objects share the same internal storage. That's not an obvious definition for Equals(). I'd rather not provide this unless we have some more motivating use cases. Indeed, C++11 and Boost have made the same choice, not to expose operator== or any other equality function in their function objects:\nhttp://stackoverflow.com/questions/3629835/why-is-stdfunction-not-equality-comparable\nhttp://www.boost.org/doc/libs/1_47_0/doc/html/function/faq.html#id1381839","disapproval":false,"date":"2011-10-25 16:44:05.869580","approval":false},{"sender":"akalin@chromium.org","recipients":["jhawkins@chromium.org","csilv@chromium.org","willchan@chromium.org","ajwong@chromium.org","darin@chromium.org","akalin@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","brettw-cc@chromium.org"],"text":"http://codereview.chromium.org/8368014/diff/1/chrome/browser/service/service_process_control.cc\nFile chrome/browser/service/service_process_control.cc (right):\n\nhttp://codereview.chromium.org/8368014/diff/1/chrome/browser/service/service_process_control.cc#newcode91\nchrome/browser/service/service_process_control.cc:91: if (success_task.Equals(failure_task)) {\nyeah, I don't know if this is really needed now?  Presumably the comparison was done to avoid deleting the same task twice.","disapproval":false,"date":"2011-10-25 17:31:25.194220","approval":false},{"sender":"jhawkins@chromium.org","recipients":["jhawkins@chromium.org","csilv@chromium.org","willchan@chromium.org","ajwong@chromium.org","darin@chromium.org","akalin@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","brettw-cc@chromium.org"],"text":"On 2011/10/25 17:31:25, akalin wrote:\n> http://codereview.chromium.org/8368014/diff/1/chrome/browser/service/service_process_control.cc\n> File chrome/browser/service/service_process_control.cc (right):\n> \n> http://codereview.chromium.org/8368014/diff/1/chrome/browser/service/service_process_control.cc#newcode91\n> chrome/browser/service/service_process_control.cc:91: if\n> (success_task.Equals(failure_task)) {\n> yeah, I don't know if this is really needed now?  Presumably the comparison was\n> done to avoid deleting the same task twice.\n\nSounds good; I'll rework it.  Thanks for the comments.","disapproval":false,"date":"2011-10-25 17:35:54.702530","approval":false},{"sender":"jhawkins@chromium.org","recipients":["jhawkins@chromium.org","csilv@chromium.org","willchan@chromium.org","ajwong@chromium.org","darin@chromium.org","akalin@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","brettw-cc@chromium.org"],"text":"On 2011/10/25 17:35:54, James Hawkins wrote:\n> On 2011/10/25 17:31:25, akalin wrote:\n> >\n> http://codereview.chromium.org/8368014/diff/1/chrome/browser/service/service_process_control.cc\n> > File chrome/browser/service/service_process_control.cc (right):\n> > \n> >\n> http://codereview.chromium.org/8368014/diff/1/chrome/browser/service/service_process_control.cc#newcode91\n> > chrome/browser/service/service_process_control.cc:91: if\n> > (success_task.Equals(failure_task)) {\n> > yeah, I don't know if this is really needed now?  Presumably the comparison\n> was\n> > done to avoid deleting the same task twice.\n> \n> Sounds good; I'll rework it.  Thanks for the comments.\n\nActually, I just noticed: base::Callback already exposes Equals().  Still opposed to the use of it in this CL?","disapproval":false,"date":"2011-10-25 18:31:52.681493","approval":false},{"sender":"jhawkins@chromium.org","recipients":["jhawkins@chromium.org","csilv@chromium.org","willchan@chromium.org","ajwong@chromium.org","darin@chromium.org","akalin@chromium.org","hclam@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","brettw-cc@chromium.org"],"text":"+hclam\n\nReview comments addressed.","disapproval":false,"date":"2011-10-25 20:10:03.001937","approval":false},{"sender":"jhawkins@chromium.org","recipients":["jhawkins@chromium.org","csilv@chromium.org","willchan@chromium.org","ajwong@chromium.org","darin@chromium.org","akalin@chromium.org","hclam@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","brettw-cc@chromium.org"],"text":"Ping, anyone?","disapproval":false,"date":"2011-10-25 22:58:53.441882","approval":false},{"sender":"willchan@chromium.org","recipients":["jhawkins@chromium.org","csilv@chromium.org","willchan@chromium.org","ajwong@chromium.org","darin@chromium.org","akalin@chromium.org","hclam@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","brettw-cc@chromium.org"],"text":"LGTM","disapproval":false,"date":"2011-10-25 23:07:25.487201","approval":true},{"sender":"csilv@chromium.org","recipients":["jhawkins@chromium.org","csilv@chromium.org","willchan@chromium.org","ajwong@chromium.org","darin@chromium.org","akalin@chromium.org","hclam@chromium.org","chromium-reviews@chromium.org","phajdan.jr@chromium.org","brettw-cc@chromium.org"],"text":"http://codereview.chromium.org/8368014/diff/6001/chrome/browser/service/service_process_control.cc\nFile chrome/browser/service/service_process_control.cc (right):\n\nhttp://codereview.chromium.org/8368014/diff/6001/chrome/browser/service/service_process_control.cc#newcode71\nchrome/browser/service/service_process_control.cc:71: connect_failure_tasks_.clear();\nThese lines appear to be redundant.  In the preceeding segment, the swap() will empty one, then clear() will empty the other.","disapproval":false,"date":"2011-10-25 23:20:38.568926","approval":false}],"owner_email":"jhawkins@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"James Hawkins","subject":"base::Bind: Convert CloudPrintProxyService.","created":"2011-10-21 23:54:11.027278","patchsets":[1,6001],"modified":"2011-10-25 23:20:38.707375","closed":true,"commit":false,"issue":8368014}