{"description":"First stab at a layout tests flakiness/speed dashboard.\nThis isn't functional yet, but I want to get this reviewed\nand in the tree so I can do the rest incrementally.\n\nThis works by having the bots generate JSON that is\nthen red into a static HTML file that generates\nthe dashboard from the JSON.\n\nI've tried to make this generic, so we should be able\nto use the same HTML file for our other test types\n(e.g. UI tests) as well once this is functional by\njust having the bots that run those tests generate\nthe JSON files and copy them to the right place.\n\nAll the work that needs doing to get this 100% functional\nis listed as a TODO at the top of flakiness_dashboard.html.\n\nMost of what's left is buildbot integration (i.e. copy\nfiles to the right place on the bot). \n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=22505","cc":["chromium-reviews@googlegroups.com","darin@chromium.org","dglazkov@chromium.org","victorw@chromium.org","phajdan.jr@chromium.org"],"reviewers":["tony@chromium.org","arv@chromium.org"],"messages":[{"sender":"ojan@chromium.org","recipients":["ojan@chromium.org","tony@chromium.org","arv@chromium.org","chromium-reviews@googlegroups.com","darin@chromium.org","dglazkov@chromium.org","victorw@chromium.org","phajdan.jr@chromium.org"],"text":"Arv, can you review the JS? Tony, can you review the Python?","disapproval":false,"date":"2009-07-15 00:46:44.893237","approval":false},{"sender":"tony@chromium.org","recipients":["ojan@chromium.org","tony@chromium.org","arv@chromium.org","chromium-reviews@googlegroups.com","darin@chromium.org","dglazkov@chromium.org","victorw@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/149656/diff/1/3\nFile webkit/tools/layout_tests/layout_package/json_results_generator.py (right):\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode1\nLine 1: #!/bin/env/python\nYou shouldn't need the #! line for library classes.\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode20\nLine 20: build_number, results_file_path):\nNit: Can you document these args?\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode28\nLine 28: # Get the results for the results.json file\nNit: Instead of a comment, use a docstring (i.e., \"\"\"Get the results for the results.json file.\"\"\").\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode30\nLine 30: all_failing_tests = {}\nIt looks like this could just be a set that can be initialized from the self._failures list.\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode33\nLine 33: failures_for_json[test] = {\"time\": 0}\nSo for each test, you want to keep track of the result and time.  Can you make a small class that has a result and time?  You can even declare the class in the method.\n\nclass ResultAndTime:\n  time = 0\n  result = \"N\"\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode103\nLine 103: for failure in self._failures[test]:\nHere's a simplification:\nfailures = [failure.__class__ for failure in self._failures[test]]\n\nif test_failures.FailureCrash in failures:\n  return \"C\"\nelif test_failures.FailureTimeout in failures:\n  return \"T\"\n...\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode166\nLine 166: for time in times:\nMaybe just get the max out of times and compare to 1sec?\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode167\nLine 167: if (time >= 1):\nShould this 1 be a constant?\n\nhttp://codereview.chromium.org/149656/diff/1/4\nFile webkit/tools/layout_tests/layout_package/test_expectations.py (right):\n\nhttp://codereview.chromium.org/149656/diff/1/4#newcode438\nLine 438: { 'modifiers': options, 'expectations': expectations })\nCan you make this into a small class too?\n\nhttp://codereview.chromium.org/149656/diff/1/4#newcode449\nLine 449: optionsString = None\noptions_string\n\nhttp://codereview.chromium.org/149656/diff/1/4#newcode450\nLine 450: expectationsString = None\nexpectations_string\n\nhttp://codereview.chromium.org/149656/diff/1/2\nFile webkit/tools/layout_tests/run_webkit_tests.py (right):\n\nhttp://codereview.chromium.org/149656/diff/1/2#newcode582\nLine 582: self._WriteJSONFiles(failures, individual_test_timings);\nIs this pretty quick?  I.e., will it be annoying to run this on developer machines or should it be behind a flag that the buildbot uses?\n\nhttp://codereview.chromium.org/149656/diff/1/2#newcode594\nLine 594: # Write the same data to a log file.\nDoes this get run?  It looks like you moved it after the return statement.\n\nhttp://codereview.chromium.org/149656/diff/1/2#newcode616\nLine 616: # TODO: get these from the bot\nNit: TODO(ojan)\n\nhttp://codereview.chromium.org/149656/diff/1/2#newcode617\nLine 617: builderName = \"WebKitBuilder\"\nbuilder_name\n\nhttp://codereview.chromium.org/149656/diff/1/2#newcode618\nLine 618: buildNumber = \"12346\"\nbuild_number","disapproval":false,"date":"2009-07-15 01:19:15.463018","approval":false},{"sender":"arv@chromium.org","recipients":["ojan@chromium.org","tony@chromium.org","arv@chromium.org","chromium-reviews@googlegroups.com","darin@chromium.org","dglazkov@chromium.org","victorw@chromium.org","phajdan.jr@chromium.org"],"text":"I only looked at the html file.\n\nI feel like this could use some more comments. A fileoverview would have been useful.\n\nOtherwise, mostly style nits\n\nhttp://codereview.chromium.org/149656/diff/1/5\nFile webkit/tools/layout_tests/flakiness_dashboard.html (right):\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode122\nLine 122: var BUILDS = {};\nThis does not look very constant to me. Consider renaming this or init it here.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode175\nLine 175: var currentState = {builder: null, sortFailures:'test', sortPasses:'test',\nadd space after :\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode178\nLine 178: var old_location;\noldLocation\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode182\nLine 182: function createResultsObjectForTest(builderName, test) {\nbuilderName is not being used. Is this a bug?\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode205\nLine 205: matchingElement = element\nsemicolon\n\nWhy not return element here?\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode276\nLine 276: if (test.indexOf(path) != -1 &&\nYou might as well use stringContains here as well\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode341\nLine 341: for (var i = 0; i < times.length; i++) {\nHow about Math.max.apply(null, times)\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode387\nLine 387: // TODO: replace with dean crazy hack.\nWhat is dean crazy hack?\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode389\nLine 389: for (var i = 0; i < numBuilds; i++) {\nvar passingResults = Array(numBuilds + 1).join('P');\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode399\nLine 399: function getHTMLForIndividualTest(builderName, testPath) {\ngetHtmlForIndividualTest? Either way is fine.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode413\nLine 413: html += '\" onclick=\\'loadBuilderPageForBuildNumber(\"' + builderName +\nI don't think it makes it more readable to use += here. Just continue the previous statement\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode422\nLine 422: html += getTableHeaders(sort, order);\nsame here\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode449\nLine 449: for (var i = 0; i < TABLE_HEADERS.length; i++) {\nfix indentation\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode476\nLine 476: ' href=\\'javascript:setState(\"builder\", \"' + builder + '\")\\'>' +\nWhy not onclick?\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode537\nLine 537: while (target && target.tagName != 'TABLE')\nmissing curly braces\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode607\nLine 607: function onLoad() {\nYuk :'(\n\nTODO: Use hashchange event when it is supported. https://bugs.webkit.org/show_bug.cgi?id=21605\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode617\nLine 617: <body onload=\"onLoad()\"></body>\nwindow.onload = onLoad;","disapproval":false,"date":"2009-07-15 04:26:35.365374","approval":false},{"sender":"ojan@chromium.org","recipients":["ojan@chromium.org","tony@chromium.org","arv@chromium.org","chromium-reviews@googlegroups.com","darin@chromium.org","dglazkov@chromium.org","victorw@chromium.org","phajdan.jr@chromium.org"],"text":"All comments done. Wrote a fileoverview for the HTML file.\n\nSorry I took so long to get back to you on this one. I really do hope to check this in next week.\n\nhttp://codereview.chromium.org/149656/diff/1/5\nFile webkit/tools/layout_tests/flakiness_dashboard.html (right):\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode122\nLine 122: var BUILDS = {};\nOn 2009/07/15 04:26:35, arv wrote:\n> This does not look very constant to me. Consider renaming this or init it here.\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode175\nLine 175: var currentState = {builder: null, sortFailures:'test', sortPasses:'test',\nOn 2009/07/15 04:26:35, arv wrote:\n> add space after :\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode178\nLine 178: var old_location;\nOn 2009/07/15 04:26:35, arv wrote:\n> oldLocation\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode182\nLine 182: function createResultsObjectForTest(builderName, test) {\nOn 2009/07/15 04:26:35, arv wrote:\n> builderName is not being used. Is this a bug?\n\nJust forgot to remove it when doing some cleanup. Fixed.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode205\nLine 205: matchingElement = element\nOn 2009/07/15 04:26:35, arv wrote:\n> semicolon\n> \n> Why not return element here?\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode276\nLine 276: if (test.indexOf(path) != -1 &&\nOn 2009/07/15 04:26:35, arv wrote:\n> You might as well use stringContains here as well\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode341\nLine 341: for (var i = 0; i < times.length; i++) {\nOn 2009/07/15 04:26:35, arv wrote:\n> How about Math.max.apply(null, times)\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode387\nLine 387: // TODO: replace with dean crazy hack.\nOn 2009/07/15 04:26:35, arv wrote:\n> What is dean crazy hack?\n\nHeh. You have it below.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode389\nLine 389: for (var i = 0; i < numBuilds; i++) {\nOn 2009/07/15 04:26:35, arv wrote:\n> var passingResults = Array(numBuilds + 1).join('P');\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode399\nLine 399: function getHTMLForIndividualTest(builderName, testPath) {\nOn 2009/07/15 04:26:35, arv wrote:\n> getHtmlForIndividualTest? Either way is fine.\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode413\nLine 413: html += '\" onclick=\\'loadBuilderPageForBuildNumber(\"' + builderName +\nOn 2009/07/15 04:26:35, arv wrote:\n> I don't think it makes it more readable to use += here. Just continue the\n> previous statement\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode422\nLine 422: html += getTableHeaders(sort, order);\nOn 2009/07/15 04:26:35, arv wrote:\n> same here\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode449\nLine 449: for (var i = 0; i < TABLE_HEADERS.length; i++) {\nOn 2009/07/15 04:26:35, arv wrote:\n> fix indentation\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode476\nLine 476: ' href=\\'javascript:setState(\"builder\", \"' + builder + '\")\\'>' +\nOn 2009/07/15 04:26:35, arv wrote:\n> Why not onclick?\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode537\nLine 537: while (target && target.tagName != 'TABLE')\nOn 2009/07/15 04:26:35, arv wrote:\n> missing curly braces\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode607\nLine 607: function onLoad() {\nOn 2009/07/15 04:26:35, arv wrote:\n> Yuk :'(\n> \n> TODO: Use hashchange event when it is supported.\n> https://bugs.webkit.org/show_bug.cgi?id=21605\n\nAdded TODO\n\nhttp://codereview.chromium.org/149656/diff/1/5#newcode617\nLine 617: <body onload=\"onLoad()\"></body>\nOn 2009/07/15 04:26:35, arv wrote:\n> window.onload = onLoad;\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/3\nFile webkit/tools/layout_tests/layout_package/json_results_generator.py (right):\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode1\nLine 1: #!/bin/env/python\nOn 2009/07/15 01:19:15, tony wrote:\n> You shouldn't need the #! line for library classes.\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode20\nLine 20: build_number, results_file_path):\nOn 2009/07/15 01:19:15, tony wrote:\n> Nit: Can you document these args?\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode28\nLine 28: # Get the results for the results.json file\nOn 2009/07/15 01:19:15, tony wrote:\n> Nit: Instead of a comment, use a docstring (i.e., \"\"\"Get the results for the\n> results.json file.\"\"\").\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode30\nLine 30: all_failing_tests = {}\nOn 2009/07/15 01:19:15, tony wrote:\n> It looks like this could just be a set that can be initialized from the\n> self._failures list.\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode33\nLine 33: failures_for_json[test] = {\"time\": 0}\nOn 2009/07/15 01:19:15, tony wrote:\n> So for each test, you want to keep track of the result and time.  Can you make a\n> small class that has a result and time?  You can even declare the class in the\n> method.\n> \n> class ResultAndTime:\n>   time = 0\n>   result = \"N\"\n> \n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode103\nLine 103: for failure in self._failures[test]:\nOn 2009/07/15 01:19:15, tony wrote:\n> Here's a simplification:\n> failures = [failure.__class__ for failure in self._failures[test]]\n> \n> if test_failures.FailureCrash in failures:\n>   return \"C\"\n> elif test_failures.FailureTimeout in failures:\n>   return \"T\"\n> ...\n\nThat's much cleaner. Thx.\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode166\nLine 166: for time in times:\nOn 2009/07/15 01:19:15, tony wrote:\n> Maybe just get the max out of times and compare to 1sec?\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/3#newcode167\nLine 167: if (time >= 1):\nOn 2009/07/15 01:19:15, tony wrote:\n> Should this 1 be a constant?\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/4\nFile webkit/tools/layout_tests/layout_package/test_expectations.py (right):\n\nhttp://codereview.chromium.org/149656/diff/1/4#newcode438\nLine 438: { 'modifiers': options, 'expectations': expectations })\nOn 2009/07/15 01:19:15, tony wrote:\n> Can you make this into a small class too?\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/4#newcode449\nLine 449: optionsString = None\nOn 2009/07/15 01:19:15, tony wrote:\n> options_string\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/4#newcode450\nLine 450: expectationsString = None\nOn 2009/07/15 01:19:15, tony wrote:\n> expectations_string\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/2\nFile webkit/tools/layout_tests/run_webkit_tests.py (right):\n\nhttp://codereview.chromium.org/149656/diff/1/2#newcode582\nLine 582: self._WriteJSONFiles(failures, individual_test_timings);\nOn 2009/07/15 01:19:15, tony wrote:\n> Is this pretty quick?  I.e., will it be annoying to run this on developer\n> machines or should it be behind a flag that the buildbot uses?\n\nIt took half a second on my Mac Book Pro when running the entire test suite. I put it behind the verbose flag.\n\nhttp://codereview.chromium.org/149656/diff/1/2#newcode594\nLine 594: # Write the same data to a log file.\nOn 2009/07/15 01:19:15, tony wrote:\n> Does this get run?  It looks like you moved it after the return statement.\n\nUgh. That must have been bad merge. sorry.\n\nhttp://codereview.chromium.org/149656/diff/1/2#newcode616\nLine 616: # TODO: get these from the bot\nOn 2009/07/15 01:19:15, tony wrote:\n> Nit: TODO(ojan)\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/2#newcode617\nLine 617: builderName = \"WebKitBuilder\"\nOn 2009/07/15 01:19:15, tony wrote:\n> builder_name\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/1/2#newcode618\nLine 618: buildNumber = \"12346\"\nOn 2009/07/15 01:19:15, tony wrote:\n> build_number\n\nDone.","disapproval":false,"date":"2009-08-01 20:12:21.651060","approval":false},{"sender":"tony@chromium.org","recipients":["ojan@chromium.org","tony@chromium.org","arv@chromium.org","chromium-reviews@googlegroups.com","darin@chromium.org","dglazkov@chromium.org","victorw@chromium.org","phajdan.jr@chromium.org"],"text":"Just some small nits left.\n\nhttp://codereview.chromium.org/149656/diff/2005/3008\nFile webkit/tools/layout_tests/layout_package/json_results_generator.py (right):\n\nhttp://codereview.chromium.org/149656/diff/2005/3008#newcode45\nLine 45: # TODO: get relative path here\nNit: TODO(ojan)\n\nhttp://codereview.chromium.org/149656/diff/2005/3008#newcode53\nLine 53: # TODO: As we make tests faster, reduce to tenth of a second granularity.\nNit: TODO(ojan)\n\nhttp://codereview.chromium.org/149656/diff/2005/3008#newcode88\nLine 88: tests[test][\"results\"] = \"\"\nCan you make this a class too?\n\nhttp://codereview.chromium.org/149656/diff/2005/3008#newcode102\nLine 102: results_str = self.JSON_PREFIX + str(results_json) + self.JSON_SUFFIX\nOh, you may also want to try using repr instead of str.  repr will escape things for you (into python syntax, but that's probably ok?).\n\nhttp://codereview.chromium.org/149656/diff/2005/3008#newcode127\nLine 127: have encough runs for maxNumberOfBuilds.\nNit: Can you doc the input args?","disapproval":false,"date":"2009-08-03 18:50:30.799852","approval":false},{"sender":"arv@chromium.org","recipients":["ojan@chromium.org","tony@chromium.org","arv@chromium.org","chromium-reviews@googlegroups.com","darin@chromium.org","dglazkov@chromium.org","victorw@chromium.org","phajdan.jr@chromium.org"],"text":"HTML/js: LG","disapproval":false,"date":"2009-08-03 19:01:49.299095","approval":false},{"sender":"ojan@chromium.org","recipients":["ojan@chromium.org","tony@chromium.org","arv@chromium.org","chromium-reviews@googlegroups.com","darin@chromium.org","dglazkov@chromium.org","victorw@chromium.org","phajdan.jr@chromium.org"],"text":"http://codereview.chromium.org/149656/diff/2005/3008\nFile webkit/tools/layout_tests/layout_package/json_results_generator.py (right):\n\nhttp://codereview.chromium.org/149656/diff/2005/3008#newcode45\nLine 45: # TODO: get relative path here\nOn 2009/08/03 18:50:30, tony wrote:\n> Nit: TODO(ojan)\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/2005/3008#newcode53\nLine 53: # TODO: As we make tests faster, reduce to tenth of a second granularity.\nOn 2009/08/03 18:50:30, tony wrote:\n> Nit: TODO(ojan)\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/2005/3008#newcode88\nLine 88: tests[test][\"results\"] = \"\"\nOn 2009/08/03 18:50:30, tony wrote:\n> Can you make this a class too?\n\nI tried going down this path, but I don't think this will work. I need to write out the JSON and then later read it back in and modify it. If I make this a class, then I would access properties via .results instead of [\"results\"], right? But then when I read the JSON back in, it will just be a dict.\n\nIs there a way to make that all work?\n\nIn either case, I made this a bit cleaner by putting the creation of the JSON objects behind Create* methods.\n\nhttp://codereview.chromium.org/149656/diff/2005/3008#newcode102\nLine 102: results_str = self.JSON_PREFIX + str(results_json) + self.JSON_SUFFIX\nOn 2009/08/03 18:50:30, tony wrote:\n> Oh, you may also want to try using repr instead of str.  repr will escape things\n> for you (into python syntax, but that's probably ok?).\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/2005/3008#newcode127\nLine 127: have encough runs for maxNumberOfBuilds.\nOn 2009/08/03 18:50:30, tony wrote:\n> Nit: Can you doc the input args?\n\nDone.\n\nhttp://codereview.chromium.org/149656/diff/2005/3007\nFile webkit/tools/layout_tests/run_webkit_tests.py (right):\n\nhttp://codereview.chromium.org/149656/diff/2005/3007#newcode611\nLine 611: str(self._expectations.GetExpectationsForAllPlatforms()))\nAlso changed str to repr here.","disapproval":false,"date":"2009-08-05 17:00:18.026038","approval":false},{"sender":"tony@chromium.org","recipients":["ojan@chromium.org","tony@chromium.org","arv@chromium.org","chromium-reviews@googlegroups.com","darin@chromium.org","dglazkov@chromium.org","victorw@chromium.org","phajdan.jr@chromium.org"],"text":"LGTM.  It also looks like simeplejson was recently added to third_party, but I wouldn't bother with the refactor right now.\n\nhttp://codereview.chromium.org/149656/diff/2005/3008\nFile webkit/tools/layout_tests/layout_package/json_results_generator.py (right):\n\nhttp://codereview.chromium.org/149656/diff/2005/3008#newcode88\nLine 88: tests[test][\"results\"] = \"\"\nOn 2009/08/05 17:00:18, ojan wrote:\n> On 2009/08/03 18:50:30, tony wrote:\n> > Can you make this a class too?\n> \n> I tried going down this path, but I don't think this will work. I need to write\n> out the JSON and then later read it back in and modify it. If I make this a\n> class, then I would access properties via .results instead of [\"results\"],\n> right? But then when I read the JSON back in, it will just be a dict.\n> \n> Is there a way to make that all work?\n> \n> In either case, I made this a bit cleaner by putting the creation of the JSON\n> objects behind Create* methods.\n\nYeah, I thought you might need it to be a dict for the JSON conversion.  Leaving it as a dict is fine.","disapproval":false,"date":"2009-08-05 17:15:36.789507","approval":true}],"owner_email":"ojan@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src/","owner":"ojan","subject":"First stab at a layout tests flakiness/speed dashboard....","created":"2009-07-15 00:44:15.819916","patchsets":[1,2001,2005,3015],"modified":"2011-05-09 13:43:02.733329","closed":true,"commit":false,"issue":149656}