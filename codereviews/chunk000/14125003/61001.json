{"files":{"net/ssl/ssl_config_service.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":1,"messages":[],"id":41014,"is_binary":false},"net/http/http_network_transaction_ssl_unittest.cc":{"status":"A","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":206,"num_removed":0,"messages":[{"author":"Ryan Sleevi (OoO until 11-18)","author_email":"rsleevi@chromium.org","text":"Seems like all your tests just end up creating a mock_socket_factory and assigning it to session_params_ (eg: instead of lines 64 & 79)\n\nShould you just add this to the test harness and add it to params on line 39/40? Then you only have to do\n\nmock_socket_factory_.AddSSLSocketDataProvider(...)\nmock_socket_factory_.AddSocketDataProvider(...)","draft":false,"lineno":64,"date":"2013-04-17 01:16:36.661520","left":false},{"author":"Ryan Sleevi (OoO until 11-18)","author_email":"rsleevi@chromium.org","text":"comment style nit: While the || notation isn't formalized, AFAIK, Chromium code only uses it to refer to variable names, and not to things like type names/class names or enum values and the like.","draft":false,"lineno":68,"date":"2013-04-17 01:16:36.661850","left":false},{"author":"Ryan Sleevi (OoO until 11-18)","author_email":"rsleevi@chromium.org","text":"comment nit: Two bits:\n1) This is explaining a concept introduced on lines 66-68, but not yet explained. It would be good to move the explanation of what is \"the SSL 3.0 fallback logic\" into that comment.\n2) Correctness nit: It's not unconditionally going to rollback to SSL3.0 - only if it's enabled.\n\nAn easier way to address these comment nits might be to move the test description up to line 62 and provide the high-level summary of the test, and then briefly explain points that matter\n\n(for line 62)\n// Tests that the HttpNetworkTransaction does not attempt to\n// fall back to SSL 3.0 when a TLS 1.0 handshake fails and\n// the site is pinned to the Google pin list (indicating that\n// it is a Google site).\n\nthen line 66\n// |ssl_data| is for the first handshake (TLS 1.0), which\n// will fail for protocol reasons (eg: simulating a version\n// rollback attack).\n// Because SSL 3.0 fallback should never even be attempted,\n// only one simulated SSL handshake is supported.\n\nThis generally applies to all tests in this file.","draft":false,"lineno":72,"date":"2013-04-17 01:16:36.662160","left":false},{"author":"Ryan Sleevi (OoO until 11-18)","author_email":"rsleevi@chromium.org","text":"style: net:: namespace issues still","draft":false,"lineno":76,"date":"2013-04-17 01:16:36.662440","left":false},{"author":"Ryan Sleevi (OoO until 11-18)","author_email":"rsleevi@chromium.org","text":"style nit: Move the TestCompletionCallback declaration closer to its first use (eg: line 90/91)\n\nOf course, if you move lines 87-89 below, as suggested, this may be unnecessary.","draft":false,"lineno":85,"date":"2013-04-17 01:16:36.662720","left":false},{"author":"Ryan Sleevi (OoO until 11-18)","author_email":"rsleevi@chromium.org","text":"Seems like this could be done in the test harness SetUp() when setting up the SSLConfigService to be a (class local) MockSSLConfigService?\n\nIt's such a small amount of code to mock (eg: see https://code.google.com/p/chromium/codesearch#chromium/src/net/ssl/ssl_config_service_unittest.cc&sq=package:chromium&q=SSLConfigService&type=cs&l=17 ) that you could get away with\n\nclass TLS1OnlySSLConfigService : public SSLConfigService {\n public:\n  TLS1OnlySSLConfigService() {\n    ssl_config_.version_min = SSL_PROTOCOL_VERSION_SSL3;\n    ssl_config_.version_max = SSL_PROTOCOL_VERSION_TLS1;\n  }\n\n  virtual void GetSSLConfig(SSLConfig* config) OVERRIDE {\n    *config = ssl_config_;\n  }\n\n private:\n  SSLConfig ssl_config_;\n};\n\n\nI suggest this approach because your tests are also (subtlely) dependent upon version_min being SSL_PROTOCOL_VERSION_SSL3 (to enable fallback), which it may not always be so.","draft":false,"lineno":89,"date":"2013-04-17 01:16:36.662990","left":false},{"author":"Ryan Sleevi (OoO until 11-18)","author_email":"rsleevi@chromium.org","text":"With the comments from line 72 incorporated (eg: including a high level description of this test on line 102), you could be brief and just say\n\n// |ssl_data2| contains the handshake result for an SSL 3.0\n// handshake which will be attempted after the TLS 1.0\n// handshake fails.","draft":false,"lineno":118,"date":"2013-04-17 01:16:36.663280","left":false},{"author":"Ryan Sleevi (OoO until 11-18)","author_email":"rsleevi@chromium.org","text":"comment nit: I'm generally not fond of inter-test comments cross-referencing eachother, because it means the developer has to skip around reading code.\n\nFurther, this comment makes me think that Google_SSLVersionMinPreloadedEnabled perhaps would be served by having an extra SSL data (that should be unconsumed - and this can be confirmed by asking the SSLSocketDataProvider/MockSocketFactory how many sockets it vended)\n\nThis is because if the behaviour being tested in Google_SSLVersionMinPreloadedEnabled ever breaks (and Google properties begin SSL fallbacks, for example), then based on your comment here, that test will start crashing (bringing down all of net_unittests), rather than failing gracefully.\n\nI'm not sure if I feel strongly enough on this fact to request it - because the developer should be running things locally first - but it's enough to highlight how significantly nasty the failure mode is.","draft":false,"lineno":123,"date":"2013-04-17 01:16:36.663510","left":false},{"author":"Ryan Sleevi (OoO until 11-18)","author_email":"rsleevi@chromium.org","text":"Is wrapping really necessary here?","draft":false,"lineno":201,"date":"2013-04-17 01:16:36.663760","left":false},{"author":"thaidn_google","author_email":"thaidn@google.com","text":"Nice tip. Thanks!\n\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> Seems like all your tests just end up creating a mock_socket_factory and\n> assigning it to session_params_ (eg: instead of lines 64 & 79)\n> \n> Should you just add this to the test harness and add it to params on line 39/40?\n> Then you only have to do\n> \n> mock_socket_factory_.AddSSLSocketDataProvider(...)\n> mock_socket_factory_.AddSocketDataProvider(...)\n\n","draft":false,"lineno":64,"date":"2013-04-17 04:34:47.980030","left":false},{"author":"thaidn_google","author_email":"thaidn@google.com","text":"Good to know. Thanks!\n\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> comment style nit: While the || notation isn't formalized, AFAIK, Chromium code\n> only uses it to refer to variable names, and not to things like type names/class\n> names or enum values and the like.\n\n","draft":false,"lineno":68,"date":"2013-04-17 04:34:47.980200","left":false},{"author":"thaidn_google","author_email":"thaidn@google.com","text":"I hope the modified comments LGTY :-).\n\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> comment nit: Two bits:\n> 1) This is explaining a concept introduced on lines 66-68, but not yet\n> explained. It would be good to move the explanation of what is \"the SSL 3.0\n> fallback logic\" into that comment.\n> 2) Correctness nit: It's not unconditionally going to rollback to SSL3.0 - only\n> if it's enabled.\n> \n> An easier way to address these comment nits might be to move the test\n> description up to line 62 and provide the high-level summary of the test, and\n> then briefly explain points that matter\n> \n> (for line 62)\n> // Tests that the HttpNetworkTransaction does not attempt to\n> // fall back to SSL 3.0 when a TLS 1.0 handshake fails and\n> // the site is pinned to the Google pin list (indicating that\n> // it is a Google site).\n> \n> then line 66\n> // |ssl_data| is for the first handshake (TLS 1.0), which\n> // will fail for protocol reasons (eg: simulating a version\n> // rollback attack).\n> // Because SSL 3.0 fallback should never even be attempted,\n> // only one simulated SSL handshake is supported.\n> \n> This generally applies to all tests in this file.\n\n","draft":false,"lineno":72,"date":"2013-04-17 04:34:47.980440","left":false},{"author":"thaidn_google","author_email":"thaidn@google.com","text":"On 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> style: net:: namespace issues still\n\nDone.","draft":false,"lineno":76,"date":"2013-04-17 04:34:47.980650","left":false},{"author":"thaidn_google","author_email":"thaidn@google.com","text":"On 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> style nit: Move the TestCompletionCallback declaration closer to its first use\n> (eg: line 90/91)\n> \n> Of course, if you move lines 87-89 below, as suggested, this may be unnecessary.\n\nDone.","draft":false,"lineno":85,"date":"2013-04-17 04:34:47.980940","left":false},{"author":"thaidn_google","author_email":"thaidn@google.com","text":"On 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> Seems like this could be done in the test harness SetUp() when setting up the\n> SSLConfigService to be a (class local) MockSSLConfigService?\n> \n> It's such a small amount of code to mock (eg: see\n> https://code.google.com/p/chromium/codesearch#chromium/src/net/ssl/ssl_config_service_unittest.cc&sq=package:chromium&q=SSLConfigService&type=cs&l=17\n> ) that you could get away with\n> \n> class TLS1OnlySSLConfigService : public SSLConfigService {\n>  public:\n>   TLS1OnlySSLConfigService() {\n>     ssl_config_.version_min = SSL_PROTOCOL_VERSION_SSL3;\n>     ssl_config_.version_max = SSL_PROTOCOL_VERSION_TLS1;\n>   }\n> \n>   virtual void GetSSLConfig(SSLConfig* config) OVERRIDE {\n>     *config = ssl_config_;\n>   }\n> \n>  private:\n>   SSLConfig ssl_config_;\n> };\n> \n> \n> I suggest this approach because your tests are also (subtlely) dependent upon\n> version_min being SSL_PROTOCOL_VERSION_SSL3 (to enable fallback), which it may\n> not always be so.\n\nDone.","draft":false,"lineno":89,"date":"2013-04-17 04:34:47.981240","left":false},{"author":"thaidn_google","author_email":"thaidn@google.com","text":"On 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> With the comments from line 72 incorporated (eg: including a high level\n> description of this test on line 102), you could be brief and just say\n> \n> // |ssl_data2| contains the handshake result for an SSL 3.0\n> // handshake which will be attempted after the TLS 1.0\n> // handshake fails.\n\nDone.","draft":false,"lineno":118,"date":"2013-04-17 04:34:47.981460","left":false},{"author":"thaidn_google","author_email":"thaidn@google.com","text":"I agree.\n\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> comment nit: I'm generally not fond of inter-test comments cross-referencing\n> eachother, because it means the developer has to skip around reading code.\n> \n> Further, this comment makes me think that Google_SSLVersionMinPreloadedEnabled\n> perhaps would be served by having an extra SSL data (that should be unconsumed -\n> and this can be confirmed by asking the SSLSocketDataProvider/MockSocketFactory\n> how many sockets it vended)\n> \n> This is because if the behaviour being tested in\n> Google_SSLVersionMinPreloadedEnabled ever breaks (and Google properties begin\n> SSL fallbacks, for example), then based on your comment here, that test will\n> start crashing (bringing down all of net_unittests), rather than failing\n> gracefully.\n> \n> I'm not sure if I feel strongly enough on this fact to request it - because the\n> developer should be running things locally first - but it's enough to highlight\n> how significantly nasty the failure mode is.\n\n","draft":false,"lineno":123,"date":"2013-04-17 04:34:47.981650","left":false},{"author":"thaidn_google","author_email":"thaidn@google.com","text":"On 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> Is wrapping really necessary here?\n\nDone.","draft":false,"lineno":201,"date":"2013-04-17 04:34:47.981830","left":false}],"id":41012,"is_binary":false},"chrome/common/chrome_switches.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":0,"messages":[],"id":41007,"is_binary":false},"chrome/browser/net/ssl_config_service_manager_pref.cc":{"status":"M","num_chunks":7,"no_base_file":false,"property_changes":"","num_added":14,"num_removed":4,"messages":[],"id":41003,"is_binary":false},"chrome/common/pref_names.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":0,"messages":[],"id":41009,"is_binary":false},"net/net.gyp":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":0,"messages":[],"id":41013,"is_binary":false},"net/ssl/ssl_config_service.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":0,"messages":[],"id":41015,"is_binary":false},"chrome/browser/prefs/command_line_pref_store.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":0,"messages":[],"id":41005,"is_binary":false},"net/http/http_network_transaction.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":28,"num_removed":24,"messages":[{"author":"Ryan Sleevi (OoO until 11-18)","author_email":"rsleevi@chromium.org","text":"So after reading the code (which, yes, I realize I pseudo-coded), I realized you don't need version_before.\n\nIf you swap lines 1259/1260 (so that assignment comes after the logging), you can get away with just tracking version_max (the new max) and server_ssl_config_.version_max (aka version_before)","draft":false,"lineno":1220,"date":"2013-04-17 01:16:36.661160","left":false},{"author":"thaidn_google","author_email":"thaidn@google.com","text":"Nice catch :-).\n\nOn 2013/04/17 01:16:36, Ryan Sleevi wrote:\n> So after reading the code (which, yes, I realize I pseudo-coded), I realized you\n> don't need version_before.\n> \n> If you swap lines 1259/1260 (so that assignment comes after the logging), you\n> can get away with just tracking version_max (the new max) and\n> server_ssl_config_.version_max (aka version_before)\n\n","draft":false,"lineno":1220,"date":"2013-04-17 04:34:47.979840","left":false}],"id":41010,"is_binary":false},"net/http/http_network_transaction.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":0,"messages":[],"id":41011,"is_binary":false},"chrome/common/chrome_switches.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":0,"messages":[],"id":41006,"is_binary":false},"chrome/browser/net/ssl_config_service_manager_pref_unittest.cc":{"status":"M","num_chunks":6,"no_base_file":false,"property_changes":"","num_added":21,"num_removed":2,"messages":[],"id":41004,"is_binary":false},"net/ssl/ssl_config_service_unittest.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":5,"num_removed":0,"messages":[],"id":41016,"is_binary":false},"chrome/common/pref_names.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":0,"messages":[],"id":41008,"is_binary":false}},"owner_email":"thaidn@google.com","owner":"thaidn_google","message":"Cleanup","try_job_results":[],"created":"2013-04-17 00:43:01.662630","url":null,"num_comments":20,"modified":"2013-04-17 04:34:48.067930","patchset":61001,"issue":14125003}