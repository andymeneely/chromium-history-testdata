{"files":{"media/base/android/media_codec_bridge.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":13,"num_removed":0,"messages":[{"author":"xhwang","author_email":"xhwang@chromium.org","text":"Hmm, I see why you have the map in the java code. But really the first element is still a codec type. MediaCodec knows nothing about the container type. We need MediaSourcePlayer or something else to combine container and codec info and make the final ContainerCodecsInfo.","draft":false,"lineno":55,"date":"2013-09-11 18:16:00.532820","left":false},{"author":"qinmin","author_email":"qinmin@chromium.org","text":"Yes, that's why i added 2 static functions in the C++ file to convert codec type to container type and codecs.\nSo the final ContainerCodecsInfo will be something like {\"video/webm\",\"vp8\", false}\n\nOn 2013/09/11 18:16:00, xhwang wrote:\n> Hmm, I see why you have the map in the java code. But really the first element\n> is still a codec type. MediaCodec knows nothing about the container type. We\n> need MediaSourcePlayer or something else to combine container and codec info and\n> make the final ContainerCodecsInfo.\n\n","draft":false,"lineno":55,"date":"2013-09-11 19:07:10.299410","left":false}],"id":20003,"is_binary":false},"media/base/android/media_codec_bridge.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":70,"num_removed":1,"messages":[],"id":20002,"is_binary":false},"media/base/android/java/src/org/chromium/media/MediaCodecBridge.java":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":60,"num_removed":1,"messages":[{"author":"xhwang","author_email":"xhwang@chromium.org","text":"Can we try to avoid the word \"mime\"? It's kind of confusing. How about SupportedCodecInfo or just CodecInfo?","draft":false,"lineno":83,"date":"2013-09-11 18:16:00.532290","left":false},{"author":"xhwang","author_email":"xhwang@chromium.org","text":"hmm, can we just have a map <codec_type, secure_decoder_supported> ?\n\nI am not sure why we need a map like:\n<codec_type, pair<codec_type, secure_decoder_supported> > ...","draft":false,"lineno":142,"date":"2013-09-11 18:16:00.532600","left":false},{"author":"qinmin","author_email":"qinmin@chromium.org","text":"On 2013/09/11 18:16:00, xhwang wrote:\n> Can we try to avoid the word \"mime\"? It's kind of confusing. How about\n> SupportedCodecInfo or just CodecInfo?\n\nDone.","draft":false,"lineno":83,"date":"2013-09-11 19:07:10.298920","left":false},{"author":"qinmin","author_email":"qinmin@chromium.org","text":"This is to facilitate the output of the Array.\nIf we use <codec_type, secure_decoder_supported>, the we need an extra loop to create an array, and insert each item from the map to the array.\nuse <codec_type, pair<codec_type, secure_decoder_supported> >, we can simply call Hashmap.values().toArray() to convert the output to an array. The code is much cleaner than the former\n\nOn 2013/09/11 18:16:00, xhwang wrote:\n> hmm, can we just have a map <codec_type, secure_decoder_supported> ?\n> \n> I am not sure why we need a map like:\n> <codec_type, pair<codec_type, secure_decoder_supported> > ...\n","draft":false,"lineno":142,"date":"2013-09-11 19:07:10.299160","left":false},{"author":"xhwang","author_email":"xhwang@chromium.org","text":"I am not familiar with Java. But why we can't use Vector<CodecMimeInfo>.toArray()?\n\nOn 2013/09/11 19:07:10, qinmin wrote:\n> This is to facilitate the output of the Array.\n> If we use <codec_type, secure_decoder_supported>, the we need an extra loop to\n> create an array, and insert each item from the map to the array.\n> use <codec_type, pair<codec_type, secure_decoder_supported> >, we can simply\n> call Hashmap.values().toArray() to convert the output to an array. The code is\n> much cleaner than the former\n> \n> On 2013/09/11 18:16:00, xhwang wrote:\n> > hmm, can we just have a map <codec_type, secure_decoder_supported> ?\n> > \n> > I am not sure why we need a map like:\n> > <codec_type, pair<codec_type, secure_decoder_supported> > ...\n\n","draft":false,"lineno":142,"date":"2013-09-11 21:01:23.277240","left":false},{"author":"qinmin","author_email":"qinmin@chromium.org","text":"There are several problems:\n1. vector.indexOf() is inefficient compared to map\n2. we need to implement the equals() function for CodecMimeInfo as it is not a primitive type as string\n3. \"video/vp8, true\" and \"video/vp8, false\" will be separate entries if we use vector.indexOf(), but we only need to return 1 entry since the former implies the latter\n\nOn 2013/09/11 21:01:23, xhwang wrote:\n> I am not familiar with Java. But why we can't use\n> Vector<CodecMimeInfo>.toArray()?\n> \n> On 2013/09/11 19:07:10, qinmin wrote:\n> > This is to facilitate the output of the Array.\n> > If we use <codec_type, secure_decoder_supported>, the we need an extra loop to\n> > create an array, and insert each item from the map to the array.\n> > use <codec_type, pair<codec_type, secure_decoder_supported> >, we can simply\n> > call Hashmap.values().toArray() to convert the output to an array. The code is\n> > much cleaner than the former\n> > \n> > On 2013/09/11 18:16:00, xhwang wrote:\n> > > hmm, can we just have a map <codec_type, secure_decoder_supported> ?\n> > > \n> > > I am not sure why we need a map like:\n> > > <codec_type, pair<codec_type, secure_decoder_supported> > ...\n> \n","draft":false,"lineno":142,"date":"2013-09-11 22:08:06.089400","left":false},{"author":"xhwang","author_email":"xhwang@chromium.org","text":"On 2013/09/11 22:08:06, qinmin wrote:\n> There are several problems:\n> 1. vector.indexOf() is inefficient compared to map\n> 2. we need to implement the equals() function for CodecMimeInfo as it is not a\n> primitive type as string\n> 3. \"video/vp8, true\" and \"video/vp8, false\" will be separate entries if we use\n> vector.indexOf(), but we only need to return 1 entry since the former implies\n> the latter\n> \n> On 2013/09/11 21:01:23, xhwang wrote:\n> > I am not familiar with Java. But why we can't use\n> > Vector<CodecMimeInfo>.toArray()?\n> > \n> > On 2013/09/11 19:07:10, qinmin wrote:\n> > > This is to facilitate the output of the Array.\n> > > If we use <codec_type, secure_decoder_supported>, the we need an extra loop\n> to\n> > > create an array, and insert each item from the map to the array.\n> > > use <codec_type, pair<codec_type, secure_decoder_supported> >, we can simply\n> > > call Hashmap.values().toArray() to convert the output to an array. The code\n> is\n> > > much cleaner than the former\n> > > \n> > > On 2013/09/11 18:16:00, xhwang wrote:\n> > > > hmm, can we just have a map <codec_type, secure_decoder_supported> ?\n> > > > \n> > > > I am not sure why we need a map like:\n> > > > <codec_type, pair<codec_type, secure_decoder_supported> > ...\n> > \n\nI see. Good to learn!\n\nMy last attempt though. Can we drop CodecMimeInfo and have:\nHashMap<String /*codec_type*/, bool /*secure_decoder_supported*/> codecMap;\n\nThen we do codecMap.entrySet().toArray() ?\n\nIf it doesn't work then nevermind.","draft":false,"lineno":142,"date":"2013-09-11 23:14:05.662880","left":false},{"author":"qinmin","author_email":"qinmin@chromium.org","text":"EntrySet is a generic type, and generic array creation is not allowed in Java. So I need to return an object[] from this function. \nThen when the native side ask java to return the value of the entry inside the object array, java side needs to convert the object to an EntrySet.\nIn this case, the CodecMimeInfo class is no longer needed. All we need is EntrySet<String, Boolean> and object[]. But the code then becomes hard to read. There are wierd java functions that tries to parse an jobject. \n\nOn 2013/09/11 23:14:05, xhwang wrote:\n> On 2013/09/11 22:08:06, qinmin wrote:\n> > There are several problems:\n> > 1. vector.indexOf() is inefficient compared to map\n> > 2. we need to implement the equals() function for CodecMimeInfo as it is not a\n> > primitive type as string\n> > 3. \"video/vp8, true\" and \"video/vp8, false\" will be separate entries if we use\n> > vector.indexOf(), but we only need to return 1 entry since the former implies\n> > the latter\n> > \n> > On 2013/09/11 21:01:23, xhwang wrote:\n> > > I am not familiar with Java. But why we can't use\n> > > Vector<CodecMimeInfo>.toArray()?\n> > > \n> > > On 2013/09/11 19:07:10, qinmin wrote:\n> > > > This is to facilitate the output of the Array.\n> > > > If we use <codec_type, secure_decoder_supported>, the we need an extra\n> loop\n> > to\n> > > > create an array, and insert each item from the map to the array.\n> > > > use <codec_type, pair<codec_type, secure_decoder_supported> >, we can\n> simply\n> > > > call Hashmap.values().toArray() to convert the output to an array. The\n> code\n> > is\n> > > > much cleaner than the former\n> > > > \n> > > > On 2013/09/11 18:16:00, xhwang wrote:\n> > > > > hmm, can we just have a map <codec_type, secure_decoder_supported> ?\n> > > > > \n> > > > > I am not sure why we need a map like:\n> > > > > <codec_type, pair<codec_type, secure_decoder_supported> > ...\n> > > \n> \n> I see. Good to learn!\n> \n> My last attempt though. Can we drop CodecMimeInfo and have:\n> HashMap<String /*codec_type*/, bool /*secure_decoder_supported*/> codecMap;\n> \n> Then we do codecMap.entrySet().toArray() ?\n> \n> If it doesn't work then nevermind.\n\n","draft":false,"lineno":142,"date":"2013-09-12 00:10:12.758760","left":false}],"id":20001,"is_binary":false}},"owner_email":"qinmin@chromium.org","owner":"qinmin","message":"moving logics to native","try_job_results":[],"created":"2013-09-11 02:20:02.846780","url":null,"num_comments":10,"modified":"2013-09-12 00:10:12.797910","patchset":4004,"issue":23549021}