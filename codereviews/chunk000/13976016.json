{"description":"Adding parsing of constraint to enable WebRTC logging.\n\nThis will be landed last when depending CLs have landed.\n\n\nBUG=229829\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=201335","cc":["chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"reviewers":["tommi@chromium.org","jamesr@chromium.org"],"messages":[{"sender":"grunell@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"","disapproval":false,"date":"2013-04-21 11:46:40.939730","approval":false},{"sender":"tommi@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://codereview.chromium.org/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://codereview.chromium.org/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc#newcode40\ncontent/renderer/media/media_stream_dependency_factory.cc:40: const char kWebRtcLoggingConstraint[] = \"googLog\";\nis this the only definition of this constant or does it exist in libjingle too?\n\"googLog\" doesn't sound very descriptive. Can we call it \"webrtc_log\"?\n\nhttps://codereview.chromium.org/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc#newcode733\ncontent/renderer/media/media_stream_dependency_factory.cc:733: webrtc_logging_handler_impl->OpenLog();\nWhy doesn't the caller just do this instead of going through the factory?\n\nhttps://codereview.chromium.org/13976016/diff/1/content/renderer/webrtc_logging_handler_impl.cc\nFile content/renderer/webrtc_logging_handler_impl.cc (right):\n\nhttps://codereview.chromium.org/13976016/diff/1/content/renderer/webrtc_logging_handler_impl.cc#newcode48\ncontent/renderer/webrtc_logging_handler_impl.cc:48: talk_base::InitLoggingDelegate(this);\nSince this is more than regular logging, can we call this InitWebRTCLoggingDelegate?","disapproval":false,"date":"2013-04-21 22:58:45.750760","approval":false},{"sender":"grunell@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc#newcode40\ncontent/renderer/media/media_stream_dependency_factory.cc:40: const char kWebRtcLoggingConstraint[] = \"googLog\";\nOn 2013/04/21 22:58:45, tommi wrote:\n> is this the only definition of this constant or does it exist in libjingle too?\n\nIt's the one and only place here. Here is where the parsing of that constraint takes place and the log is enabled.\n\n> \"googLog\" doesn't sound very descriptive. Can we call it \"webrtc_log\"?\n\nThat was decided in the design doc dev process. We can check with Justin if that's OK. I think the goog prefix must be there. (See also other constraints parsed in libjingle.)\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc#newcode733\ncontent/renderer/media/media_stream_dependency_factory.cc:733: webrtc_logging_handler_impl->OpenLog();\nOn 2013/04/21 22:58:45, tommi wrote:\n> Why doesn't the caller just do this instead of going through the factory?\n\nIt's a bit odd to have this done in a dependency factory. But it seems to be the natural place to parse the constraint, which triggers enabling the log. WebKit is the caller, I don't think we should parse the constraint there. (This function itself is only for opening the log on the right thread.)","disapproval":false,"date":"2013-04-22 06:33:47.758630","approval":false},{"sender":"tommi@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc#newcode40\ncontent/renderer/media/media_stream_dependency_factory.cc:40: const char kWebRtcLoggingConstraint[] = \"googLog\";\nOn 2013/04/22 06:33:47, Henrik Grunell wrote:\n> On 2013/04/21 22:58:45, tommi wrote:\n> > is this the only definition of this constant or does it exist in libjingle\n> too?\n> \n> It's the one and only place here. Here is where the parsing of that constraint\n> takes place and the log is enabled.\n> \n> > \"googLog\" doesn't sound very descriptive. Can we call it \"webrtc_log\"?\n> \n> That was decided in the design doc dev process. We can check with Justin if\n> that's OK. I think the goog prefix must be there. (See also other constraints\n> parsed in libjingle.)\n\nOK, if you could add a comment here that explains the name and purpose, that'd be great.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc#newcode733\ncontent/renderer/media/media_stream_dependency_factory.cc:733: webrtc_logging_handler_impl->OpenLog();\nOn 2013/04/22 06:33:47, Henrik Grunell wrote:\n> On 2013/04/21 22:58:45, tommi wrote:\n> > Why doesn't the caller just do this instead of going through the factory?\n> \n> It's a bit odd to have this done in a dependency factory. But it seems to be the\n> natural place to parse the constraint, which triggers enabling the log. WebKit\n> is the caller, I don't think we should parse the constraint there. (This\n> function itself is only for opening the log on the right thread.)\n\nAh, I see.  In that case you can remove this function and do this instead:\n\nRenderThreadImpl::current()->GetIOMessageLoopProxy()->PostTask(\n    FROM_HERE, base::Bind(\n        &WebRtcLoggingHandlerImpl::OpenLog,\n        handler));","disapproval":false,"date":"2013-04-22 09:05:38.048840","approval":false},{"sender":"grunell@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc#newcode40\ncontent/renderer/media/media_stream_dependency_factory.cc:40: const char kWebRtcLoggingConstraint[] = \"googLog\";\nOn 2013/04/22 09:05:38, tommi wrote:\n> On 2013/04/22 06:33:47, Henrik Grunell wrote:\n> > On 2013/04/21 22:58:45, tommi wrote:\n> > > is this the only definition of this constant or does it exist in libjingle\n> > too?\n> > \n> > It's the one and only place here. Here is where the parsing of that constraint\n> > takes place and the log is enabled.\n> > \n> > > \"googLog\" doesn't sound very descriptive. Can we call it \"webrtc_log\"?\n> > \n> > That was decided in the design doc dev process. We can check with Justin if\n> > that's OK. I think the goog prefix must be there. (See also other constraints\n> > parsed in libjingle.)\n> \n> OK, if you could add a comment here that explains the name and purpose, that'd\n> be great.\n\nDone.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/1/content/renderer/media/media_stream_dependency_factory.cc#newcode733\ncontent/renderer/media/media_stream_dependency_factory.cc:733: webrtc_logging_handler_impl->OpenLog();\nOn 2013/04/22 09:05:38, tommi wrote:\n> On 2013/04/22 06:33:47, Henrik Grunell wrote:\n> > On 2013/04/21 22:58:45, tommi wrote:\n> > > Why doesn't the caller just do this instead of going through the factory?\n> > \n> > It's a bit odd to have this done in a dependency factory. But it seems to be\n> the\n> > natural place to parse the constraint, which triggers enabling the log. WebKit\n> > is the caller, I don't think we should parse the constraint there. (This\n> > function itself is only for opening the log on the right thread.)\n> \n> Ah, I see.  In that case you can remove this function and do this instead:\n> \n> RenderThreadImpl::current()->GetIOMessageLoopProxy()->PostTask(\n>     FROM_HERE, base::Bind(\n>         &WebRtcLoggingHandlerImpl::OpenLog,\n>         handler));\n\nOf course. Done.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/1/content/renderer/webrtc_logging_handler_impl.cc\nFile content/renderer/webrtc_logging_handler_impl.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/1/content/renderer/webrtc_logging_handler_impl.cc#newcode48\ncontent/renderer/webrtc_logging_handler_impl.cc:48: talk_base::InitLoggingDelegate(this);\nOn 2013/04/21 22:58:45, tommi wrote:\n> Since this is more than regular logging, can we call this\n> InitWebRTCLoggingDelegate?\n\nsgtm. Done. Also updated a CL this depends on.","disapproval":false,"date":"2013-04-22 10:51:24.236570","approval":false},{"sender":"tommi@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/8001/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/8001/content/renderer/media/media_stream_dependency_factory.cc#newcode476\ncontent/renderer/media/media_stream_dependency_factory.cc:476: &WebRtcLoggingHandlerImpl::OpenLog,\nas discussed offline, remove this method and call Open in the message filter's SetDelegate() method.","disapproval":false,"date":"2013-04-22 12:39:34.768960","approval":false},{"sender":"grunell@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/8001/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/8001/content/renderer/media/media_stream_dependency_factory.cc#newcode476\ncontent/renderer/media/media_stream_dependency_factory.cc:476: &WebRtcLoggingHandlerImpl::OpenLog,\nOn 2013/04/22 12:39:34, tommi wrote:\n> as discussed offline, remove this method and call Open in the message filter's\n> SetDelegate() method.\n\nDone.","disapproval":false,"date":"2013-04-22 12:58:02.690660","approval":false},{"sender":"tommi@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/8002/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/8002/content/renderer/media/media_stream_dependency_factory.cc#newcode469\ncontent/renderer/media/media_stream_dependency_factory.cc:469: WebRtcLoggingHandlerImpl* handler = new WebRtcLoggingHandlerImpl(\nThanks for making the changes.  After taking a look at the WebRtcLoggingHandlerImpl class, I have one more request.\n\nInstead of creating the WebRtcLoggingHandlerImpl object here, post a task to the IO thread and create the instance there.\nIn that task, you can also call InitLogging directly.\n\nThen, remove the io_message_loop_ member variable from WebRtcLoggingHandlerImpl.  That variable is only used for dchecking on correct thread usage.  Instead, inherit from NonThreadSafe (or use a thread checker) and replace the DCHECKs with CalledFromValidThread() calls.\n\nThat way the class is much simpler, no passing of specific message queue pointers is required and the class is officially single threaded whereas now it is created on one thread and used on another.","disapproval":false,"date":"2013-04-22 13:07:04.765480","approval":false},{"sender":"grunell@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/8002/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/8002/content/renderer/media/media_stream_dependency_factory.cc#newcode469\ncontent/renderer/media/media_stream_dependency_factory.cc:469: WebRtcLoggingHandlerImpl* handler = new WebRtcLoggingHandlerImpl(\nOn 2013/04/22 13:07:04, tommi wrote:\n> Thanks for making the changes.  After taking a look at the\n> WebRtcLoggingHandlerImpl class, I have one more request.\n> \n> Instead of creating the WebRtcLoggingHandlerImpl object here, post a task to the\n> IO thread and create the instance there.\n> In that task, you can also call InitLogging directly.\n> \n> Then, remove the io_message_loop_ member variable from WebRtcLoggingHandlerImpl.\n>  That variable is only used for dchecking on correct thread usage.  Instead,\n> inherit from NonThreadSafe (or use a thread checker) and replace the DCHECKs\n> with CalledFromValidThread() calls.\n> \n> That way the class is much simpler, no passing of specific message queue\n> pointers is required and the class is officially single threaded whereas now it\n> is created on one thread and used on another.\n\nSGTM. Done.","disapproval":false,"date":"2013-04-23 19:30:55.488790","approval":false},{"sender":"tommi@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/media/media_stream_dependency_factory.cc#newcode727\ncontent/renderer/media/media_stream_dependency_factory.cc:727: RenderThreadImpl::current()->webrtc_logging_message_filter();\npass the filter to CreateWebRtcLoggingHandler instead of referencing RenderThreadImpl::current() here. It's very likely not the same value.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/media/media_stream_dependency_factory.h\nFile content/renderer/media/media_stream_dependency_factory.h (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/media/media_stream_dependency_factory.h#newcode186\ncontent/renderer/media/media_stream_dependency_factory.h:186: void CreateWebRtcLoggingHandler(std::string app_session_id);\nconst &\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/webrtc_logging_handler_impl.cc\nFile content/renderer/webrtc_logging_handler_impl.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/webrtc_logging_handler_impl.cc#newcode24\ncontent/renderer/webrtc_logging_handler_impl.cc:24: RenderThreadImpl::current()->GetIOMessageLoopProxy()->PostTask(\nRenderThreadImpl::current() won't return the same value on every thread... might be NULL.  Suggest you use the filter instead since it holds a reference to the io loop.","disapproval":false,"date":"2013-04-23 20:18:07.887250","approval":false},{"sender":"grunell@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"Also rebased. Some changes are due to that.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/media/media_stream_dependency_factory.cc#newcode727\ncontent/renderer/media/media_stream_dependency_factory.cc:727: RenderThreadImpl::current()->webrtc_logging_message_filter();\nOn 2013/04/23 20:18:07, tommi wrote:\n> pass the filter to CreateWebRtcLoggingHandler instead of referencing\n> RenderThreadImpl::current() here. It's very likely not the same value.\n\nDone.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/media/media_stream_dependency_factory.h\nFile content/renderer/media/media_stream_dependency_factory.h (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/media/media_stream_dependency_factory.h#newcode186\ncontent/renderer/media/media_stream_dependency_factory.h:186: void CreateWebRtcLoggingHandler(std::string app_session_id);\nOn 2013/04/23 20:18:07, tommi wrote:\n> const &\n\nDone.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/webrtc_logging_handler_impl.cc\nFile content/renderer/webrtc_logging_handler_impl.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/19001/content/renderer/webrtc_logging_handler_impl.cc#newcode24\ncontent/renderer/webrtc_logging_handler_impl.cc:24: RenderThreadImpl::current()->GetIOMessageLoopProxy()->PostTask(\nOn 2013/04/23 20:18:07, tommi wrote:\n> RenderThreadImpl::current() won't return the same value on every thread... might\n> be NULL.  Suggest you use the filter instead since it holds a reference to the\n> io loop.\n\nDone.","disapproval":false,"date":"2013-04-24 09:17:16.652720","approval":false},{"sender":"tommi@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/media/media_stream_dependency_factory.cc#newcode469\ncontent/renderer/media/media_stream_dependency_factory.cc:469: RenderThreadImpl::current()->webrtc_logging_message_filter();\njust pass this directly to Bind instead of using make_scoped_refptr.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/render_thread_impl.h\nFile content/renderer/render_thread_impl.h (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/render_thread_impl.h#newcode267\ncontent/renderer/render_thread_impl.h:267: WebRtcLoggingMessageFilter* webrtc_logging_message_filter() const {\nreturn const scoped_refptr<>& and remove call to .get()\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/webrtc_logging_handler_impl.cc\nFile content/renderer/webrtc_logging_handler_impl.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/webrtc_logging_handler_impl.cc#newcode24\ncontent/renderer/webrtc_logging_handler_impl.cc:24: if (message_filter_) {\nSince the pointer to the handler is global and can be referenced from any thread at any time, we cannot safely delete the object.  So, let's do this instead:\n\n* In the ctor, store a proxy to the IO loop in a member variable.\n* In here, use that member variable to post a task to the IO thread.  This call will safely fail if the loop has gone away.\n* Change the filter to never delete the handler.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/webrtc_logging_message_filter.h\nFile content/renderer/webrtc_logging_message_filter.h (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/webrtc_logging_message_filter.h#newcode35\ncontent/renderer/webrtc_logging_message_filter.h:35: scoped_refptr<base::MessageLoopProxy> io_message_loop() {\nconst &","disapproval":false,"date":"2013-04-24 09:53:25.292960","approval":false},{"sender":"grunell@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/media/media_stream_dependency_factory.cc#newcode469\ncontent/renderer/media/media_stream_dependency_factory.cc:469: RenderThreadImpl::current()->webrtc_logging_message_filter();\nOn 2013/04/24 09:53:25, tommi wrote:\n> just pass this directly to Bind instead of using make_scoped_refptr.\n\nDone.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/render_thread_impl.h\nFile content/renderer/render_thread_impl.h (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/render_thread_impl.h#newcode267\ncontent/renderer/render_thread_impl.h:267: WebRtcLoggingMessageFilter* webrtc_logging_message_filter() const {\nOn 2013/04/24 09:53:25, tommi wrote:\n> return const scoped_refptr<>& and remove call to .get()\n\nDone.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/webrtc_logging_handler_impl.cc\nFile content/renderer/webrtc_logging_handler_impl.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/webrtc_logging_handler_impl.cc#newcode24\ncontent/renderer/webrtc_logging_handler_impl.cc:24: if (message_filter_) {\nOn 2013/04/24 09:53:25, tommi wrote:\n> Since the pointer to the handler is global and can be referenced from any thread\n> at any time, we cannot safely delete the object.  So, let's do this instead:\n> \n> * In the ctor, store a proxy to the IO loop in a member variable.\n> * In here, use that member variable to post a task to the IO thread.  This call\n> will safely fail if the loop has gone away.\n> * Change the filter to never delete the handler.\n\nDone.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/webrtc_logging_message_filter.h\nFile content/renderer/webrtc_logging_message_filter.h (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/35003/content/renderer/webrtc_logging_message_filter.h#newcode35\ncontent/renderer/webrtc_logging_message_filter.h:35: scoped_refptr<base::MessageLoopProxy> io_message_loop() {\nOn 2013/04/24 09:53:25, tommi wrote:\n> const &\n\nDone.","disapproval":false,"date":"2013-04-24 11:07:50.557270","approval":false},{"sender":"tommi@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"lgtm % comments\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/43001/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/43001/content/renderer/media/media_stream_dependency_factory.cc#newcode475\ncontent/renderer/media/media_stream_dependency_factory.cc:475: base::Unretained(filter),\nbefore you had a make_scoped_ptr call here.  If filter is reference counted (which it must be for scoped_refptr to work with it), I think we should just pass the webrtc_logging_message_filter() call directly here and not use Unretained().\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/43001/content/renderer/webrtc_logging_handler_impl.cc\nFile content/renderer/webrtc_logging_handler_impl.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/43001/content/renderer/webrtc_logging_handler_impl.cc#newcode50\ncontent/renderer/webrtc_logging_handler_impl.cc:50: NOTIMPLEMENTED();\nremove this?","disapproval":false,"date":"2013-04-26 18:05:53.253460","approval":true},{"sender":"grunell@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"James: please review now.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/43001/content/renderer/media/media_stream_dependency_factory.cc\nFile content/renderer/media/media_stream_dependency_factory.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/43001/content/renderer/media/media_stream_dependency_factory.cc#newcode475\ncontent/renderer/media/media_stream_dependency_factory.cc:475: base::Unretained(filter),\nOn 2013/04/26 18:05:53, tommi wrote:\n> before you had a make_scoped_ptr call here.  If filter is reference counted\n> (which it must be for scoped_refptr to work with it), I think we should just\n> pass the webrtc_logging_message_filter() call directly here and not use\n> Unretained().\n\nYes it's ref counted. Done.\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/43001/content/renderer/webrtc_logging_handler_impl.cc\nFile content/renderer/webrtc_logging_handler_impl.cc (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/43001/content/renderer/webrtc_logging_handler_impl.cc#newcode50\ncontent/renderer/webrtc_logging_handler_impl.cc:50: NOTIMPLEMENTED();\nOn 2013/04/26 18:05:53, tommi wrote:\n> remove this?\n\nYes. Done.","disapproval":false,"date":"2013-04-29 09:45:27.308380","approval":false},{"sender":"jamesr@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/52001/content/renderer/webrtc_logging_handler_impl.h\nFile content/renderer/webrtc_logging_handler_impl.h (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/52001/content/renderer/webrtc_logging_handler_impl.h#newcode27\ncontent/renderer/webrtc_logging_handler_impl.h:27: class CONTENT_EXPORT WebRtcLoggingHandlerImpl\nis there a particular reason this class is in content/renderer/ and not in content/renderer/media/ with the rest of the webrtc-specific files? ditto for webrtc_logging_message_filter","disapproval":false,"date":"2013-04-29 18:27:44.753430","approval":false},{"sender":"jamesr@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"I don't want to block you on OWNERS forever but I also definitely don't understand what is going on with these patches well enough to give a good review.","disapproval":false,"date":"2013-04-30 00:02:23.646270","approval":false},{"sender":"grunell@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://chromiumcodereview.appspot.com/13976016/diff/52001/content/renderer/webrtc_logging_handler_impl.h\nFile content/renderer/webrtc_logging_handler_impl.h (right):\n\nhttps://chromiumcodereview.appspot.com/13976016/diff/52001/content/renderer/webrtc_logging_handler_impl.h#newcode27\ncontent/renderer/webrtc_logging_handler_impl.h:27: class CONTENT_EXPORT WebRtcLoggingHandlerImpl\nOn 2013/04/29 18:27:44, jamesr wrote:\n> is there a particular reason this class is in content/renderer/ and not in\n> content/renderer/media/ with the rest of the webrtc-specific files? ditto for\n> webrtc_logging_message_filter\n\nNot really. Created another CL to move them to media/","disapproval":false,"date":"2013-05-02 11:59:57.639640","approval":false},{"sender":"grunell@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"On 2013/04/30 00:02:23, jamesr wrote:\n> I don't want to block you on OWNERS forever but I also definitely don't\n> understand what is going on with these patches well enough to give a good\n> review.\n\nJames, you can review only content/renderer/render_thread_impl.h\nThe rest of the files will be moved to media/","disapproval":false,"date":"2013-05-06 08:37:55.264870","approval":false},{"sender":"jamesr@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"content/renderer/render_thread_impl lgtm","disapproval":false,"date":"2013-05-06 17:45:53.520970","approval":true},{"sender":"commit-bot@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/grunell@chromium.org/13976016/65001","disapproval":false,"date":"2013-05-07 13:02:58.866350","approval":false},{"sender":"commit-bot@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"Failed to apply patch for content/renderer/media/webrtc_logging_handler_impl.h:\nWhile running patch -p1 --forward --force --no-backup-if-mismatch;\n  patching file content/renderer/media/webrtc_logging_handler_impl.h\n  Hunk #2 FAILED at 26.\n  1 out of 3 hunks FAILED -- saving rejects to file content/renderer/media/webrtc_logging_handler_impl.h.rej\n\nPatch:       content/renderer/media/webrtc_logging_handler_impl.h\nIndex: content/renderer/media/webrtc_logging_handler_impl.h\ndiff --git a/content/renderer/media/webrtc_logging_handler_impl.h b/content/renderer/media/webrtc_logging_handler_impl.h\nindex c2cb09ebece5497ea557a5d1311ebf4a0da94ac9..78a6d2f872838b26007e42ee7ee04a24f7ca6797 100644\n--- a/content/renderer/media/webrtc_logging_handler_impl.h\n+++ b/content/renderer/media/webrtc_logging_handler_impl.h\n@@ -8,6 +8,7 @@\n #include <string>\n \n #include \"base/shared_memory.h\"\n+#include \"base/threading/non_thread_safe.h\"\n #include \"content/common/content_export.h\"\n #include \"ipc/ipc_channel_proxy.h\"\n #include \"third_party/libjingle/overrides/logging/log_message_delegate.h\"\n@@ -25,11 +26,11 @@ class WebRtcLoggingMessageFilter;\n // WebRtcLoggingHandlerHost and receives logging messages from libjingle and\n // writes them to a shared memory buffer.\n class CONTENT_EXPORT WebRtcLoggingHandlerImpl\n-    : public talk_base::LogMessageDelegate {\n+    : public talk_base::LogMessageDelegate,\n+      public base::NonThreadSafe {\n  public:\n   WebRtcLoggingHandlerImpl(\n-      const scoped_refptr<WebRtcLoggingMessageFilter>& message_filter,\n-      const scoped_refptr<base::MessageLoopProxy>& io_message_loop);\n+      const scoped_refptr<WebRtcLoggingMessageFilter>& message_filter);\n \n   virtual ~WebRtcLoggingHandlerImpl();\n \n@@ -44,8 +45,9 @@ class CONTENT_EXPORT WebRtcLoggingHandlerImpl\n   void OnOpenLogFailed();\n \n  private:\n-  scoped_refptr<WebRtcLoggingMessageFilter> message_filter_;\n+  void DoLogMessage(const std::string& message);\n \n+  scoped_refptr<WebRtcLoggingMessageFilter> message_filter_;\n   scoped_refptr<base::MessageLoopProxy> io_message_loop_;\n \n   DISALLOW_COPY_AND_ASSIGN(WebRtcLoggingHandlerImpl);","disapproval":false,"date":"2013-05-07 13:03:03.412980","approval":false},{"sender":"commit-bot@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/grunell@chromium.org/13976016/83001","disapproval":false,"date":"2013-05-21 14:58:40.233570","approval":false},{"sender":"commit-bot@chromium.org","recipients":["grunell@chromium.org","tommi@chromium.org","jamesr@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"Change committed as 201335","disapproval":false,"date":"2013-05-21 19:03:02.253000","approval":false}],"owner_email":"grunell@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"Henrik Grunell","subject":"Adding parsing of constraint to enable WebRTC logging.","created":"2013-04-21 11:44:42.654300","patchsets":[1,8001,8002,19001,27001,29001,35003,43001,52001,65001,75001,83001],"modified":"2013-05-21 19:03:02.253000","closed":true,"commit":false,"issue":13976016}