{"files":{"media/base/pipeline.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":0,"messages":[],"id":8,"is_binary":false},"media/base/pipeline.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":0,"messages":[],"id":7,"is_binary":false},"media/base/mock_filters.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":5,"messages":[],"id":6,"is_binary":false},"media/base/pipeline_unittest.cc":{"status":"M","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":263,"num_removed":0,"messages":[{"author":"Ami Fischman","author_email":"fischman@chromium.org","text":"s/1//","draft":false,"lineno":53,"date":"2012-08-08 23:43:55.863570","left":false},{"author":"Ami Fischman","author_email":"fischman@chromium.org","text":"I read your TODO above, but AFAICT these are only used to signal when you want the Stop to be triggered.  So in fact they can be unified into\nenum SeekDancePhase { kPause, kFlush, kSeek };\nand then the methods below turn into\nvoid TestStopOrErrorDuringSeekDance(SeekDancePhase, StopOrError);\nwith an\nenum StopOrError { kStop, kError };\n\nOnce you do that, then it's unclear to me why not just fully parameterize the tests; this test helper then just takes the state of the pipeline (playing/not) and the phase in which to trigger stop, and goes to town.","draft":false,"lineno":313,"date":"2012-08-08 23:43:55.863960","left":false},{"author":"Ami Fischman","author_email":"fischman@chromium.org","text":"Ditto.","draft":false,"lineno":319,"date":"2012-08-08 23:43:55.864250","left":false},{"author":"Ami Fischman","author_email":"fischman@chromium.org","text":"Isn't this just RunPipelineStatusCB1()?","draft":false,"lineno":346,"date":"2012-08-08 23:43:55.864550","left":false},{"author":"scherkus","author_email":"scherkus@chromium.org","text":"On 2012/08/08 23:43:55, Ami Fischman wrote:\n> s/1//\n\nI swore we had other versions around but I guess I deleted them all","draft":false,"lineno":53,"date":"2012-08-09 01:18:19.248980","left":false},{"author":"scherkus","author_email":"scherkus@chromium.org","text":"On 2012/08/08 23:43:55, Ami Fischman wrote:\n> I read your TODO above, but AFAICT these are only used to signal when you want\n> the Stop to be triggered.  So in fact they can be unified into\n> enum SeekDancePhase { kPause, kFlush, kSeek };\n> and then the methods below turn into\n> void TestStopOrErrorDuringSeekDance(SeekDancePhase, StopOrError);\n> with an\n> enum StopOrError { kStop, kError };\n> \n> Once you do that, then it's unclear to me why not just fully parameterize the\n> tests; this test helper then just takes the state of the pipeline (playing/not)\n> and the phase in which to trigger stop, and goes to town.\n\nTook a stab but I strongly dislike how gtest parameterized tests look on the console so I manually instantiated them myself","draft":false,"lineno":313,"date":"2012-08-09 01:18:19.249520","left":false},{"author":"scherkus","author_email":"scherkus@chromium.org","text":"On 2012/08/08 23:43:55, Ami Fischman wrote:\n> Isn't this just RunPipelineStatusCB1()?\n\nDone.","draft":false,"lineno":346,"date":"2012-08-09 01:18:19.249930","left":false},{"author":"Ami Fischman","author_email":"fischman@chromium.org","text":"On 2012/08/09 01:18:19, scherkus wrote:\n> On 2012/08/08 23:43:55, Ami Fischman wrote:\n> > I read your TODO above, but AFAICT these are only used to signal when you want\n> > the Stop to be triggered.  So in fact they can be unified into\n> > enum SeekDancePhase { kPause, kFlush, kSeek };\n> > and then the methods below turn into\n> > void TestStopOrErrorDuringSeekDance(SeekDancePhase, StopOrError);\n> > with an\n> > enum StopOrError { kStop, kError };\n> > \n> > Once you do that, then it's unclear to me why not just fully parameterize the\n> > tests; this test helper then just takes the state of the pipeline\n> (playing/not)\n> > and the phase in which to trigger stop, and goes to town.\n> \n> Took a stab but I strongly dislike how gtest parameterized tests look on the\n> console so I manually instantiated them myself\n\nYeah, I didn't mean TEST_P necessarily.","draft":false,"lineno":313,"date":"2012-08-09 04:41:43.612790","left":false}],"id":9,"is_binary":false}},"owner_email":"scherkus@chromium.org","owner":"scherkus","message":"helpers galore","try_job_results":[],"created":"2012-08-08 22:12:56.011400","url":null,"num_comments":8,"modified":"2012-08-09 04:41:43.728450","patchset":6001,"issue":10832197}