{"files":{"content/test/net/url_request_prepackaged_interceptor.cc":{"status":"A","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":144,"num_removed":0,"messages":[{"author":"mmenke","author_email":"mmenke@chromium.org","text":"BrowserThread::CurrentlyOn(BrowserThread::IO)?","draft":false,"lineno":36,"date":"2012-12-11 17:22:38.494520","left":false},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"May actually want to use CHECK here.  If we're on the wrong thread, things have gone badly wrong in the test framework.","draft":false,"lineno":62,"date":"2012-12-11 17:22:38.494870","left":false},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"nit:  Fix indent.","draft":false,"lineno":65,"date":"2012-12-11 17:22:38.495230","left":false},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"Suggest moving this to just before ReadFileToString, as that seems to be the only place it's needed.","draft":false,"lineno":70,"date":"2012-12-11 17:22:38.495520","left":false},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"Can we just use a \"URLRequestMockHTTPJob\" here?","draft":false,"lineno":92,"date":"2012-12-11 17:22:38.495850","left":false},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"Suggest a DCHECK_EQ on url.hostname","draft":false,"lineno":124,"date":"2012-12-11 17:22:38.496180","left":false},{"author":"pauljensen","author_email":"pauljensen@chromium.org","text":"On 2012/12/11 17:22:38, Matt Menke wrote:\n> Can we just use a \"URLRequestMockHTTPJob\" here?\nI tried for a while to use URLRequestMockHTTPJob but this required adding lots of *.mock-http-headers files as the update logic requires HTTP 200 response codes.  I was fine with adding these files until it came to a new test that was just added that creates files in a uniquely named temporary directory.  Programmatically creating the .mock-http-headers for that test just seemed like too much circumvention logic.  So I did what AutoUpdateInterceptor used to do, and just made a tiny URLRequestJob class that inherited from URLRequestFileJob and added the 200 response code.  This way the file I/O is done nicely on the appropriate thread and we don't need the second ScopedAllowIO.\n","draft":false,"lineno":92,"date":"2012-12-17 16:26:49.903060","left":false},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"On 2012/12/17 16:26:49, pauljensen wrote:\n> On 2012/12/11 17:22:38, Matt Menke wrote:\n> > Can we just use a \"URLRequestMockHTTPJob\" here?\n> I tried for a while to use URLRequestMockHTTPJob but this required adding lots\n> of *.mock-http-headers files as the update logic requires HTTP 200 response\n> codes.  I was fine with adding these files until it came to a new test that was\n> just added that creates files in a uniquely named temporary directory. \n> Programmatically creating the .mock-http-headers for that test just seemed like\n> too much circumvention logic.  So I did what AutoUpdateInterceptor used to do,\n> and just made a tiny URLRequestJob class that inherited from URLRequestFileJob\n> and added the 200 response code.  This way the file I/O is done nicely on the\n> appropriate thread and we don't need the second ScopedAllowIO.\n\nCould just fix URLRequestMockHTTPJob to use a nice set of default headers.","draft":false,"lineno":92,"date":"2012-12-18 20:32:15.077270","left":false},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"On 2012/12/18 20:32:15, Matt Menke wrote:\n> On 2012/12/17 16:26:49, pauljensen wrote:\n> > On 2012/12/11 17:22:38, Matt Menke wrote:\n> > > Can we just use a \"URLRequestMockHTTPJob\" here?\n> > I tried for a while to use URLRequestMockHTTPJob but this required adding lots\n> > of *.mock-http-headers files as the update logic requires HTTP 200 response\n> > codes.  I was fine with adding these files until it came to a new test that\n> was\n> > just added that creates files in a uniquely named temporary directory. \n> > Programmatically creating the .mock-http-headers for that test just seemed\n> like\n> > too much circumvention logic.  So I did what AutoUpdateInterceptor used to do,\n> > and just made a tiny URLRequestJob class that inherited from URLRequestFileJob\n> > and added the 200 response code.  This way the file I/O is done nicely on the\n> > appropriate thread and we don't need the second ScopedAllowIO.\n> \n> Could just fix URLRequestMockHTTPJob to use a nice set of default headers.\n\nBTW - no need to worry about that now.  Your solution is fine.  (Thought I removed the comment).","draft":false,"lineno":92,"date":"2012-12-19 16:21:21.793380","left":false}],"id":47034,"is_binary":false},"chrome/browser/component_updater/component_updater_interceptor.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":65,"messages":[],"id":47001,"is_binary":false},"net/url_request/protocol_intercept_job_factory.h":{"status":"A +","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":16,"num_removed":13,"messages":[{"author":"mmenke","author_email":"mmenke@chromium.org","text":"Since we're taking ownership of protocol_handler just like job_factory, shouldn't they both be scoped_ptrs?","draft":false,"lineno":28,"date":"2012-12-11 17:22:38.497850","left":false}],"id":47039,"is_binary":false},"content/test/net/url_request_abort_on_end_job.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":6,"messages":[],"id":47033,"is_binary":false},"chrome/browser/profiles/off_the_record_profile_io_data.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":12,"num_removed":13,"messages":[],"id":47023,"is_binary":false},"chrome/browser/net/http_intercept_job_factory.cc":{"status":"D","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":82,"messages":[],"id":47005,"is_binary":false},"content/content_tests.gypi":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":0,"messages":[],"id":47031,"is_binary":false},"android_webview/native/cookie_manager.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":2,"messages":[{"author":"mmenke","author_email":"mmenke@chromium.org","text":"While you're here, please remove the semi-colon.","draft":false,"lineno":21,"date":"2012-12-11 17:22:38.493130","left":false}],"id":47012,"is_binary":false},"chrome/browser/extensions/autoupdate_interceptor.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":100,"messages":[],"id":47003,"is_binary":false},"chrome/chrome_tests_unit.gypi":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":2,"messages":[],"id":47030,"is_binary":false},"chrome/browser/extensions/api/management/management_browsertest.cc":{"status":"M","num_chunks":8,"no_base_file":false,"property_changes":"","num_added":18,"num_removed":23,"messages":[],"id":47015,"is_binary":false},"android_webview/native/net_init_native_callback.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":4,"messages":[{"author":"mmenke","author_email":"mmenke@chromium.org","text":"I think having an \"OnBlah\" function return a value is pretty confusing and unexpected.  It's not at all clear from the name just what it's actually returning.\n\nMaybe CreateAndroidJobFactoryAndInitializeContext?  I'm open to better ideas.","draft":false,"lineno":13,"date":"2012-12-11 17:22:38.493480","left":false},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"nit:  While you're here, this should have a \"// namespace android_webview\"","draft":false,"lineno":21,"date":"2012-12-11 17:22:38.493810","left":false}],"id":47013,"is_binary":false},"net/url_request/url_request_test_util.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":9,"messages":[{"author":"mmenke","author_email":"mmenke@chromium.org","text":"Interceptor -> ProtocolHandler.","draft":false,"lineno":303,"date":"2012-12-11 17:22:38.498530","left":false}],"id":47045,"is_binary":false},"chrome/browser/net/connect_interceptor.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":10,"num_removed":12,"messages":[],"id":47019,"is_binary":false},"chrome/browser/extensions/autoupdate_interceptor.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":51,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"Why is this not marked [D]eleted?","draft":false,"lineno":1,"date":"2012-12-11 19:23:34.784880","left":true}],"id":47004,"is_binary":false},"net/url_request/url_request_filter_unittest.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":28,"messages":[{"author":"mmenke","author_email":"mmenke@chromium.org","text":"For the sake of completeness, suggest either turning one of these into a ProtocolHandler, or adding a ProtocolHandler.","draft":false,"lineno":36,"date":"2012-12-11 17:22:38.498190","left":false}],"id":47043,"is_binary":false},"net/url_request/protocol_intercept_job_factory.cc":{"status":"A +","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":19,"num_removed":27,"messages":[],"id":47038,"is_binary":false},"chrome/browser/component_updater/component_updater_interceptor.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":60,"messages":[{"author":"mmenke","author_email":"mmenke@chromium.org","text":"Hmm...This file is labelled \"M\" rather than \"D\".","draft":false,"lineno":3,"date":"2012-12-11 17:22:38.494150","left":true},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"On 2012/12/11 17:22:38, Matt Menke wrote:\n> Hmm...This file is labelled \"M\" rather than \"D\".\n\nClarification:  In the list of changed files, it's marked as modified rather than deleted.","draft":false,"lineno":3,"date":"2012-12-11 19:18:25.702260","left":true},{"author":"pauljensen","author_email":"pauljensen@chromium.org","text":"On 2012/12/11 17:22:38, Matt Menke wrote:\n> Hmm...This file is labelled \"M\" rather than \"D\".\nYa I've noticed this.  \"git cl patch 11293252\" deletes the file...so I'm not sure what's up.  I can't \"git rm\" the file because the file isn't there.\n","draft":false,"lineno":3,"date":"2012-12-11 21:22:55.256190","left":true}],"id":47002,"is_binary":false},"chrome/browser/extensions/extension_disabled_ui_browsertest.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":5,"messages":[],"id":47016,"is_binary":false},"chrome/browser/printing/print_dialog_cloud_interative_uitest.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":17,"num_removed":5,"messages":[],"id":47022,"is_binary":false},"android_webview/browser/net/aw_url_request_context_getter.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":3,"messages":[],"id":47007,"is_binary":false},"chrome/browser/policy/device_management_service_browsertest.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":72,"num_removed":49,"messages":[],"id":47020,"is_binary":false},"android_webview/native/cookie_manager.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":3,"messages":[],"id":47011,"is_binary":false},"webkit/tools/test_shell/test_shell.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":0,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"Whoa! What's this global here? I've never seen this in all my years on the team. Let's kill this (I'm not saying you have to do this in this CL, just remarking this so our team can keep it in mind).","draft":false,"lineno":172,"date":"2012-12-11 19:23:34.785180","left":false},{"author":"pauljensen","author_email":"pauljensen@chromium.org","text":"On 2012/12/11 19:23:34, willchan wrote:\n> Whoa! What's this global here? I've never seen this in all my years on the team.\n> Let's kill this (I'm not saying you have to do this in this CL, just remarking\n> this so our team can keep it in mind).\nYa, not only is it an icky global singleton but it also uses  the URLRequest::Deprecated::RegisterProtocolFactory() interface...  Erik and I had already planned on changing it to be a ProtocolHandler or something similar in the long-term of this refactoring project; a change which would likely necessitate it not being a global singleton.\n","draft":false,"lineno":172,"date":"2012-12-11 21:22:55.256410","left":false}],"id":47047,"is_binary":false},"chrome/browser/net/connect_interceptor.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":13,"num_removed":13,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"No, this ConnectInterceptor is all wrong :) When cleaning it up we should Do It Right (TM) :P\n\nIf you look at this function, you'll see it *always* returns NULL. The purpose of this interceptor is to *observe*, not to create jobs. In other words, it's abusing the interceptor interface. Rather than reworking it into a URLRequestJobFactory, we should use the ChromeNetworkDelegate instead.","draft":false,"lineno":42,"date":"2012-12-11 19:14:38.045260","left":false},{"author":"pauljensen","author_email":"pauljensen@chromium.org","text":"On 2012/12/11 19:14:38, willchan wrote:\n> No, this ConnectInterceptor is all wrong :) When cleaning it up we should Do It\n> Right (TM) :P\n> \n> If you look at this function, you'll see it *always* returns NULL. The purpose\n> of this interceptor is to *observe*, not to create jobs. In other words, it's\n> abusing the interceptor interface. Rather than reworking it into a\n> URLRequestJobFactory, we should use the ChromeNetworkDelegate instead.\nRight now the ConnectionInterceptor is installed into the URLRequestJobFactoryImpl for the extension_context (and most other contexts) but the ChromeNetworkDelegate is not installed in the extension_context.\nThe ConnectionInterceptor is part of the whole predictor framework so I assume it's most important that it watches URLs going through the main_context but I don't know if this difference with the extension_context matters.  The comment by GetRequestContextForExtensions() says \"This is only used for a separate cookie store currently.\" making me think this isn't a big deal.  Do you guys think it should be okay to move ConnectionInterceptor into ChromeNetworkDelegate and not worry about this difference?  There are other alternatives.\n","draft":false,"lineno":42,"date":"2012-12-11 22:28:14.668300","left":false},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"On 2012/12/11 22:28:14, pauljensen wrote:\n> On 2012/12/11 19:14:38, willchan wrote:\n> > No, this ConnectInterceptor is all wrong :) When cleaning it up we should Do\n> It\n> > Right (TM) :P\n> > \n> > If you look at this function, you'll see it *always* returns NULL. The purpose\n> > of this interceptor is to *observe*, not to create jobs. In other words, it's\n> > abusing the interceptor interface. Rather than reworking it into a\n> > URLRequestJobFactory, we should use the ChromeNetworkDelegate instead.\n> Right now the ConnectionInterceptor is installed into the\n> URLRequestJobFactoryImpl for the extension_context (and most other contexts) but\n> the ChromeNetworkDelegate is not installed in the extension_context.\n> The ConnectionInterceptor is part of the whole predictor framework so I assume\n> it's most important that it watches URLs going through the main_context but I\n> don't know if this difference with the extension_context matters.  The comment\n> by GetRequestContextForExtensions() says \"This is only used for a separate\n> cookie store currently.\" making me think this isn't a big deal.  Do you guys\n> think it should be okay to move ConnectionInterceptor into ChromeNetworkDelegate\n> and not worry about this difference?  There are other alternatives.\n\nI think that's fine for now, though should be done in another CL  (Which is what I assume you were thinking anyways, as you removed the files from this one).","draft":false,"lineno":42,"date":"2012-12-13 16:12:04.415740","left":false},{"author":"pauljensen","author_email":"pauljensen@chromium.org","text":"On 2012/12/13 16:12:04, Matt Menke wrote:\n> On 2012/12/11 22:28:14, pauljensen wrote:\n> > On 2012/12/11 19:14:38, willchan wrote:\n> > > No, this ConnectInterceptor is all wrong :) When cleaning it up we should Do\n> > It\n> > > Right (TM) :P\n> > > \n> > > If you look at this function, you'll see it *always* returns NULL. The\n> purpose\n> > > of this interceptor is to *observe*, not to create jobs. In other words,\n> it's\n> > > abusing the interceptor interface. Rather than reworking it into a\n> > > URLRequestJobFactory, we should use the ChromeNetworkDelegate instead.\n> > Right now the ConnectionInterceptor is installed into the\n> > URLRequestJobFactoryImpl for the extension_context (and most other contexts)\n> but\n> > the ChromeNetworkDelegate is not installed in the extension_context.\n> > The ConnectionInterceptor is part of the whole predictor framework so I assume\n> > it's most important that it watches URLs going through the main_context but I\n> > don't know if this difference with the extension_context matters.  The comment\n> > by GetRequestContextForExtensions() says \"This is only used for a separate\n> > cookie store currently.\" making me think this isn't a big deal.  Do you guys\n> > think it should be okay to move ConnectionInterceptor into\n> ChromeNetworkDelegate\n> > and not worry about this difference?  There are other alternatives.\n> \n> I think that's fine for now, though should be done in another CL  (Which is what\n> I assume you were thinking anyways, as you removed the files from this one).\nSorry, I'm confused.\nWhat is fine for now? Moving ConnectionInterceptor to the ChromeNetworkDelegate in another CL and not worrying about the fact that it's not connected to the extension_context?\nWhat files did I remove from this one?\n\n","draft":false,"lineno":42,"date":"2012-12-13 17:53:30.259020","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"On 2012/12/13 17:53:30, pauljensen wrote:\n> On 2012/12/13 16:12:04, Matt Menke wrote:\n> > On 2012/12/11 22:28:14, pauljensen wrote:\n> > > On 2012/12/11 19:14:38, willchan wrote:\n> > > > No, this ConnectInterceptor is all wrong :) When cleaning it up we should\n> Do\n> > > It\n> > > > Right (TM) :P\n> > > > \n> > > > If you look at this function, you'll see it *always* returns NULL. The\n> > purpose\n> > > > of this interceptor is to *observe*, not to create jobs. In other words,\n> > it's\n> > > > abusing the interceptor interface. Rather than reworking it into a\n> > > > URLRequestJobFactory, we should use the ChromeNetworkDelegate instead.\n> > > Right now the ConnectionInterceptor is installed into the\n> > > URLRequestJobFactoryImpl for the extension_context (and most other contexts)\n> > but\n> > > the ChromeNetworkDelegate is not installed in the extension_context.\n> > > The ConnectionInterceptor is part of the whole predictor framework so I\n> assume\n> > > it's most important that it watches URLs going through the main_context but\n> I\n> > > don't know if this difference with the extension_context matters.  The\n> comment\n> > > by GetRequestContextForExtensions() says \"This is only used for a separate\n> > > cookie store currently.\" making me think this isn't a big deal.  Do you guys\n> > > think it should be okay to move ConnectionInterceptor into\n> > ChromeNetworkDelegate\n> > > and not worry about this difference?  There are other alternatives.\n> > \n> > I think that's fine for now, though should be done in another CL  (Which is\n> what\n> > I assume you were thinking anyways, as you removed the files from this one).\n> Sorry, I'm confused.\n> What is fine for now? Moving ConnectionInterceptor to the ChromeNetworkDelegate\n> in another CL and not worrying about the fact that it's not connected to the\n> extension_context?\n> What files did I remove from this one?\n> \n\nSo, long-term we need to start refactoring ChromeNetworkDelegate. We've kinda overloaded it now. It's shared by the \"system\" URLRequestContext, the profiles' main & app URLRequestContexts, but not the extension one. What we want to do is probably use composition here to share behavior across different NetworkDelegate implementations.\n\nBut I didn't answer your question yet. AIUI, the extension context is purely for the chrome-extension:// to override the CookieStore. So it's not a big deal not to let ConnectionInterceptor hook it. Long-term, I imagine the CookieStore being part of the dependencies passed directly into a ProtocolHandler, so there won't be a need to create a whole new URLRequestContext just for extensions.\n\nMake sense? If people agree, can y'all file bugs? Don't need to sign up to tackle it yourselves unless you'd like to. I have some other folks who may be interested, but you're doing such a great job here I'd rather you continue to kick ass and take names :)\n\nI defer to the main reviewers about whether or not such work would make sense to be done in this CL or another.","draft":false,"lineno":42,"date":"2012-12-13 17:59:53.979380","left":false},{"author":"pauljensen","author_email":"pauljensen@chromium.org","text":"On 2012/12/13 17:59:53, willchan wrote:\n> On 2012/12/13 17:53:30, pauljensen wrote:\n> > On 2012/12/13 16:12:04, Matt Menke wrote:\n> > > On 2012/12/11 22:28:14, pauljensen wrote:\n> > > > On 2012/12/11 19:14:38, willchan wrote:\n> > > > > No, this ConnectInterceptor is all wrong :) When cleaning it up we\n> should\n> > Do\n> > > > It\n> > > > > Right (TM) :P\n> > > > > \n> > > > > If you look at this function, you'll see it *always* returns NULL. The\n> > > purpose\n> > > > > of this interceptor is to *observe*, not to create jobs. In other words,\n> > > it's\n> > > > > abusing the interceptor interface. Rather than reworking it into a\n> > > > > URLRequestJobFactory, we should use the ChromeNetworkDelegate instead.\n> > > > Right now the ConnectionInterceptor is installed into the\n> > > > URLRequestJobFactoryImpl for the extension_context (and most other\n> contexts)\n> > > but\n> > > > the ChromeNetworkDelegate is not installed in the extension_context.\n> > > > The ConnectionInterceptor is part of the whole predictor framework so I\n> > assume\n> > > > it's most important that it watches URLs going through the main_context\n> but\n> > I\n> > > > don't know if this difference with the extension_context matters.  The\n> > comment\n> > > > by GetRequestContextForExtensions() says \"This is only used for a separate\n> > > > cookie store currently.\" making me think this isn't a big deal.  Do you\n> guys\n> > > > think it should be okay to move ConnectionInterceptor into\n> > > ChromeNetworkDelegate\n> > > > and not worry about this difference?  There are other alternatives.\n> > > \n> > > I think that's fine for now, though should be done in another CL  (Which is\n> > what\n> > > I assume you were thinking anyways, as you removed the files from this one).\n> > Sorry, I'm confused.\n> > What is fine for now? Moving ConnectionInterceptor to the\n> ChromeNetworkDelegate\n> > in another CL and not worrying about the fact that it's not connected to the\n> > extension_context?\n> > What files did I remove from this one?\n> > \n> \n> So, long-term we need to start refactoring ChromeNetworkDelegate. We've kinda\n> overloaded it now. It's shared by the \"system\" URLRequestContext, the profiles'\n> main & app URLRequestContexts, but not the extension one. What we want to do is\n> probably use composition here to share behavior across different NetworkDelegate\n> implementations.\n> \n> But I didn't answer your question yet. AIUI, the extension context is purely for\n> the chrome-extension:// to override the CookieStore. So it's not a big deal not\n> to let ConnectionInterceptor hook it. Long-term, I imagine the CookieStore being\n> part of the dependencies passed directly into a ProtocolHandler, so there won't\n> be a need to create a whole new URLRequestContext just for extensions.\n> \n> Make sense? If people agree, can y'all file bugs? Don't need to sign up to\n> tackle it yourselves unless you'd like to. I have some other folks who may be\n> interested, but you're doing such a great job here I'd rather you continue to\n> kick ass and take names :)\n> \n> I defer to the main reviewers about whether or not such work would make sense to\n> be done in this CL or another.\nIf I move ConnectionInterceptor into the ChromeNetworkDelegate in this CL I can yank out all my changes to pass around the URLRequestJobFactories through SetupJobFactory() and SetupJobFactoryDefaults().  Just sayin' :)  I'll also defer to the main reviewers to make the call.\n","draft":false,"lineno":42,"date":"2012-12-13 18:21:54.318170","left":false}],"id":47018,"is_binary":false},"chrome/browser/extensions/user_script_listener_unittest.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":13,"num_removed":6,"messages":[],"id":47017,"is_binary":false},"chrome/browser/policy/policy_browsertest.cc":{"status":"M","num_chunks":7,"no_base_file":false,"property_changes":"","num_added":58,"num_removed":21,"messages":[],"id":47021,"is_binary":false},"chrome/browser/profiles/profile_impl_io_data.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":6,"messages":[],"id":47025,"is_binary":false},"chrome/browser/component_updater/test/component_updater_service_unittest.cc":{"status":"M","num_chunks":12,"no_base_file":false,"property_changes":"","num_added":22,"num_removed":33,"messages":[],"id":47014,"is_binary":false},"android_webview/native/android_protocol_handler.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":2,"messages":[],"id":47010,"is_binary":false},"net/url_request/url_request_unittest.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":5,"messages":[],"id":47046,"is_binary":false},"net/net.gyp":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":0,"messages":[],"id":47036,"is_binary":false},"chrome/chrome_browser.gypi":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":2,"messages":[],"id":47028,"is_binary":false},"content/test/net/url_request_abort_on_end_job.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":19,"num_removed":12,"messages":[],"id":47032,"is_binary":false},"chrome/chrome_tests.gypi":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":2,"messages":[],"id":47029,"is_binary":false},"chrome/browser/profiles/profile_io_data.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":2,"messages":[],"id":47026,"is_binary":false},"net/url_request/url_request_filter.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":31,"num_removed":2,"messages":[],"id":47041,"is_binary":false},"chrome/browser/profiles/profile_impl_io_data.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":32,"num_removed":26,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"s/handles/handlers/","draft":false,"lineno":561,"date":"2012-12-11 19:14:38.045470","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"Now that you're returning it, perhas we should rename to CreateJobFactory()","draft":false,"lineno":568,"date":"2012-12-11 19:14:38.045670","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"Ditto here. Maybe this should be CreateDefaultJobFactory()","draft":false,"lineno":675,"date":"2012-12-11 19:14:38.045890","left":false}],"id":47024,"is_binary":false},"android_webview/browser/net/init_native_callback.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":5,"num_removed":2,"messages":[],"id":47008,"is_binary":false},"net/url_request/url_request_test_util.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":16,"messages":[],"id":47044,"is_binary":false},"net/url_request/url_request_filter.h":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":12,"num_removed":1,"messages":[],"id":47042,"is_binary":false},"content/test/net/url_request_prepackaged_interceptor.h":{"status":"A","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":48,"num_removed":0,"messages":[{"author":"mmenke","author_email":"mmenke@chromium.org","text":"nit:  Could use a single line here and above.","draft":false,"lineno":33,"date":"2012-12-11 17:22:38.496530","left":false},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"Think it's worth mentioning that after creation, this lives on the IO thread, and a task to delete it is posted on destruction of |this|.","draft":false,"lineno":41,"date":"2012-12-11 17:22:38.496900","left":false}],"id":47035,"is_binary":false},"android_webview/native/android_protocol_handler.cc":{"status":"M","num_chunks":6,"no_base_file":false,"property_changes":"","num_added":21,"num_removed":28,"messages":[{"author":"mmenke","author_email":"mmenke@chromium.org","text":"Since we're creating a new factory, I think this function name is a bit of a misnomer.\n\n\"CreateAndroidRequestJobFactoryOnIOThread\"?  Or maybe just \"CreateAndroidRequestJobFactory\"?","draft":false,"lineno":231,"date":"2012-12-11 17:22:38.492420","left":false},{"author":"mmenke","author_email":"mmenke@chromium.org","text":"While we're here, looks like we don't need |context|.","draft":false,"lineno":232,"date":"2012-12-11 17:22:38.492790","left":false}],"id":47009,"is_binary":false},"net/proxy/proxy_script_fetcher_impl_unittest.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":17,"messages":[{"author":"mmenke","author_email":"mmenke@chromium.org","text":"optional:  This certainly works, but I think storing the temporary in url_request_job_factory_ makes the code a little harder to follow.\n\nWhy not just use\n\"scoped_ptr<URLRequestJobFactory>(new URLRequestJobFactoryImpl)\" here?  If you prefer your code, that's fine.","draft":false,"lineno":84,"date":"2012-12-11 17:22:38.497520","left":false}],"id":47037,"is_binary":false},"net/url_request/url_request.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":4,"messages":[],"id":47040,"is_binary":false},"chrome/browser/net/http_intercept_job_factory.h":{"status":"D","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":56,"messages":[],"id":47006,"is_binary":false},"chrome/browser/profiles/profile_io_data.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":2,"messages":[],"id":47027,"is_binary":false}},"owner_email":"pauljensen@chromium.org","owner":"pauljensen","message":"Address erikwright's third round of comments","try_job_results":[],"created":"2012-12-09 23:12:30.893910","url":null,"num_comments":35,"modified":"2012-12-19 16:21:21.832270","patchset":46001,"issue":11293252}