{"description":"AddPreload checks alias URLs of existing PrerenderContents.\n\nAlso, added some OVERLOAD flags and a few other nits.\n\nBUG=None\nTEST=unit_tests --gtest_filter=\"*PrerenderManager*\"\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=75760","cc":["chromium-reviews@chromium.org","cbentzel+watch@chromium.org","phajdan.jr@chromium.org"],"reviewers":["tburkard@chromium.org"],"messages":[{"sender":"cbentzel@chromium.org","recipients":["cbentzel@chromium.org","tburkard@chromium.org","chromium-reviews@chromium.org","cbentzel+watch@chromium.org","phajdan.jr@chromium.org"],"text":"This was mainly throwing spaghetti at the wall to understand the SSL test failures - but it seems like a reasonable cleanup regardless.","disapproval":false,"date":"2011-02-18 20:05:32.923238","approval":false},{"sender":"tburkard@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"LGTM\n\nOn Fri, Feb 18, 2011 at 12:05 PM, <cbentzel@chromium.org> wrote:\n\n> Reviewers: tburkard,\n>\n> Message:\n> This was mainly throwing spaghetti at the wall to understand the SSL test\n> failures - but it seems like a reasonable cleanup regardless.\n>\n> Description:\n> AddPreload checks alias URLs of existing PrerenderContents.\n>\n> Also, added some OVERLOAD flags and a few other nits.\n>\n> BUG=None\n> TEST=unit_tests --gtest_filter=\"*PrerenderManager*\"\n>\n> Please review this at http://codereview.chromium.org/6469061/\n>\n> SVN Base: svn://svn.chromium.org/chrome/trunk/src\n>\n> Affected files:\n>  M chrome/browser/prerender/prerender_manager.h\n>  M chrome/browser/prerender/prerender_manager.cc\n>  M chrome/browser/prerender/prerender_manager_unittest.cc\n>\n>\n> Index: chrome/browser/prerender/prerender_manager.cc\n> diff --git a/chrome/browser/prerender/prerender_manager.cc\n> b/chrome/browser/prerender/prerender_manager.cc\n> index\n> 992c3252aef5d79142c68249fbbfe97a084f216a..4651b9745dca28dd31dbff8fbde56a437c9275f1\n> 100644\n> --- a/chrome/browser/prerender/prerender_manager.cc\n> +++ b/chrome/browser/prerender/prerender_manager.cc\n> @@ -46,13 +46,9 @@ bool PrerenderManager::IsPrerenderingEnabled() {\n>  struct PrerenderManager::PrerenderContentsData {\n>   PrerenderContents* contents_;\n>   base::Time start_time_;\n> -  GURL url_;\n> -  PrerenderContentsData(PrerenderContents* contents,\n> -                        base::Time start_time,\n> -                        GURL url)\n> +  PrerenderContentsData(PrerenderContents* contents, base::Time\n> start_time)\n>       : contents_(contents),\n> -        start_time_(start_time),\n> -        url_(url) {\n> +        start_time_(start_time) {\n>   }\n>  };\n>\n> @@ -78,20 +74,16 @@ void PrerenderManager::SetPrerenderContentsFactory(\n>   prerender_contents_factory_.reset(prerender_contents_factory);\n>  }\n>\n> -void PrerenderManager::AddPreload(const GURL& url,\n> +bool PrerenderManager::AddPreload(const GURL& url,\n>                                   const std::vector<GURL>& alias_urls,\n>                                   const GURL& referrer) {\n>   DCHECK(BrowserThread::CurrentlyOn(BrowserThread::UI));\n>   DeleteOldEntries();\n> -  // If the URL already exists in the set of preloaded URLs, don't do\n> anything.\n> -  for (std::list<PrerenderContentsData>::iterator it =\n> prerender_list_.begin();\n> -       it != prerender_list_.end();\n> -       ++it) {\n> -    if (it->url_ == url)\n> -      return;\n> -  }\n> +  if (FindEntry(url))\n> +    return false;\n> +  // TODO(cbentzel): Move invalid checks here instead of\n> PrerenderContents?\n>   PrerenderContentsData data(CreatePrerenderContents(url, alias_urls,\n> referrer),\n> -                             GetCurrentTime(), url);\n> +                             GetCurrentTime());\n>   prerender_list_.push_back(data);\n>   data.contents_->StartPrerendering();\n>   while (prerender_list_.size() > max_elements_) {\n> @@ -100,6 +92,7 @@ void PrerenderManager::AddPreload(const GURL& url,\n>     data.contents_->set_final_status(FINAL_STATUS_EVICTED);\n>     delete data.contents_;\n>   }\n> +  return true;\n>  }\n>\n>  void PrerenderManager::DeleteOldEntries() {\n> Index: chrome/browser/prerender/prerender_manager.h\n> diff --git a/chrome/browser/prerender/prerender_manager.h\n> b/chrome/browser/prerender/prerender_manager.h\n> index\n> 8ee64ef8bf82976b98c4cdfeeba2909e8dd67bab..962ef03018feb8e011d2324cd0dbb157ed4c80e3\n> 100644\n> --- a/chrome/browser/prerender/prerender_manager.h\n> +++ b/chrome/browser/prerender/prerender_manager.h\n> @@ -38,8 +38,9 @@ class PrerenderManager : public\n> base::RefCounted<PrerenderManager> {\n>   explicit PrerenderManager(Profile* profile);\n>\n>   // Preloads the URL supplied.  alias_urls indicates URLs that redirect\n> -  // to the same URL to be preloaded.\n> -  void AddPreload(const GURL& url, const std::vector<GURL>& alias_urls,\n> +  // to the same URL to be preloaded. Returns true if the URL was added,\n> +  // false if it was not.\n> +  bool AddPreload(const GURL& url, const std::vector<GURL>& alias_urls,\n>                   const GURL& referrer);\n>\n>   // For a given TabContents that wants to navigate to the URL supplied,\n> Index: chrome/browser/prerender/prerender_manager_unittest.cc\n> diff --git a/chrome/browser/prerender/prerender_manager_unittest.cc\n> b/chrome/browser/prerender/prerender_manager_unittest.cc\n> index\n> b07bd074e2ce0b99b3514347432232a5b2fc0cd5..181f0e8ce6a5e9d470f5eb121585594e35164542\n> 100644\n> --- a/chrome/browser/prerender/prerender_manager_unittest.cc\n> +++ b/chrome/browser/prerender/prerender_manager_unittest.cc\n> @@ -37,7 +37,7 @@ class DummyPrerenderContents : public PrerenderContents {\n>     EXPECT_EQ(expected_final_status_, final_status());\n>   }\n>\n> -  virtual void StartPrerendering() {\n> +  virtual void StartPrerendering() OVERRIDE {\n>     has_started_ = true;\n>   }\n>\n> @@ -65,8 +65,8 @@ class TestPrerenderManager : public PrerenderManager {\n>   }\n>\n>   // Shorthand to add a simple preload with no aliases.\n> -  void AddSimplePreload(const GURL& url) {\n> -    AddPreload(url, std::vector<GURL>(), GURL());\n> +  bool AddSimplePreload(const GURL& url) {\n> +    return AddPreload(url, std::vector<GURL>(), GURL());\n>   }\n>\n>   PrerenderContents* next_pc() { return next_pc_.get(); }\n> @@ -80,14 +80,15 @@ class TestPrerenderManager : public PrerenderManager {\n>   }\n>\n>  private:\n> -  virtual base::Time GetCurrentTime() const {\n> +  virtual base::Time GetCurrentTime() const OVERRIDE {\n>     return time_;\n>   }\n>\n>   virtual PrerenderContents* CreatePrerenderContents(\n>       const GURL& url,\n>       const std::vector<GURL>& alias_urls,\n> -      const GURL& referrer) {\n> +      const GURL& referrer) OVERRIDE {\n> +    DCHECK(next_pc_.get());\n>     return next_pc_.release();\n>   }\n>\n> @@ -124,7 +125,7 @@ TEST_F(PrerenderManagerTest, FoundTest) {\n>                                  url,\n>                                  FINAL_STATUS_USED);\n>   prerender_manager_->SetNextPrerenderContents(pc);\n> -  prerender_manager_->AddSimplePreload(url);\n> +  EXPECT_TRUE(prerender_manager_->AddSimplePreload(url));\n>   EXPECT_TRUE(pc->has_started());\n>   EXPECT_EQ(pc, prerender_manager_->GetEntry(url));\n>   pc->set_final_status(FINAL_STATUS_USED);\n> @@ -140,7 +141,7 @@ TEST_F(PrerenderManagerTest, DropSecondRequestTest) {\n>                                  FINAL_STATUS_USED);\n>   DummyPrerenderContents* null = NULL;\n>   prerender_manager_->SetNextPrerenderContents(pc);\n> -  prerender_manager_->AddSimplePreload(url);\n> +  EXPECT_TRUE(prerender_manager_->AddSimplePreload(url));\n>   EXPECT_EQ(null, prerender_manager_->next_pc());\n>   EXPECT_TRUE(pc->has_started());\n>   DummyPrerenderContents* pc1 =\n> @@ -148,7 +149,7 @@ TEST_F(PrerenderManagerTest, DropSecondRequestTest) {\n>           prerender_manager_.get(), url,\n>           FINAL_STATUS_MANAGER_SHUTDOWN);\n>   prerender_manager_->SetNextPrerenderContents(pc1);\n> -  prerender_manager_->AddSimplePreload(url);\n> +  EXPECT_FALSE(prerender_manager_->AddSimplePreload(url));\n>   EXPECT_EQ(pc1, prerender_manager_->next_pc());\n>   EXPECT_FALSE(pc1->has_started());\n>   EXPECT_EQ(pc, prerender_manager_->GetEntry(url));\n> @@ -164,7 +165,7 @@ TEST_F(PrerenderManagerTest, ExpireTest) {\n>                                  FINAL_STATUS_TIMED_OUT);\n>   DummyPrerenderContents* null = NULL;\n>   prerender_manager_->SetNextPrerenderContents(pc);\n> -  prerender_manager_->AddSimplePreload(url);\n> +  EXPECT_TRUE(prerender_manager_->AddSimplePreload(url));\n>   EXPECT_EQ(null, prerender_manager_->next_pc());\n>   EXPECT_TRUE(pc->has_started());\n>   prerender_manager_->AdvanceTime(prerender_manager_->max_prerender_age()\n> @@ -181,7 +182,7 @@ TEST_F(PrerenderManagerTest, DropOldestRequestTest) {\n>                                  FINAL_STATUS_EVICTED);\n>   DummyPrerenderContents* null = NULL;\n>   prerender_manager_->SetNextPrerenderContents(pc);\n> -  prerender_manager_->AddSimplePreload(url);\n> +  EXPECT_TRUE(prerender_manager_->AddSimplePreload(url));\n>   EXPECT_EQ(null, prerender_manager_->next_pc());\n>   EXPECT_TRUE(pc->has_started());\n>   GURL url1(\"http://news.google.com/\");\n> @@ -189,7 +190,7 @@ TEST_F(PrerenderManagerTest, DropOldestRequestTest) {\n>       new DummyPrerenderContents(prerender_manager_.get(), url1,\n>                                  FINAL_STATUS_USED);\n>   prerender_manager_->SetNextPrerenderContents(pc1);\n> -  prerender_manager_->AddSimplePreload(url1);\n> +  EXPECT_TRUE(prerender_manager_->AddSimplePreload(url1));\n>   EXPECT_EQ(null, prerender_manager_->next_pc());\n>   EXPECT_TRUE(pc1->has_started());\n>   EXPECT_EQ(null, prerender_manager_->GetEntry(url));\n> @@ -208,7 +209,7 @@ TEST_F(PrerenderManagerTest, TwoElementPrerenderTest) {\n>                                  FINAL_STATUS_EVICTED);\n>   DummyPrerenderContents* null = NULL;\n>   prerender_manager_->SetNextPrerenderContents(pc);\n> -  prerender_manager_->AddSimplePreload(url);\n> +  EXPECT_TRUE(prerender_manager_->AddSimplePreload(url));\n>   EXPECT_EQ(null, prerender_manager_->next_pc());\n>   EXPECT_TRUE(pc->has_started());\n>   GURL url1(\"http://news.google.com/\");\n> @@ -216,7 +217,7 @@ TEST_F(PrerenderManagerTest, TwoElementPrerenderTest) {\n>       new DummyPrerenderContents(prerender_manager_.get(),  url1,\n>                                  FINAL_STATUS_USED);\n>   prerender_manager_->SetNextPrerenderContents(pc1);\n> -  prerender_manager_->AddSimplePreload(url1);\n> +  EXPECT_TRUE(prerender_manager_->AddSimplePreload(url1));\n>   EXPECT_EQ(null, prerender_manager_->next_pc());\n>   EXPECT_TRUE(pc1->has_started());\n>   GURL url2(\"http://images.google.com/\");\n> @@ -224,7 +225,7 @@ TEST_F(PrerenderManagerTest, TwoElementPrerenderTest) {\n>       new DummyPrerenderContents(prerender_manager_.get(), url2,\n>                                  FINAL_STATUS_USED);\n>   prerender_manager_->SetNextPrerenderContents(pc2);\n> -  prerender_manager_->AddSimplePreload(url2);\n> +  EXPECT_TRUE(prerender_manager_->AddSimplePreload(url2));\n>   EXPECT_EQ(null, prerender_manager_->next_pc());\n>   EXPECT_TRUE(pc2->has_started());\n>   EXPECT_EQ(null, prerender_manager_->GetEntry(url));\n> @@ -247,16 +248,26 @@ TEST_F(PrerenderManagerTest, AliasURLTest) {\n>   DummyPrerenderContents* pc =\n>       new DummyPrerenderContents(prerender_manager_.get(), url, alias_urls,\n>                                  FINAL_STATUS_USED);\n> +  // Test that all of the aliases work, but nont_an_alias_url does not.\n>   prerender_manager_->SetNextPrerenderContents(pc);\n> -  prerender_manager_->AddSimplePreload(url);\n> +  EXPECT_TRUE(prerender_manager_->AddPreload(url, alias_urls, GURL()));\n>   EXPECT_EQ(NULL, prerender_manager_->GetEntry(not_an_alias_url));\n>   EXPECT_EQ(pc, prerender_manager_->GetEntry(alias_url1));\n>   prerender_manager_->SetNextPrerenderContents(pc);\n> -  prerender_manager_->AddSimplePreload(url);\n> +  EXPECT_TRUE(prerender_manager_->AddPreload(url, alias_urls, GURL()));\n>   EXPECT_EQ(pc, prerender_manager_->GetEntry(alias_url2));\n>   prerender_manager_->SetNextPrerenderContents(pc);\n> -  prerender_manager_->AddSimplePreload(url);\n> +  EXPECT_TRUE(prerender_manager_->AddPreload(url, alias_urls, GURL()));\n>   EXPECT_EQ(pc, prerender_manager_->GetEntry(url));\n> +\n> +  // Test that alias URLs can not be added.\n> +  prerender_manager_->SetNextPrerenderContents(pc);\n> +  EXPECT_TRUE(prerender_manager_->AddPreload(url, alias_urls, GURL()));\n> +  EXPECT_FALSE(prerender_manager_->AddSimplePreload(url));\n> +  EXPECT_FALSE(prerender_manager_->AddSimplePreload(alias_url1));\n> +  EXPECT_FALSE(prerender_manager_->AddSimplePreload(alias_url2));\n> +  EXPECT_EQ(pc, prerender_manager_->GetEntry(url));\n> +\n>   pc->set_final_status(FINAL_STATUS_USED);\n>   delete pc;\n>  }\n>\n>\n>\n","disapproval":false,"date":"2011-02-18 21:16:08.335376","approval":true}],"owner_email":"cbentzel@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"cbentzel","subject":"AddPreload checks alias URLs of existing PrerenderContents.","created":"2011-02-18 20:01:27.757731","patchsets":[1,3001],"modified":"2011-05-26 14:51:33.260692","closed":true,"commit":false,"issue":6469061}