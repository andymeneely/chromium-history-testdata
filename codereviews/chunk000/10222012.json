{"description":"Build the default fitler collection synchronously in load().\n\nRather than optimize the case where loading fails, simplify the code to always\ncreate the demuxer and decoders before returning.\nThis avoids the race condition in http://crbug.com/124885.\n\nBUG=124885\nTEST=Layout Test media/encrypted-media/encrypted-media-events.html is flaky is no longer flaky on the bots. See http://webk.it/84596.\n\nR=scherkus@chromium.org\n\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=134321","cc":["chromium-reviews@chromium.org","feature-media-reviews@chromium.org","darin-cc@chromium.org"],"reviewers":["scherkus@chromium.org"],"messages":[{"sender":"scherkus@chromium.org","recipients":["ddorwin@chromium.org","scherkus@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","darin-cc@chromium.org"],"text":"LGTM w/ nits\n\nhttp://codereview.chromium.org/10222012/diff/5001/webkit/media/webmediaplayer_impl.cc\nFile webkit/media/webmediaplayer_impl.cc (right):\n\nhttp://codereview.chromium.org/10222012/diff/5001/webkit/media/webmediaplayer_impl.cc#newcode255\nwebkit/media/webmediaplayer_impl.cc:255: DCHECK(!started_);  // Callback must be asynchronous.\nwhat is this DCHECK protecting us against?  that we haven't called StartPipeline()?\n\nI don't think it's adding much value so I'd remove it\n\nhttp://codereview.chromium.org/10222012/diff/5001/webkit/media/webmediaplayer_impl.cc#newcode775\nwebkit/media/webmediaplayer_impl.cc:775: DCHECK(decryptor);\nremove these DCHECKs -- they're useless as Chromium prefers null pointer crashes over superfluous DCHECKs\n\nin fact, you could just rewrite this as proxy_->video_decoder()->decryptor()->AddKey(...);","disapproval":false,"date":"2012-04-27 01:31:00.787193","approval":true},{"sender":"ddorwin@chromium.org","recipients":["ddorwin@chromium.org","scherkus@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","darin-cc@chromium.org"],"text":"I'll make code changes tomorrow.\n\nhttp://codereview.chromium.org/10222012/diff/5001/webkit/media/webmediaplayer_impl.cc\nFile webkit/media/webmediaplayer_impl.cc (right):\n\nhttp://codereview.chromium.org/10222012/diff/5001/webkit/media/webmediaplayer_impl.cc#newcode255\nwebkit/media/webmediaplayer_impl.cc:255: DCHECK(!started_);  // Callback must be asynchronous.\nOn 2012/04/27 01:31:00, scherkus wrote:\n> what is this DCHECK protecting us against?  that we haven't called\n> StartPipeline()?\nYes. When we discussed this change, you said the only issue with moving the code was if the DataSourceInitialized() callback was called synchronously and thus before the demuxers and decoders were created.\n\n> \n> I don't think it's adding much value so I'd remove it\n\nOkay.\n\nhttp://codereview.chromium.org/10222012/diff/5001/webkit/media/webmediaplayer_impl.cc#newcode775\nwebkit/media/webmediaplayer_impl.cc:775: DCHECK(decryptor);\nOn 2012/04/27 01:31:00, scherkus wrote:\n> remove these DCHECKs -- they're useless as Chromium prefers null pointer crashes\n> over superfluous DCHECKs\n> \n> in fact, you could just rewrite this as\n> proxy_->video_decoder()->decryptor()->AddKey(...);\n\nIf a null decoder is the cause of the flaky crashes, the null pointer crashes are not very helpful. For some reason, we don't actually crash when dereferencing the null pointer to make the call. Instead, we crash later in the lock code because the lock member doesn't exist. See the stacks in https://bugs.webkit.org/show_bug.cgi?id=84596.\n\n773 would cause an easy to see assert if such a race was introduced.\n\nI agree that the simpler code is preferred, but the crashes do not pinpoint the real cause. Is there something we can do to address the latter?","disapproval":false,"date":"2012-04-27 02:34:50.432799","approval":false},{"sender":"ddorwin@chromium.org","recipients":["ddorwin@chromium.org","scherkus@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","darin-cc@chromium.org"],"text":"Updated code.\n\nhttp://codereview.chromium.org/10222012/diff/5001/webkit/media/webmediaplayer_impl.cc\nFile webkit/media/webmediaplayer_impl.cc (right):\n\nhttp://codereview.chromium.org/10222012/diff/5001/webkit/media/webmediaplayer_impl.cc#newcode255\nwebkit/media/webmediaplayer_impl.cc:255: DCHECK(!started_);  // Callback must be asynchronous.\nOn 2012/04/27 02:34:50, ddorwin wrote:\n> On 2012/04/27 01:31:00, scherkus wrote:\n> > what is this DCHECK protecting us against?  that we haven't called\n> > StartPipeline()?\n> Yes. When we discussed this change, you said the only issue with moving the code\n> was if the DataSourceInitialized() callback was called synchronously and thus\n> before the demuxers and decoders were created.\n> \n> > \n> > I don't think it's adding much value so I'd remove it\n> \n> Okay.\n\nDone.\n\nhttp://codereview.chromium.org/10222012/diff/5001/webkit/media/webmediaplayer_impl.cc#newcode775\nwebkit/media/webmediaplayer_impl.cc:775: DCHECK(decryptor);\nOn 2012/04/27 02:34:50, ddorwin wrote:\n> On 2012/04/27 01:31:00, scherkus wrote:\n> > remove these DCHECKs -- they're useless as Chromium prefers null pointer\n> crashes\n> > over superfluous DCHECKs\n> > \n> > in fact, you could just rewrite this as\n> > proxy_->video_decoder()->decryptor()->AddKey(...);\n> \n> If a null decoder is the cause of the flaky crashes, the null pointer crashes\n> are not very helpful. For some reason, we don't actually crash when\n> dereferencing the null pointer to make the call. Instead, we crash later in the\n> lock code because the lock member doesn't exist. See the stacks in\n> https://bugs.webkit.org/show_bug.cgi?id=84596.\n> \n> 773 would cause an easy to see assert if such a race was introduced.\n> \n> I agree that the simpler code is preferred, but the crashes do not pinpoint the\n> real cause. Is there something we can do to address the latter?\n\nDone.","disapproval":false,"date":"2012-04-27 17:12:11.336528","approval":false},{"sender":"commit-bot@chromium.org","recipients":["ddorwin@chromium.org","scherkus@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","darin-cc@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/ddorwin@chromium.org/10222012/10001","disapproval":false,"date":"2012-04-27 17:13:51.243116","approval":false},{"sender":"scherkus@chromium.org","recipients":["ddorwin@chromium.org","scherkus@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","darin-cc@chromium.org"],"text":"http://codereview.chromium.org/10222012/diff/5001/webkit/media/webmediaplayer_impl.cc\nFile webkit/media/webmediaplayer_impl.cc (right):\n\nhttp://codereview.chromium.org/10222012/diff/5001/webkit/media/webmediaplayer_impl.cc#newcode775\nwebkit/media/webmediaplayer_impl.cc:775: DCHECK(decryptor);\nOn 2012/04/27 02:34:50, ddorwin wrote:\n> On 2012/04/27 01:31:00, scherkus wrote:\n> > remove these DCHECKs -- they're useless as Chromium prefers null pointer\n> crashes\n> > over superfluous DCHECKs\n> > \n> > in fact, you could just rewrite this as\n> > proxy_->video_decoder()->decryptor()->AddKey(...);\n> \n> If a null decoder is the cause of the flaky crashes, the null pointer crashes\n> are not very helpful. For some reason, we don't actually crash when\n> dereferencing the null pointer to make the call. Instead, we crash later in the\n> lock code because the lock member doesn't exist. See the stacks in\n> https://bugs.webkit.org/show_bug.cgi?id=84596.\n> \n> 773 would cause an easy to see assert if such a race was introduced.\n> \n> I agree that the simpler code is preferred, but the crashes do not pinpoint the\n> real cause. Is there something we can do to address the latter?\n\nAFAIK this is simply how C++ works.\n\nThe function call is always dispatched with the NULL |this| pointer pushed onto the stack/passed via register, hence the crash on invalid memory access when accessing |lock_| instead of before the function is executed.\n\nAt this point in time I'm simply used to looking up the call stack a bit in crash dumps to spot the real offender. For example, webkit_media::WebMediaPlayerImpl::addKey() would have the line number where the crash originated.","disapproval":false,"date":"2012-04-27 17:39:21.697968","approval":false},{"sender":"commit-bot@chromium.org","recipients":["ddorwin@chromium.org","scherkus@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","darin-cc@chromium.org"],"text":"Change committed as 134321","disapproval":false,"date":"2012-04-27 19:20:50.559001","approval":false}],"owner_email":"ddorwin@chromium.org","private":false,"base_url":"http://git.chromium.org/chromium/src.git@master","owner":"ddorwin","subject":"Build the default fitler collection synchronously in load().","created":"2012-04-25 19:49:04.300661","patchsets":[1,5001,10001],"modified":"2012-04-27 19:20:50.716728","closed":true,"commit":false,"issue":10222012}