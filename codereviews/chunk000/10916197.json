{"description":"Implement querying CPU time for each processor on Windows for systemInfo.cpu API.\n\nBUG=136519\nTEST=None\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=156748","cc":["chromium-reviews@chromium.org","aa@chromium.org","mihaip-chromium-reviews@chromium.org"],"reviewers":["mihaip@chromium.org","alexeypa@chromium.org"],"messages":[{"sender":"hongbo.min@intel.com","recipients":["hongbo.min@intel.com","mihaip@chromium.org","alexeypa@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","mihaip-chromium-reviews@chromium.org"],"text":"Pls have a review.","disapproval":false,"date":"2012-09-11 11:29:21.821700","approval":false},{"sender":"alexeypa@chromium.org","recipients":["hongbo.min@intel.com","mihaip@chromium.org","alexeypa@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","mihaip-chromium-reviews@chromium.org"],"text":"http://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc\nFile chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc (right):\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode16\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:16: const DWORD kSystemProcessorPerformanceInformation = 0x8;\nThis information class is declared in winternl.h. See SystemProcessorPerformanceInformation.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode20\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:20: typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION {\nThis structure is declared in <winternl.h>.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode28\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:28: // Undocumented NT API used for querying system information.\nnit: It is partially documented. There us an entry in MSDN and the prototype in winternl.h. I think you can refer to them instead of describing the function parameters below.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode42\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:42: if (!times) return false;\nMove \"return false\" to the next line.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode44\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:44: times->clear();\nnit: you can avoid this by having a local std::vector<CpuTime> variable and swapping it (std::vertor::swap()) with |*timer| at the very end of the function. This way you will also avoid touching |*times| in case of an error.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode46\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:46: HMODULE ntmodule = GetModuleHandle(L\"ntdll.dll\");\nnit: consider declaring constants for L\"ntdll.dll\" and \"NtQuerySystemInformation\" below.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode46\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:46: HMODULE ntmodule = GetModuleHandle(L\"ntdll.dll\");\nnit: Add CHECK(ntmodule != NULL) here.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode51\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:51: if (!NtQuerySystemInformation)\nnit: I believe this can be CHECK(NtQuerySystemInformation)\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode54\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:54: int num_of_processors = base::SysInfo::NumberOfProcessors();\nnit: Why is this number signed?\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode55\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:55: \nnit: no need for an empty line here.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode59\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:59: ULONG bytes, returned_bytes;\nnit: Declare both |bytes| and |returned_bytes| on separate lines. Initialize and declare them in the same statement.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode62\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:62: \nnit: no need for an empty line here.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode72\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:72: DCHECK(returned_num_of_processors == num_of_processors);\nDoes |returned_num_of_processors != num_of_processors| mean a catastrophic failure? Can I happen if say a CPU is hot added or removed (http://msdn.microsoft.com/en-us/library/bb964703(v=sql.105).aspx)? Will it be better to retry once?\n\nI'm pretty sure that at least we should return an error nicely here. I'm not sure about retrying though.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode76\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:76: \nnit: no need for an empty line.","disapproval":false,"date":"2012-09-11 16:33:16.595820","approval":false},{"sender":"hongbo.min@intel.com","recipients":["hongbo.min@intel.com","mihaip@chromium.org","alexeypa@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","mihaip-chromium-reviews@chromium.org"],"text":"alex, thanks for your hints which makes the code more cleaner now.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc\nFile chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc (right):\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode16\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:16: const DWORD kSystemProcessorPerformanceInformation = 0x8;\nOn 2012/09/11 16:33:16, alexeypa wrote:\n> This information class is declared in winternl.h. See\n> SystemProcessorPerformanceInformation.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode20\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:20: typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION {\nOn 2012/09/11 16:33:16, alexeypa wrote:\n> This structure is declared in <winternl.h>.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode28\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:28: // Undocumented NT API used for querying system information.\nOn 2012/09/11 16:33:16, alexeypa wrote:\n> nit: It is partially documented. There us an entry in MSDN and the prototype in\n> winternl.h. I think you can refer to them instead of describing the function\n> parameters below.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode42\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:42: if (!times) return false;\nOn 2012/09/11 16:33:16, alexeypa wrote:\n> Move \"return false\" to the next line.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode44\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:44: times->clear();\nOn 2012/09/11 16:33:16, alexeypa wrote:\n> nit: you can avoid this by having a local std::vector<CpuTime> variable and\n> swapping it (std::vertor::swap()) with |*timer| at the very end of the function.\n> This way you will also avoid touching |*times| in case of an error.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode46\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:46: HMODULE ntmodule = GetModuleHandle(L\"ntdll.dll\");\nOn 2012/09/11 16:33:16, alexeypa wrote:\n> nit: consider declaring constants for L\"ntdll.dll\" and\n> \"NtQuerySystemInformation\" below.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode51\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:51: if (!NtQuerySystemInformation)\nOn 2012/09/11 16:33:16, alexeypa wrote:\n> nit: I believe this can be CHECK(NtQuerySystemInformation)\n\nDirectly use NtQuerySystemInformation API as defined in winternl.h now.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode54\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:54: int num_of_processors = base::SysInfo::NumberOfProcessors();\nOn 2012/09/11 16:33:16, alexeypa wrote:\n> nit: Why is this number signed?\n\nThe base::SysInfo::NumberOfProcessors returns signed number.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode55\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:55: \nOn 2012/09/11 16:33:16, alexeypa wrote:\n> nit: no need for an empty line here.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode59\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:59: ULONG bytes, returned_bytes;\nOn 2012/09/11 16:33:16, alexeypa wrote:\n> nit: Declare both |bytes| and |returned_bytes| on separate lines. Initialize and\n> declare them in the same statement.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode62\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:62: \nOn 2012/09/11 16:33:16, alexeypa wrote:\n> nit: no need for an empty line here.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode72\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:72: DCHECK(returned_num_of_processors == num_of_processors);\nOn 2012/09/11 16:33:16, alexeypa wrote:\n> Does |returned_num_of_processors != num_of_processors| mean a catastrophic\n> failure? Can I happen if say a CPU is hot added or removed\n> (http://msdn.microsoft.com/en-us/library/bb964703%28v=sql.105%29.aspx%29? Will it be\n> better to retry once?\n> \n> I'm pretty sure that at least we should return an error nicely here. I'm not\n> sure about retrying though.\n\nReturn false in case of that error happens.\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode76\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:76: \nOn 2012/09/11 16:33:16, alexeypa wrote:\n> nit: no need for an empty line.\n\nDone.","disapproval":false,"date":"2012-09-12 12:31:37.089610","approval":false},{"sender":"alexeypa@chromium.org","recipients":["hongbo.min@intel.com","mihaip@chromium.org","alexeypa@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","mihaip-chromium-reviews@chromium.org"],"text":"http://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc\nFile chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc (right):\n\nhttp://codereview.chromium.org/10916197/diff/3001/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode54\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:54: int num_of_processors = base::SysInfo::NumberOfProcessors();\nOn 2012/09/12 12:31:37, Hongbo Min wrote:\n> On 2012/09/11 16:33:16, alexeypa wrote:\n> > nit: Why is this number signed?\n> \n> The base::SysInfo::NumberOfProcessors returns signed number.\n\nI understand but why does it return a signed number? Is it feasible to change this (in a follow up CL)? If not, consider adding DCHECK_GT(num_of_processors, 0);\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc\nFile chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc (right):\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode28\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:28: if (!times)\nActually, you don't need to test |times| for being NULL here at all. AV while trying to dereference |times| is a better  indication that something is wrong. The return value is too easy to ignore.\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode34\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:34: DCHECK(ntdll != NULL);\nDCHECK -> CHECK\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode39\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:39: if (!NtQuerySystemInformation)\nThis also can be CHECK(NtQuerySystemInformation != NULL).\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode46\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:46: ULONG bytes = 0;\nYou can merge this line with line #48.\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode49\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:49: if (NtQuerySystemInformation(SystemProcessorPerformanceInformation,\nUse NT_SUCCESS macro to test whether NtQuerySystemInformation succeeded.\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode57\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:57: DCHECK(returned_num_of_processors == num_of_processors);\nRemove this DCHECK. It is legal (though unlikely) situation when NtQuerySystemInformation will return different number of processors than requested.\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode61\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:61: for (int i = 0; i < returned_num_of_processors; ++i) {\nSince you know the number of elements you are going to put to the vector, preallocate them with std::vector::reserve() call before the loop.","disapproval":false,"date":"2012-09-12 15:41:55.132660","approval":false},{"sender":"hongbo.min@intel.com","recipients":["hongbo.min@intel.com","mihaip@chromium.org","alexeypa@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","mihaip-chromium-reviews@chromium.org"],"text":"Patch is updated.\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc\nFile chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc (right):\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode28\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:28: if (!times)\nOn 2012/09/12 15:41:55, alexeypa wrote:\n> Actually, you don't need to test |times| for being NULL here at all. AV while\n> trying to dereference |times| is a better  indication that something is wrong.\n> The return value is too easy to ignore.\nWhat does AV stand for? Although it is too easy, it guarantees that the QueryCpuTimePerProcessor works as normal in any case,even a null point is passed. It is just for the API's completeness:)\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode34\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:34: DCHECK(ntdll != NULL);\nOn 2012/09/12 15:41:55, alexeypa wrote:\n> DCHECK -> CHECK\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode39\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:39: if (!NtQuerySystemInformation)\nOn 2012/09/12 15:41:55, alexeypa wrote:\n> This also can be CHECK(NtQuerySystemInformation != NULL).\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode46\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:46: ULONG bytes = 0;\nOn 2012/09/12 15:41:55, alexeypa wrote:\n> You can merge this line with line #48.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode49\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:49: if (NtQuerySystemInformation(SystemProcessorPerformanceInformation,\nOn 2012/09/12 15:41:55, alexeypa wrote:\n> Use NT_SUCCESS macro to test whether NtQuerySystemInformation succeeded.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode57\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:57: DCHECK(returned_num_of_processors == num_of_processors);\nOn 2012/09/12 15:41:55, alexeypa wrote:\n> Remove this DCHECK. It is legal (though unlikely) situation when\n> NtQuerySystemInformation will return different number of processors than\n> requested. \n\nRemoved the DCHECK stmt, but still return false if their values are different to avoid the inconsistency if the consumer also use SysInfo::NumberOfProcessors to get the number of processors.\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode61\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:61: for (int i = 0; i < returned_num_of_processors; ++i) {\nOn 2012/09/12 15:41:55, alexeypa wrote:\n> Since you know the number of elements you are going to put to the vector,\n> preallocate them with std::vector::reserve() call before the loop.\n\nDone.","disapproval":false,"date":"2012-09-13 13:16:58.941580","approval":false},{"sender":"alexeypa@chromium.org","recipients":["hongbo.min@intel.com","mihaip@chromium.org","alexeypa@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","mihaip-chromium-reviews@chromium.org"],"text":"lgtm when my comments are addressed.\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc\nFile chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc (right):\n\nhttp://codereview.chromium.org/10916197/diff/8003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode28\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:28: if (!times)\nOn 2012/09/13 13:16:59, Hongbo Min wrote:\n> On 2012/09/12 15:41:55, alexeypa wrote:\n> > Actually, you don't need to test |times| for being NULL here at all. AV while\n> > trying to dereference |times| is a better  indication that something is wrong.\n> > The return value is too easy to ignore.\n> What does AV stand for?\n\nAccess violation.\n\n> Although it is too easy, it guarantees that the\n> QueryCpuTimePerProcessor works as normal in any case,even a null point is\n> passed. It is just for the API's completeness:)\n\nProbing a pointer parameter is a good idea if the API crosses trust boundary (user -> kernel) or it is a public API. In this case however, no trust boundaries are crossed. Both the caller and the callee live in the same binary. If a caller passes a bogus pointer it will be immediately seen as a crash, and so it will be fixed. Returning an error does not guarantee anything, since it can be easily ignored.\n\nThere is a different way to put it. Without the check if a caller passes an invalid pointer (either NULL or not-NULL invalid pointer) the function will generate access violation. With the check the function return false if the pointer is NULL and crash if the pointer is invalid but not NULL. So you have an additional variation in behavior that needs to be tested.\n\nhttp://codereview.chromium.org/10916197/diff/1003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc\nFile chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc (right):\n\nhttp://codereview.chromium.org/10916197/diff/1003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode40\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:40: if (!NtQuerySystemInformation)\nnit: remove the if statement. CHECK will crash the process if the pointer is NULL (in both debug and release build), so the condition in the if statement will never be true.\n\nhttp://codereview.chromium.org/10916197/diff/1003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode48\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:48: ULONG bytes = 0, returned_bytes = 0;\nnit: Sorry, what I mean is:\n\nULONG bytes = sizeof(SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION) * num_of_processors;\nULONG returned_bytes = 0;\n\nhttp://codereview.chromium.org/10916197/diff/1003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode55\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:55: int returned_num_of_processors =\nnit: The type should be ULONG since |returned_bytes| and sizeof() are unsigned.\n\nhttp://codereview.chromium.org/10916197/diff/1003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode70\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:70: results.swap(*times);\nnit: This probably is more readable if it says times->swap(results).","disapproval":false,"date":"2012-09-13 16:45:47.912350","approval":true},{"sender":"hongbo.min@intel.com","recipients":["hongbo.min@intel.com","mihaip@chromium.org","alexeypa@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","mihaip-chromium-reviews@chromium.org"],"text":"http://codereview.chromium.org/10916197/diff/1003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc\nFile chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc (right):\n\nhttp://codereview.chromium.org/10916197/diff/1003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode40\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:40: if (!NtQuerySystemInformation)\nOn 2012/09/13 16:45:48, alexeypa wrote:\n> nit: remove the if statement. CHECK will crash the process if the pointer is\n> NULL (in both debug and release build), so the condition in the if statement\n> will never be true.\n\nDone.\n\nhttp://codereview.chromium.org/10916197/diff/1003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode55\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:55: int returned_num_of_processors =\nOn 2012/09/13 16:45:48, alexeypa wrote:\n> nit: The type should be ULONG since |returned_bytes| and sizeof() are unsigned.\n\nYes, but because the num_of_processors is int type, so use int to avoid static_cast when comparison.\n\nhttp://codereview.chromium.org/10916197/diff/1003/chrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc#newcode70\nchrome/browser/extensions/api/system_info_cpu/cpu_info_provider_win.cc:70: results.swap(*times);\nOn 2012/09/13 16:45:48, alexeypa wrote:\n> nit: This probably is more readable if it says times->swap(results).\n\nDone.","disapproval":false,"date":"2012-09-14 02:56:39.994210","approval":false},{"sender":"commit-bot@chromium.org","recipients":["hongbo.min@intel.com","mihaip@chromium.org","alexeypa@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","mihaip-chromium-reviews@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/hongbo.min@intel.com/10916197/11003","disapproval":false,"date":"2012-09-14 02:56:54.920550","approval":false},{"sender":"commit-bot@chromium.org","recipients":["hongbo.min@intel.com","mihaip@chromium.org","alexeypa@chromium.org","chromium-reviews@chromium.org","aa@chromium.org","mihaip-chromium-reviews@chromium.org"],"text":"Change committed as 156748","disapproval":false,"date":"2012-09-14 04:43:57.259860","approval":false}],"owner_email":"hongbo.min@intel.com","private":false,"base_url":"http://git.chromium.org/chromium/src.git@master","owner":"Hongbo Min","subject":"Implement querying CPU time on Windows for systemInfo.cpu API","created":"2012-09-09 00:04:26.735150","patchsets":[3001,8003,1003,11003],"modified":"2012-09-14 04:43:57.418500","closed":true,"commit":false,"issue":10916197}