{"description":"Refactor FFmpegURLProtocol code from FFmpegDemuxer into BlockingUrlProtocol.\r\n\r\nI cleaned up some comments and surrounding test code in FFmpegDemuxer and FileDataSource as well. There'll be some more clean up after I get this landed.\r\n\r\nBUG=160640\r\nTEST=FFmpegDemuxer and BlockingUrlProtocol tests\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=167462","cc":["chromium-reviews@chromium.org","feature-media-reviews@chromium.org","rbultje@chromium.org"],"reviewers":["dalecurtis@chromium.org"],"messages":[{"sender":"scherkus@chromium.org","recipients":["scherkus@chromium.org","dalecurtis@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org"],"text":"dalecurtis: you are the lucky person who has happened to touch this url protocol business stuff last!","disapproval":false,"date":"2012-11-13 00:22:02.262830","approval":false},{"sender":"dalecurtis@chromium.org","recipients":["scherkus@chromium.org","dalecurtis@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","rbultje@chromium.org"],"text":"lgtm % nits and nice to haves.\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol.cc\nFile media/filters/blocking_url_protocol.cc (right):\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol.cc#newcode35\nmedia/filters/blocking_url_protocol.cc:35: // Even though FFmpeg defines AVERROR_EOF, it's not to be used with I/O\n+rbultje; I wonder if this is still true, Ronald?\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol.h\nFile media/filters/blocking_url_protocol.h (right):\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol.h#newcode10\nmedia/filters/blocking_url_protocol.h:10: #include \"base/compiler_specific.h\"\nNeeded?\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol.h#newcode21\nmedia/filters/blocking_url_protocol.h:21: // TODO(scherkus): Should be more thread-safe and use ConditionVariable+Lock as\nWaitableEvent uses CV under the hood, so I think this TODO is redundant.\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol_unittest.cc\nFile media/filters/blocking_url_protocol_unittest.cc (right):\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol_unittest.cc#newcode88\nmedia/filters/blocking_url_protocol_unittest.cc:88: data_source_->force_read_errors_for_testing();\nOOC, are the hacker style _for_testing() methods caught by the presubmit/clang plugin? I know the ForTesting() ones are.\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/file_data_source.cc\nFile media/filters/file_data_source.cc (right):\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/file_data_source.cc#newcode15\nmedia/filters/file_data_source.cc:15: FileDataSource::FileDataSource()\nMight be worth just replacing most of this a FileUtil::MemoryMappedFile().\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/file_data_source.h\nFile media/filters/file_data_source.h (right):\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/file_data_source.h#newcode34\nmedia/filters/file_data_source.h:34: void disable_file_size_for_testing() { disable_file_size_ = true; }\nThis isn't used anywhere in this CL. Remove?","disapproval":false,"date":"2012-11-13 03:42:28.843970","approval":true},{"sender":"rbultje@google.com","recipients":["scherkus@chromium.org","dalecurtis@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","rbultje@chromium.org"],"text":"Hi,\n\nOn 2012/11/13 03:42:28, DaleCurtis wrote:\n> http://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol.cc#newcode35\n> media/filters/blocking_url_protocol.cc:35: // Even though FFmpeg defines\n> AVERROR_EOF, it's not to be used with I/O\n> +rbultje; I wonder if this is still true, Ronald?\n\nYes. I/O simply returns 0 on eof, similar to what read(2) would return, and the demuxer then translates that to AVERROR_EOF.\n\nRonald","disapproval":false,"date":"2012-11-13 03:52:17.910150","approval":false},{"sender":"scherkus@chromium.org","recipients":["scherkus@chromium.org","dalecurtis@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","rbultje@chromium.org"],"text":"thanks!\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol.h\nFile media/filters/blocking_url_protocol.h (right):\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol.h#newcode10\nmedia/filters/blocking_url_protocol.h:10: #include \"base/compiler_specific.h\"\nOn 2012/11/13 03:42:28, DaleCurtis wrote:\n> Needed?\n\nDone.\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol.h#newcode21\nmedia/filters/blocking_url_protocol.h:21: // TODO(scherkus): Should be more thread-safe and use ConditionVariable+Lock as\nOn 2012/11/13 03:42:28, DaleCurtis wrote:\n> WaitableEvent uses CV under the hood, so I think this TODO is redundant.\n\nWEs are implemented using OS primitives (e.g., HANDLE on windows) and CVs are implemented using events when the OS does not provide a primitive (e.g., WinXP implementation of a CV)\n\nAnyway, I updated the TODO to describe the problem as opposed to a potential solution\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol_unittest.cc\nFile media/filters/blocking_url_protocol_unittest.cc (right):\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/blocking_url_protocol_unittest.cc#newcode88\nmedia/filters/blocking_url_protocol_unittest.cc:88: data_source_->force_read_errors_for_testing();\nOn 2012/11/13 03:42:28, DaleCurtis wrote:\n> OOC, are the hacker style _for_testing() methods caught by the presubmit/clang\n> plugin? I know the ForTesting() ones are.\n\nSure does! I tried it out on some sample code.\n\n** Presubmit Messages **\nYou might be calling functions intended only for testing from\nproduction code.  It is OK to ignore this warning if you know what\nyou are doing, as the heuristics used to detect the situation are\nnot perfect.  The commit queue will not block on this warning.\nEmail joi@chromium.org if you have questions.\n  media/filters/ffmpeg_demuxer.cc:478\n    fds->disable_file_size_for_testing();\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/file_data_source.cc\nFile media/filters/file_data_source.cc (right):\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/file_data_source.cc#newcode15\nmedia/filters/file_data_source.cc:15: FileDataSource::FileDataSource()\nOn 2012/11/13 03:42:28, DaleCurtis wrote:\n> Might be worth just replacing most of this a FileUtil::MemoryMappedFile().\n\nI'll do a follow up CL\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/file_data_source.h\nFile media/filters/file_data_source.h (right):\n\nhttp://codereview.chromium.org/11410052/diff/2001/media/filters/file_data_source.h#newcode34\nmedia/filters/file_data_source.h:34: void disable_file_size_for_testing() { disable_file_size_ = true; }\nOn 2012/11/13 03:42:28, DaleCurtis wrote:\n> This isn't used anywhere in this CL. Remove?\n\nDone.","disapproval":false,"date":"2012-11-13 18:19:13.156070","approval":false},{"sender":"commit-bot@chromium.org","recipients":["scherkus@chromium.org","dalecurtis@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","rbultje@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/scherkus@chromium.org/11410052/21","disapproval":false,"date":"2012-11-13 18:19:26.602640","approval":false},{"sender":"commit-bot@chromium.org","recipients":["scherkus@chromium.org","dalecurtis@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","rbultje@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/scherkus@chromium.org/11410052/6003","disapproval":false,"date":"2012-11-13 18:28:12.445370","approval":false},{"sender":"commit-bot@chromium.org","recipients":["scherkus@chromium.org","dalecurtis@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","rbultje@chromium.org"],"text":"Sorry for I got bad news for ya.\nCompile failed with a clobber build on win.\nhttp://build.chromium.org/p/tryserver.chromium/buildstatus?builder=win&number=36598\nYour code is likely broken or HEAD is junk. Please ensure your\ncode is not broken then alert the build sheriffs.\nLook at the try server FAQ for more details.","disapproval":false,"date":"2012-11-13 18:45:10.828240","approval":false},{"sender":"dalecurtis@chromium.org","recipients":["scherkus@chromium.org","dalecurtis@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","rbultje@chromium.org"],"text":"https://chromiumcodereview.appspot.com/11410052/diff/2001/media/filters/blocking_url_protocol.h\nFile media/filters/blocking_url_protocol.h (right):\n\nhttps://chromiumcodereview.appspot.com/11410052/diff/2001/media/filters/blocking_url_protocol.h#newcode21\nmedia/filters/blocking_url_protocol.h:21: // TODO(scherkus): Should be more thread-safe and use ConditionVariable+Lock as\nOn 2012/11/13 18:19:13, scherkus wrote:\n> On 2012/11/13 03:42:28, DaleCurtis wrote:\n> > WaitableEvent uses CV under the hood, so I think this TODO is redundant.\n> \n> WEs are implemented using OS primitives (e.g., HANDLE on windows) and CVs are\n> implemented using events when the OS does not provide a primitive (e.g., WinXP\n> implementation of a CV)\n> \n> Anyway, I updated the TODO to describe the problem as opposed to a potential\n> solution\n\nWhoops, I was looking at the internal posix SyncWaiter implementation. You're correct.\n\nhttps://chromiumcodereview.appspot.com/11410052/diff/6003/media/filters/blocking_url_protocol.cc\nFile media/filters/blocking_url_protocol.cc (right):\n\nhttps://chromiumcodereview.appspot.com/11410052/diff/6003/media/filters/blocking_url_protocol.cc#newcode43\nmedia/filters/blocking_url_protocol.cc:43: data_source_->Read(read_position_, size, data, base::Bind(\nI goofed here and misunderstood your original comment on this and didn't realize last_read_bytes_ was actually getting written by multiple threads.\n\nWhy not instead use a global abort event plus a stack allocated waitable event and last_read_bytes value bound into the callback?  You can then use WaitMany() to listen for either one to fire and take the appropriate action.","disapproval":false,"date":"2012-11-13 21:44:07.364740","approval":false},{"sender":"scherkus@chromium.org","recipients":["scherkus@chromium.org","dalecurtis@chromium.org","chromium-reviews@chromium.org","feature-media-reviews@chromium.org","rbultje@chromium.org"],"text":"https://chromiumcodereview.appspot.com/11410052/diff/6003/media/filters/blocking_url_protocol.cc\nFile media/filters/blocking_url_protocol.cc (right):\n\nhttps://chromiumcodereview.appspot.com/11410052/diff/6003/media/filters/blocking_url_protocol.cc#newcode43\nmedia/filters/blocking_url_protocol.cc:43: data_source_->Read(read_position_, size, data, base::Bind(\nOn 2012/11/13 21:44:07, DaleCurtis wrote:\n> I goofed here and misunderstood your original comment on this and didn't realize\n> last_read_bytes_ was actually getting written by multiple threads.\n> \n> Why not instead use a global abort event plus a stack allocated waitable event\n> and last_read_bytes value bound into the callback?  You can then use WaitMany()\n> to listen for either one to fire and take the appropriate action.\n\nI have a queue of CLs. Sounds like you're ready to review the next one :)\n\nhttp://codereview.chromium.org/11360237/","disapproval":false,"date":"2012-11-13 21:56:13.480500","approval":false}],"owner_email":"scherkus@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"scherkus","subject":"Refactor FFmpegURLProtocol code from FFmpegDemuxer into BlockingUrlProtocol.","created":"2012-11-13 00:03:13.566600","patchsets":[1,2001,9001,7004,21,6003],"modified":"2012-11-13 21:56:13.627540","closed":true,"commit":false,"issue":11410052}