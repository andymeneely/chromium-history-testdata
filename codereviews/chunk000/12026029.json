{"description":"Allow the chrome.tabCapture.* extension API to capture full screen flash widgets.\n\nWhen flash goes fullscreen, it creates a new render widget, so we need to track that in WebContentsVideoCaptureDevice and snapshot that instead of the current render view (which is being covered by the fullscreen render widget).\n\n- Add new WebContentsObserver event to be notified of a fullscreen render widget being shown/destroyed.\n- Add a new WebContentsImpl method to query if there is a currently active fullscreen render widget.\n\nBUG=154135\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=178457","cc":["chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","feature-media-reviews@chromium.org"],"reviewers":["jam@chromium.org","miu@chromium.org"],"messages":[{"sender":"justinlin@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"Hi jam@, ptal the WebContents{Observer} changes. The proposal is these 2 changes:\n- Add a WebContentsObserver::On{Show,Destroy}FullscreenWidget events\n- Add a WebContents::GetFullscreenWidgetRoutingId() method\n\nThe second one supersedes the first one, so if that's OK, then the events are not needed. If only the events are OK, then I'll have to find a way to somehow query the initial state (without the WebContents::GetFullscreenWidgetRoutingId() method, we won't realize that we're already fullscreen when we start capturing/mirroring the tab until we get a show/hide fullscreen event).\n\nFYI, capturing/mirroring refers to using the tabCapture extension API to get a video and audio stream of a specified tab, which can be sent over webRTC.\n\nmiu@: PTAL at the web_contents_capture_device.cc changes.\n\nhttps://codereview.chromium.org/12026029/diff/1009/content/browser/renderer_host/media/web_contents_video_capture_device.cc\nFile content/browser/renderer_host/media/web_contents_video_capture_device.cc (right):\n\nhttps://codereview.chromium.org/12026029/diff/1009/content/browser/renderer_host/media/web_contents_video_capture_device.cc#newcode341\ncontent/browser/renderer_host/media/web_contents_video_capture_device.cc:341: if (fullscreen_widget_id_ == MSG_ROUTING_NONE)\nThese two lines go away if adding a WebContents::GetFullscreenWidgetRoutingID() method doesn't make sense.","disapproval":false,"date":"2013-01-19 01:17:52.603710","approval":false},{"sender":"miu@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"lgtm\n\nJust one nit...\n\nhttps://codereview.chromium.org/12026029/diff/1009/content/browser/renderer_host/media/web_contents_video_capture_device.cc\nFile content/browser/renderer_host/media/web_contents_video_capture_device.cc (right):\n\nhttps://codereview.chromium.org/12026029/diff/1009/content/browser/renderer_host/media/web_contents_video_capture_device.cc#newcode341\ncontent/browser/renderer_host/media/web_contents_video_capture_device.cc:341: if (fullscreen_widget_id_ == MSG_ROUTING_NONE)\nOn 2013/01/19 01:17:52, justinlin wrote:\n> These two lines go away if adding a WebContents::GetFullscreenWidgetRoutingID()\n> method doesn't make sense.\n\nPut these two lines at the end of LookUpAndObserveWebContents(), since they only need to be executed once.  The observer callbacks should take care of updating fullscreen_widget_id_ from then onwards.","disapproval":false,"date":"2013-01-19 02:14:47.186550","approval":true},{"sender":"justinlin@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"https://codereview.chromium.org/12026029/diff/1009/content/browser/renderer_host/media/web_contents_video_capture_device.cc\nFile content/browser/renderer_host/media/web_contents_video_capture_device.cc (right):\n\nhttps://codereview.chromium.org/12026029/diff/1009/content/browser/renderer_host/media/web_contents_video_capture_device.cc#newcode341\ncontent/browser/renderer_host/media/web_contents_video_capture_device.cc:341: if (fullscreen_widget_id_ == MSG_ROUTING_NONE)\nOn 2013/01/19 02:14:47, Yuri wrote:\n> On 2013/01/19 01:17:52, justinlin wrote:\n> > These two lines go away if adding a\n> WebContents::GetFullscreenWidgetRoutingID()\n> > method doesn't make sense.\n> \n> Put these two lines at the end of LookUpAndObserveWebContents(), since they only\n> need to be executed once.  The observer callbacks should take care of updating\n> fullscreen_widget_id_ from then onwards.\n\nYes, good point! Done.","disapproval":false,"date":"2013-01-19 02:19:09.421930","approval":false},{"sender":"jam@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"i'm not familiar with this feature, and the linked bug has no information (what is chrome.dial?).\n\ncan you provide links to what this feature is for? I'd like to understand if this belongs in content or in a different module. see http://www.chromium.org/developers/content-module/content-api and http://www.chromium.org/developers/content-module\n\nhttps://codereview.chromium.org/12026029/diff/8001/content/public/browser/web_contents.h\nFile content/public/browser/web_contents.h (right):\n\nhttps://codereview.chromium.org/12026029/diff/8001/content/public/browser/web_contents.h#newcode155\ncontent/public/browser/web_contents.h:155: virtual int GetFullscreenWidgetRoutingID() const = 0;\nwe only add stuff to the public interface if it's needed by other modules. since this is only called from within content, add this on to WebContentsImpl (and feel free to cast to it if necessary)","disapproval":false,"date":"2013-01-23 02:26:53.241700","approval":false},{"sender":"justinlin@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"On 2013/01/23 02:26:53, John Abd-El-Malek wrote:\n> i'm not familiar with this feature, and the linked bug has no information (what\n> is chrome.dial?).\n> \n> can you provide links to what this feature is for? I'd like to understand if\n> this belongs in content or in a different module. see\n> http://www.chromium.org/developers/content-module/content-api and\n> http://www.chromium.org/developers/content-module\n> \n> https://codereview.chromium.org/12026029/diff/8001/content/public/browser/web_contents.h\n> File content/public/browser/web_contents.h (right):\n> \n> https://codereview.chromium.org/12026029/diff/8001/content/public/browser/web_contents.h#newcode155\n> content/public/browser/web_contents.h:155: virtual int\n> GetFullscreenWidgetRoutingID() const = 0;\n> we only add stuff to the public interface if it's needed by other modules. since\n> this is only called from within content, add this on to WebContentsImpl (and\n> feel free to cast to it if necessary)\n\nAh, sorry! I linked the wrong bug. Updated.\n\nIt's for the tabCapture feature:\nhttp://developer.chrome.com/trunk/extensions/tabCapture.html\n\nThis is exposed in Chrome as an extension API, but it's really more of a WebRTC-ish/content feature since we use mostly the same paths but implement our own audio/video capture devices instead of using webcam/mic.\n\nYou're right, doesn't need to be in the public interface, will update that (for some reason, I thought I was using this from chrome somewhere).","disapproval":false,"date":"2013-01-23 02:42:00.199110","approval":false},{"sender":"justinlin@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","jam@chromium.org","feature-media-reviews@chromium.org"],"text":"PTAL, I think this is generic enough to belong in content? It just exposes the routing ID of fullscreen render widgets (mostly just PPAPI flash, I think).\n\nhttps://codereview.chromium.org/12026029/diff/8001/content/public/browser/web_contents.h\nFile content/public/browser/web_contents.h (right):\n\nhttps://codereview.chromium.org/12026029/diff/8001/content/public/browser/web_contents.h#newcode155\ncontent/public/browser/web_contents.h:155: virtual int GetFullscreenWidgetRoutingID() const = 0;\nOn 2013/01/23 02:26:53, John Abd-El-Malek wrote:\n> we only add stuff to the public interface if it's needed by other modules. since\n> this is only called from within content, add this on to WebContentsImpl (and\n> feel free to cast to it if necessary)\n\nDone.","disapproval":false,"date":"2013-01-23 02:53:00.758720","approval":false},{"sender":"jam@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","feature-media-reviews@chromium.org"],"text":"On 2013/01/23 02:42:00, justinlin wrote:\n> On 2013/01/23 02:26:53, John Abd-El-Malek wrote:\n> > i'm not familiar with this feature, and the linked bug has no information\n> (what\n> > is chrome.dial?).\n> > \n> > can you provide links to what this feature is for? I'd like to understand if\n> > this belongs in content or in a different module. see\n> > http://www.chromium.org/developers/content-module/content-api and\n> > http://www.chromium.org/developers/content-module\n> > \n> >\n> https://codereview.chromium.org/12026029/diff/8001/content/public/browser/web_contents.h\n> > File content/public/browser/web_contents.h (right):\n> > \n> >\n> https://codereview.chromium.org/12026029/diff/8001/content/public/browser/web_contents.h#newcode155\n> > content/public/browser/web_contents.h:155: virtual int\n> > GetFullscreenWidgetRoutingID() const = 0;\n> > we only add stuff to the public interface if it's needed by other modules.\n> since\n> > this is only called from within content, add this on to WebContentsImpl (and\n> > feel free to cast to it if necessary)\n> \n> Ah, sorry! I linked the wrong bug. Updated.\n> \n> It's for the tabCapture feature:\n> http://developer.chrome.com/trunk/extensions/tabCapture.html\n> \n> This is exposed in Chrome as an extension API, but it's really more of a\n> WebRTC-ish/content feature since we use mostly the same paths but implement our\n> own audio/video capture devices instead of using webcam/mic.\n> \n> You're right, doesn't need to be in the public interface, will update that (for\n> some reason, I thought I was using this from chrome somewhere).\n\nhmm, usually the code needed to implement extension APIs (a chrome feature) is located in src\\chrome. Why is the code for this in src\\content and not src\\chrome?","disapproval":false,"date":"2013-01-23 05:28:09.857560","approval":false},{"sender":"justinlin@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","feature-media-reviews@chromium.org"],"text":"On 2013/01/23 05:28:09, John Abd-El-Malek wrote:\n> On 2013/01/23 02:42:00, justinlin wrote:\n> > On 2013/01/23 02:26:53, John Abd-El-Malek wrote:\n> > > i'm not familiar with this feature, and the linked bug has no information\n> > (what\n> > > is chrome.dial?).\n> > > \n> > > can you provide links to what this feature is for? I'd like to understand if\n> > > this belongs in content or in a different module. see\n> > > http://www.chromium.org/developers/content-module/content-api and\n> > > http://www.chromium.org/developers/content-module\n> > > \n> > >\n> >\n> https://codereview.chromium.org/12026029/diff/8001/content/public/browser/web_contents.h\n> > > File content/public/browser/web_contents.h (right):\n> > > \n> > >\n> >\n> https://codereview.chromium.org/12026029/diff/8001/content/public/browser/web_contents.h#newcode155\n> > > content/public/browser/web_contents.h:155: virtual int\n> > > GetFullscreenWidgetRoutingID() const = 0;\n> > > we only add stuff to the public interface if it's needed by other modules.\n> > since\n> > > this is only called from within content, add this on to WebContentsImpl (and\n> > > feel free to cast to it if necessary)\n> > \n> > Ah, sorry! I linked the wrong bug. Updated.\n> > \n> > It's for the tabCapture feature:\n> > http://developer.chrome.com/trunk/extensions/tabCapture.html\n> > \n> > This is exposed in Chrome as an extension API, but it's really more of a\n> > WebRTC-ish/content feature since we use mostly the same paths but implement\n> our\n> > own audio/video capture devices instead of using webcam/mic.\n> > \n> > You're right, doesn't need to be in the public interface, will update that\n> (for\n> > some reason, I thought I was using this from chrome somewhere).\n> \n> hmm, usually the code needed to implement extension APIs (a chrome feature) is\n> located in src\\chrome. Why is the code for this in src\\content and not\n> src\\chrome?\n\nThe reason this is in content is because it's deeply coupled with the WebRTC feature, which lives in content as well. We just use a web_contents_capture_device (seen in this cl), instead of the regular video_capture_device.\n\nThe reason the interface for this is exposed as an extension API right now is mostly for security reasons. We don't want to open this up to regular websites yet (like WebRTC, which can be invoked using regular js in any page), so we're exposing it as a Chrome extension API for now. Eventually, when this gets more stable/safer, perhaps we would look into exposing this directly through JS like WebRTC.\n\nThe chrome side calls into the content side via a js hook. We also have validation to make sure the tabCapture request came from a chrome API call instead of directly from js.\n\nThis current CL is just an addition to the web_contents_capture_device (which repeatedly snapshots the current tab and serves that as a video stream), so that it correctly finds and snapshots any fullscreen flash video when activated (otherwise it'd be snapshotting the active web_contents, but it's being covered by the fullscreen flash video render widget).","disapproval":false,"date":"2013-01-23 06:14:04.513040","approval":false},{"sender":"jam@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","feature-media-reviews@chromium.org"],"text":"thanks for the explanation over vc. i'm ok with this being in content if this stuff will be in webrtc later\n\nlgtm\n\nhttps://codereview.chromium.org/12026029/diff/11004/content/public/browser/web_contents_observer.h\nFile content/public/browser/web_contents_observer.h (right):\n\nhttps://codereview.chromium.org/12026029/diff/11004/content/public/browser/web_contents_observer.h#newcode155\ncontent/public/browser/web_contents_observer.h:155: // Invoked when a plugin like PepperFlash creates and shows or destroys a\nnit: don't mention PepperFlash directly, but just say pepper plugin","disapproval":false,"date":"2013-01-23 21:22:50.707950","approval":true},{"sender":"justinlin@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","feature-media-reviews@chromium.org"],"text":"thanks\n\nhttps://codereview.chromium.org/12026029/diff/11004/content/public/browser/web_contents_observer.h\nFile content/public/browser/web_contents_observer.h (right):\n\nhttps://codereview.chromium.org/12026029/diff/11004/content/public/browser/web_contents_observer.h#newcode155\ncontent/public/browser/web_contents_observer.h:155: // Invoked when a plugin like PepperFlash creates and shows or destroys a\nOn 2013/01/23 21:22:50, John Abd-El-Malek wrote:\n> nit: don't mention PepperFlash directly, but just say pepper plugin\n\nDone.","disapproval":false,"date":"2013-01-23 22:20:10.520380","approval":false},{"sender":"commit-bot@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","feature-media-reviews@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/justinlin@chromium.org/12026029/23003","disapproval":false,"date":"2013-01-23 22:22:19.620260","approval":false},{"sender":"commit-bot@chromium.org","recipients":["justinlin@chromium.org","jam@chromium.org","miu@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","feature-media-reviews@chromium.org"],"text":"Change committed as 178457","disapproval":false,"date":"2013-01-24 01:21:55.363090","approval":false}],"owner_email":"justinlin@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"justinlin","subject":"Allow TabCapture to capture full screen flash widgets.","created":"2013-01-18 22:25:48.015580","patchsets":[1,1009,8001,11003,11004,23003],"modified":"2013-01-24 01:21:55.449990","closed":true,"commit":false,"issue":12026029}