{"description":"New implementation of font precache on Windows.\n\nBUG=94421\nTEST=none\n\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=101911","cc":["chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"reviewers":["nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","commit-bot@chromium.org"],"messages":[{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"","disapproval":false,"date":"2011-09-13 18:36:20.410567","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"If you don't have time to review this CL, please let me know.  Thanks.","disapproval":false,"date":"2011-09-13 18:36:58.595178","approval":false},{"sender":"nsylvain@google.com","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"The code itself looks pretty good, but i haven't really written code in chrome in the last 2 years, so I think you'll want a more seasoned reviewer to LGTM this.  I suggest rvargas, but feel free to add anyone else.\n\nI'm still concerned about what I said earlier in the thread about this. Sorry if I'm repeating myself.\n\nTake this case for example:\n\nRenderer A calls GetFontData for font_x and it fails, so Renderer A asks for the browser the load the font. Renderer A calls GetFontData again, and now it works.\n\nSo far the browser cache has only 1 element, font_x, and it is associated with renderer A\n\nNow Renderer B also tries to load font_x using GetFontData.  Since font_x is already cached by the browser, GetFontData succeeds.\n\nAt this point, if Renderer A terminates, it will destroy the cache for font_x, and this will make Renderer B crash.\n\nI believe that if you want to ever clean up the cache, you need to talk to the browser to update the cache even if GetFontData succeeds on the first try.  But I assume this will slow down quite a bit the browser... so we probably need to optimize this quite a bit.\n\nWDYT?\n\nhttp://codereview.chromium.org/7866019/diff/1/chrome/common/chrome_utility_messages.h\nFile chrome/common/chrome_utility_messages.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/1/chrome/common/chrome_utility_messages.h#newcode151\nchrome/common/chrome_utility_messages.h:151: int /*pid*/)\nshould you really trust the renderer with the pid? A malicious renderer could potentially screw your cache.  I'm pretty sure there is a way to get the renderer pid within the message handler.","disapproval":false,"date":"2011-09-13 19:32:17.927415","approval":true},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"On 2011/09/13 19:32:17, nsylvain wrote:\n> The code itself looks pretty good, but i haven't really written code in chrome\n> in the last 2 years, so I think you'll want a more seasoned reviewer to LGTM\n> this.  I suggest rvargas, but feel free to add anyone else.\n> \n> I'm still concerned about what I said earlier in the thread about this. Sorry if\n> I'm repeating myself.\n> \n> Take this case for example:\n> \n> Renderer A calls GetFontData for font_x and it fails, so Renderer A asks for the\n> browser the load the font. Renderer A calls GetFontData again, and now it works.\n> \n> So far the browser cache has only 1 element, font_x, and it is associated with\n> renderer A\n> \n> Now Renderer B also tries to load font_x using GetFontData.  Since font_x is\n> already cached by the browser, GetFontData succeeds.\n> \n> At this point, if Renderer A terminates, it will destroy the cache for font_x,\n> and this will make Renderer B crash.\n> \n> I believe that if you want to ever clean up the cache, you need to talk to the\n> browser to update the cache even if GetFontData succeeds on the first try.  But\n> I assume this will slow down quite a bit the browser... so we probably need to\n> optimize this quite a bit.\n> \n> WDYT?\n> \n> http://codereview.chromium.org/7866019/diff/1/chrome/common/chrome_utility_messages.h\n> File chrome/common/chrome_utility_messages.h (right):\n> \n> http://codereview.chromium.org/7866019/diff/1/chrome/common/chrome_utility_messages.h#newcode151\n> chrome/common/chrome_utility_messages.h:151: int /*pid*/)\n> should you really trust the renderer with the pid? A malicious renderer could\n> potentially screw your cache.  I'm pretty sure there is a way to get the\n> renderer pid within the message handler.\n\nThe pid is used to ref-count the handle.\n\nTake your case for example,\n\nRenderer A call GetFontData for font_x, ask browser to cache.  Browser caches font_x and it works.  ref count of font_x is 1.\n\nRenderer B call GetFontData for font_x, Browser create the GDI object again (to avoid GDI swap out of font_x) and bump the ref count to 2\n\nRenderer B goes away, ref count of its requests goes down, so ref count of font_x is now 1.\n\nRenderer A goes away, ref count of font_x is zero.  This time we really close out the handle.\n\nThe clean up is triggered by browser_child_process_host when a child process died so I don't need to really talk to the process, it just act as an async event.\n\nI don't know how to get renderer pid within the message handler.  Do you have any examples?","disapproval":false,"date":"2011-09-13 19:41:33.379753","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"On 2011/09/13 19:41:33, arthurhsu wrote:\n> I don't know how to get renderer pid within the message handler.  Do you have\n> any examples?\n\nNevermind.  I figured out how.  Will update the CL.  Thanks.","disapproval":false,"date":"2011-09-13 20:01:43.279107","approval":false},{"sender":"nsylvain@google.com","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"On Tue, Sep 13, 2011 at 12:41 PM, <arthurhsu@chromium.org> wrote:\n\n> On 2011/09/13 19:32:17, nsylvain wrote:\n>\n>> The code itself looks pretty good, but i haven't really written code in\n>> chrome\n>> in the last 2 years, so I think you'll want a more seasoned reviewer to\n>> LGTM\n>> this.  I suggest rvargas, but feel free to add anyone else.\n>>\n>\n>  I'm still concerned about what I said earlier in the thread about this.\n>> Sorry\n>>\n> if\n>\n>> I'm repeating myself.\n>>\n>\n>  Take this case for example:\n>>\n>\n>  Renderer A calls GetFontData for font_x and it fails, so Renderer A asks\n>> for\n>>\n> the\n>\n>> browser the load the font. Renderer A calls GetFontData again, and now it\n>>\n> works.\n>\n>  So far the browser cache has only 1 element, font_x, and it is associated\n>> with\n>> renderer A\n>>\n>\n>  Now Renderer B also tries to load font_x using GetFontData.  Since font_x\n>> is\n>> already cached by the browser, GetFontData succeeds.\n>>\n>\n>  At this point, if Renderer A terminates, it will destroy the cache for\n>> font_x,\n>> and this will make Renderer B crash.\n>>\n>\n>  I believe that if you want to ever clean up the cache, you need to talk to\n>> the\n>> browser to update the cache even if GetFontData succeeds on the first try.\n>>\n> But\n>\n>> I assume this will slow down quite a bit the browser... so we probably\n>> need to\n>> optimize this quite a bit.\n>>\n>\n>  WDYT?\n>>\n>\n>\n> http://codereview.chromium.**org/7866019/diff/1/chrome/**\n> common/chrome_utility_**messages.h<http://codereview.chromium.org/7866019/diff/1/chrome/common/chrome_utility_messages.h>\n>\n>> File chrome/common/chrome_utility_**messages.h (right):\n>>\n>\n>\n> http://codereview.chromium.**org/7866019/diff/1/chrome/**\n> common/chrome_utility_**messages.h#newcode151<http://codereview.chromium.org/7866019/diff/1/chrome/common/chrome_utility_messages.h#newcode151>\n>\n>> chrome/common/chrome_utility_**messages.h:151: int /*pid*/)\n>> should you really trust the renderer with the pid? A malicious renderer\n>> could\n>> potentially screw your cache.  I'm pretty sure there is a way to get the\n>> renderer pid within the message handler.\n>>\n>\n> The pid is used to ref-count the handle.\n>\n> Take your case for example,\n>\n> Renderer A call GetFontData for font_x, ask browser to cache.  Browser\n> caches\n> font_x and it works.  ref count of font_x is 1.\n>\n> Renderer B call GetFontData for font_x, Browser create the GDI object again\n> (to\n> avoid GDI swap out of font_x) and bump the ref count to 2\n>\nI don't see that in the code.   I see that if GetFontData succeeds on first\ntry, the\nrenderer does not notify the browser, so the ref count is not incremented.\n\nAm I missing something?\n\n\n> Renderer B goes away, ref count of its requests goes down, so ref count of\n> font_x is now 1.\n>\n> Renderer A goes away, ref count of font_x is zero.  This time we really\n> close\n> out the handle.\n>\n> The clean up is triggered by browser_child_process_host when a child\n> process\n> died so I don't need to really talk to the process, it just act as an async\n> event.\n>\n> I don't know how to get renderer pid within the message handler.  Do you\n> have\n> any examples?\n>\n>\n> http://codereview.chromium.**org/7866019/<http://codereview.chromium.org/7866019/>\n>\n","disapproval":false,"date":"2011-09-13 20:16:51.364474","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"On 2011/09/13 20:16:51, nsylvain wrote:\n> I don't see that in the code.   I see that if GetFontData succeeds on first\n> try, the\n> renderer does not notify the browser, so the ref count is not incremented.\n> \n> Am I missing something?\n> \n\nref_count is done withing the cache.\nchild_process_host.cc:\nline 182: if the cached element is new, set ref count to 1\nline 189: if the cached element is not new, and the pid is not the same, bump up ref count by 1\nline 216: remove the handle in destructor if and only if ref count is 0","disapproval":false,"date":"2011-09-13 20:21:33.440741","approval":false},{"sender":"nsylvain@google.com","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"http://codereview.chromium.org/7866019/diff/1/chrome/utility/chrome_content_utility_client.cc\nFile chrome/utility/chrome_content_utility_client.cc (right):\n\nhttp://codereview.chromium.org/7866019/diff/1/chrome/utility/chrome_content_utility_client.cc#newcode218\nchrome/utility/chrome_content_utility_client.cc:218: int rv = GetFontData(hdc, table, offset, buffer, length);\nThe code you refer is inside PreCacheFont. \n\nTake this line for example. If this call succeeds, PreCacheFont won't even be called at all, and yet, the browser needs to know that it can't release that font.","disapproval":false,"date":"2011-09-13 20:28:51.339692","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"On 2011/09/13 20:28:51, nsylvain wrote:\n> http://codereview.chromium.org/7866019/diff/1/chrome/utility/chrome_content_utility_client.cc\n> File chrome/utility/chrome_content_utility_client.cc (right):\n> \n> http://codereview.chromium.org/7866019/diff/1/chrome/utility/chrome_content_utility_client.cc#newcode218\n> chrome/utility/chrome_content_utility_client.cc:218: int rv = GetFontData(hdc,\n> table, offset, buffer, length);\n> The code you refer is inside PreCacheFont. \n> \n> Take this line for example. If this call succeeds, PreCacheFont won't even be\n> called at all, and yet, the browser needs to know that it can't release that\n> font.\n\nIt shall not matter if line 218 succeeds because the required data in the return buffer will not change for subsequent GDI calls made in ReleaseCachedFont() in browser process (because they are two handles from two different processes, all we want to do is to make sure GDI keep that font in memory, which it will in this case because GDI knows there are still open handles out there).  That's why the ReleaseCachedFont is called immediately after PreCacheFont in FontDataPatch.","disapproval":false,"date":"2011-09-13 20:38:18.247457","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"http://codereview.chromium.org/7866019/diff/1/chrome/common/chrome_utility_messages.h\nFile chrome/common/chrome_utility_messages.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/1/chrome/common/chrome_utility_messages.h#newcode151\nchrome/common/chrome_utility_messages.h:151: int /*pid*/)\nOn 2011/09/13 19:32:18, nsylvain wrote:\n> should you really trust the renderer with the pid? A malicious renderer could\n> potentially screw your cache.  I'm pretty sure there is a way to get the\n> renderer pid within the message handler.\n\nThis one is a service utility process host, which is used internally by printing.  The other one used by renderer process is changed.","disapproval":false,"date":"2011-09-13 20:58:32.231081","approval":false},{"sender":"nsylvain@google.com","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"On 2011/09/13 20:38:18, arthurhsu wrote:\n> On 2011/09/13 20:28:51, nsylvain wrote:\n> >\n> http://codereview.chromium.org/7866019/diff/1/chrome/utility/chrome_content_utility_client.cc\n> > File chrome/utility/chrome_content_utility_client.cc (right):\n> > \n> >\n> http://codereview.chromium.org/7866019/diff/1/chrome/utility/chrome_content_utility_client.cc#newcode218\n> > chrome/utility/chrome_content_utility_client.cc:218: int rv = GetFontData(hdc,\n> > table, offset, buffer, length);\n> > The code you refer is inside PreCacheFont. \n> > \n> > Take this line for example. If this call succeeds, PreCacheFont won't even be\n> > called at all, and yet, the browser needs to know that it can't release that\n> > font.\n> \n> It shall not matter if line 218 succeeds because the required data in the return\n> buffer will not change for subsequent GDI calls made in ReleaseCachedFont() in\n> browser process (because they are two handles from two different processes, all\n> we want to do is to make sure GDI keep that font in memory, which it will in\n> this case because GDI knows there are still open handles out there).  That's why\n> the ReleaseCachedFont is called immediately after PreCacheFont in FontDataPatch.\n\nI see, this is where the confusion comes from, since this is not how I thought it worked. If you think this is right, then LGTM (but someone else needs to look at the code and LGTM as well)\n\nWe should do a lot of testing. In the past we've only had to put code around GetFontData because it was called really early in the font code, and the browser cache was never destroyed, but until now I was fairly confident that many other calls in chrome (and in the windows libraries) will try to load the font again (even after the handle is closed), and if the browser is not caching it anymore, it will fail badly.","disapproval":false,"date":"2011-09-13 21:35:47.441624","approval":true},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"Ricardo, please let me know when you have time to review this.  This CL is related to code-yellow defect 94421.  Thanks.","disapproval":false,"date":"2011-09-13 22:33:13.336526","approval":false},{"sender":"rvargas@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"There is already a one to one mapping from child_process_host to child, so it doesn't make much sense to me to have static methods and then have a map to find out something about a given PID. That also means that PIDs are redundant.\n\nIt looks like tracking process lifetime is meant to be just a safety net and everything is purged from the cache a few milliseconds after it was added. If that is the intended behavior it looks like a lot of infrastructure for it. If we rely on process destruction, why bother with a second IPC message at all?\n\nhttp://codereview.chromium.org/7866019/diff/6003/content/common/child_process_host.h\nFile content/common/child_process_host.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/6003/content/common/child_process_host.h#newcode32\ncontent/common/child_process_host.h:32: // Types used in PreCacheFont\nComments should end with period.\n\nThese are fairly specific, so should not be global.\n\nhttp://codereview.chromium.org/7866019/diff/6003/content/common/child_process_host.h#newcode97\ncontent/common/child_process_host.h:97: static void ReleaseCachedFont(int pid);\nThis doesn't release a font... releases all fonts for the given PID so font should be plural... if we keep this method :)\n\nhttp://codereview.chromium.org/7866019/diff/6003/content/common/child_process_host.h#newcode162\ncontent/common/child_process_host.h:162: FontCache() {}  // Make Singleton<> happy.\nfriend struct DefaultSingletonTraits<FontCache>;\n\nConstructors and destructors should not be inlined.","disapproval":false,"date":"2011-09-13 23:40:30.130498","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"The PreCacheFont is called from two components.  One is the service utility process, which is part of the printing; the other is from webkit's Platform::ensureFontLoad().  \n\nFor the service utility process, we act like a hook, which we know that we can release the font as soon as data are in the return buffer.\n\nFor the webkit part, we really don't know when will the renderer need the font, therefore we intercept the renderer exit event and clear cache from there.\n\nhttp://codereview.chromium.org/7866019/diff/6003/content/common/child_process_host.h\nFile content/common/child_process_host.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/6003/content/common/child_process_host.h#newcode32\ncontent/common/child_process_host.h:32: // Types used in PreCacheFont\nOn 2011/09/13 23:40:30, rvargas wrote:\n> Comments should end with period.\n> \n> These are fairly specific, so should not be global.\n\nDone.\n\nhttp://codereview.chromium.org/7866019/diff/6003/content/common/child_process_host.h#newcode97\ncontent/common/child_process_host.h:97: static void ReleaseCachedFont(int pid);\nOn 2011/09/13 23:40:30, rvargas wrote:\n> This doesn't release a font... releases all fonts for the given PID so font\n> should be plural... if we keep this method :)\n\nDone.\n\nhttp://codereview.chromium.org/7866019/diff/6003/content/common/child_process_host.h#newcode162\ncontent/common/child_process_host.h:162: FontCache() {}  // Make Singleton<> happy.\nOn 2011/09/13 23:40:30, rvargas wrote:\n> friend struct DefaultSingletonTraits<FontCache>;\n> \n> Constructors and destructors should not be inlined.\n\nDone.","disapproval":false,"date":"2011-09-14 02:06:56.685998","approval":false},{"sender":"rvargas@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"I see. We still should be able to remove the PIDs and the map though.\n\nhttp://codereview.chromium.org/7866019/diff/6016/content/common/child_process_host.h\nFile content/common/child_process_host.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/6016/content/common/child_process_host.h#newcode171\ncontent/common/child_process_host.h:171: FontCache();  // Make Singleton<> happy.\nnit: remove the comment.\n\nhttp://codereview.chromium.org/7866019/diff/6016/content/common/child_process_host.h#newcode178\ncontent/common/child_process_host.h:178: DISALLOW_COPY_AND_ASSIGN(FontCache);\nThis should be the last item on the class... struct goes first.","disapproval":false,"date":"2011-09-14 03:05:04.970050","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"Do you mean remove the pid from cache impl, or remove pid from IPC message map?\n\nhttp://codereview.chromium.org/7866019/diff/6016/content/common/child_process_host.h\nFile content/common/child_process_host.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/6016/content/common/child_process_host.h#newcode171\ncontent/common/child_process_host.h:171: FontCache();  // Make Singleton<> happy.\nOn 2011/09/14 03:05:05, rvargas wrote:\n> nit: remove the comment.\n\nDone.\n\nhttp://codereview.chromium.org/7866019/diff/6016/content/common/child_process_host.h#newcode178\ncontent/common/child_process_host.h:178: DISALLOW_COPY_AND_ASSIGN(FontCache);\nOn 2011/09/14 03:05:05, rvargas wrote:\n> This should be the last item on the class... struct goes first.\n\nDone.","disapproval":false,"date":"2011-09-14 20:25:48.573497","approval":false},{"sender":"rvargas@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"On 2011/09/14 20:25:48, arthurhsu wrote:\n> Do you mean remove the pid from cache impl, or remove pid from IPC message map?\n\nBoth. What I mean is that ChildProcessHost is an object bound to a given child process (renderer, or anything else that is sandboxed). The reason for PreCacheFont to be static is that we didn't care about any specific process, but now we do.\n\nBut in any case, you'll need a content owner so I added John.","disapproval":false,"date":"2011-09-14 21:19:47.926985","approval":false},{"sender":"rvargas@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"http://codereview.chromium.org/7866019/diff/8004/content/common/child_process_host.h\nFile content/common/child_process_host.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/8004/content/common/child_process_host.h#newcode178\ncontent/common/child_process_host.h:178: friend struct DefaultSingletonTraits<FontCache>;\nSorry I was not clear, struct declarations go before constructors.","disapproval":false,"date":"2011-09-14 21:21:36.278073","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"I also removed the pid from service utility message.\n\nAs to the pid used in cache implementation, it is necessary.  I use the pid as a key to associate a child process with the fonts that it use.  As explained in previous comments, we have no idea when will webkit use the font, so we can only release the GDI handle when the renderer process goes away.  We want to release unused GDI handles so that we don't use more memory than we need.\n\nhttp://codereview.chromium.org/7866019/diff/8004/content/common/child_process_host.h\nFile content/common/child_process_host.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/8004/content/common/child_process_host.h#newcode178\ncontent/common/child_process_host.h:178: friend struct DefaultSingletonTraits<FontCache>;\nOn 2011/09/14 21:21:36, rvargas wrote:\n> Sorry I was not clear, struct declarations go before constructors.\n\nDone.","disapproval":false,"date":"2011-09-15 05:52:47.283134","approval":false},{"sender":"jam@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"http://codereview.chromium.org/7866019/diff/4024/chrome/common/chrome_utility_messages.h\nFile chrome/common/chrome_utility_messages.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/4024/chrome/common/chrome_utility_messages.h#newcode153\nchrome/common/chrome_utility_messages.h:153: IPC_MESSAGE_CONTROL0(ChromeUtilityHostMsg_ReleaseCachedFonts)\ninstead of declaring this message for utility/renderer, it should be in child_process_messages.h. and while you're at it, please move ViewHostMsg_PreCacheFont as well and ChromeUtilityHostMsg_PreCacheFont\n\nhttp://codereview.chromium.org/7866019/diff/4024/chrome/service/service_utility_process_host.cc\nFile chrome/service/service_utility_process_host.cc (right):\n\nhttp://codereview.chromium.org/7866019/diff/4024/chrome/service/service_utility_process_host.cc#newcode175\nchrome/service/service_utility_process_host.cc:175: ReleaseCachedFonts(pid());\nyou use pid for service processes, while for renderers you're using process_id (which is not a pid, but rather a unique id). the reason we avoid using pids is that they get recycled, which can cause some hard to catch bugs. Can you make each ServiceutilityProcessHost generate a unique id using ChildProcessInfo::GenerateChildProcessUniqueId, and pass that to the font caching code","disapproval":false,"date":"2011-09-15 16:18:23.494809","approval":false},{"sender":"rvargas@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"On 2011/09/15 05:52:47, arthurhsu wrote:\n> I also removed the pid from service utility message.\n> \n> As to the pid used in cache implementation, it is necessary.  I use the pid as a\n> key to associate a child process with the fonts that it use.  As explained in\n> previous comments, we have no idea when will webkit use the font, so we can only\n> release the GDI handle when the renderer process goes away.  We want to release\n> unused GDI handles so that we don't use more memory than we need.\n\nYes, I see that, but ChildProcessHost::OnChildDied() provides that signal (time to cleanup all fonts used by this process). Am I missing something? \n\n\n> \n> http://codereview.chromium.org/7866019/diff/8004/content/common/child_process_host.h\n> File content/common/child_process_host.h (right):\n> \n> http://codereview.chromium.org/7866019/diff/8004/content/common/child_process_host.h#newcode178\n> content/common/child_process_host.h:178: friend struct\n> DefaultSingletonTraits<FontCache>;\n> On 2011/09/14 21:21:36, rvargas wrote:\n> > Sorry I was not clear, struct declarations go before constructors.\n> \n> Done.","disapproval":false,"date":"2011-09-15 18:19:26.051373","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"On 2011/09/15 18:19:26, rvargas wrote:\n> On 2011/09/15 05:52:47, arthurhsu wrote:\n> > I also removed the pid from service utility message.\n> > \n> > As to the pid used in cache implementation, it is necessary.  I use the pid as\n> a\n> > key to associate a child process with the fonts that it use.  As explained in\n> > previous comments, we have no idea when will webkit use the font, so we can\n> only\n> > release the GDI handle when the renderer process goes away.  We want to\n> release\n> > unused GDI handles so that we don't use more memory than we need.\n> \n> Yes, I see that, but ChildProcessHost::OnChildDied() provides that signal (time\n> to cleanup all fonts used by this process). Am I missing something? \n> \n> \n> > \n> >\n> http://codereview.chromium.org/7866019/diff/8004/content/common/child_process_host.h\n> > File content/common/child_process_host.h (right):\n> > \n> >\n> http://codereview.chromium.org/7866019/diff/8004/content/common/child_process_host.h#newcode178\n> > content/common/child_process_host.h:178: friend struct\n> > DefaultSingletonTraits<FontCache>;\n> > On 2011/09/14 21:21:36, rvargas wrote:\n> > > Sorry I was not clear, struct declarations go before constructors.\n> > \n> > Done.\n\nUnique process id is stored in ChildProcessInfo, which is not directly accessible from ChildProcessHost::OnChildDied().\n\nFor hooking style usage in service util process, I chose to release the font immediately.  The service util process can live quite long and it does not need to hold the font for its lifetime.","disapproval":false,"date":"2011-09-15 18:38:29.957818","approval":false},{"sender":"rvargas@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"On 2011/09/15 18:38:29, arthurhsu wrote:\n> On 2011/09/15 18:19:26, rvargas wrote:\n> > On 2011/09/15 05:52:47, arthurhsu wrote:\n> > > I also removed the pid from service utility message.\n> > > \n> > > As to the pid used in cache implementation, it is necessary.  I use the pid\n> as\n> > a\n> > > key to associate a child process with the fonts that it use.  As explained\n> in\n> > > previous comments, we have no idea when will webkit use the font, so we can\n> > only\n> > > release the GDI handle when the renderer process goes away.  We want to\n> > release\n> > > unused GDI handles so that we don't use more memory than we need.\n> > \n> > Yes, I see that, but ChildProcessHost::OnChildDied() provides that signal\n> (time\n> > to cleanup all fonts used by this process). Am I missing something? \n> > \n> > \n> > > \n> > >\n> >\n> http://codereview.chromium.org/7866019/diff/8004/content/common/child_process_host.h\n> > > File content/common/child_process_host.h (right):\n> > > \n> > >\n> >\n> http://codereview.chromium.org/7866019/diff/8004/content/common/child_process_host.h#newcode178\n> > > content/common/child_process_host.h:178: friend struct\n> > > DefaultSingletonTraits<FontCache>;\n> > > On 2011/09/14 21:21:36, rvargas wrote:\n> > > > Sorry I was not clear, struct declarations go before constructors.\n> > > \n> > > Done.\n> \n> Unique process id is stored in ChildProcessInfo, which is not directly\n> accessible from ChildProcessHost::OnChildDied().\n\nhence the whole point about not really needing a map, or a unique process id at all.\n\n> For hooking style usage in service util process, I chose to release the font\n> immediately.  The service util process can live quite long and it does not need\n> to hold the font for its lifetime.\n\nRight, and that's why you have a ReleaseFont message, but that is not related to needing a process id, is it? Any regular (non-static) member of ChildProcessHost already knows what process it is dealing with (\"this\" is paired with that process). Unless I'm completely misunderstanding how ChildProcessHost works.\n\nIn any case, if jam is happy I'm happy.","disapproval":false,"date":"2011-09-15 18:54:36.569969","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"I have already removed all pid from messages.\n\nFor cache implementation, PID is introduced to solve this issue.\n\nRenderer A uses fontX, browser loads it\nRenderer B uses fontX, browser loads it\nRenderer B goes away, browser DeleteObject()\nRenderer A GetFontData(), Kaboom!\n\nI use PID to keep track how fontX maps to what process.  When the last process referencing fontX is gone, it's safe to free fontX.","disapproval":false,"date":"2011-09-15 19:05:00.767104","approval":false},{"sender":"rvargas@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"On 2011/09/15 19:05:00, arthurhsu wrote:\n> I have already removed all pid from messages.\n> \n> For cache implementation, PID is introduced to solve this issue.\n> \n> Renderer A uses fontX, browser loads it\n> Renderer B uses fontX, browser loads it\n> Renderer B goes away, browser DeleteObject()\n> Renderer A GetFontData(), Kaboom!\n> \n> I use PID to keep track how fontX maps to what process.  When the last process\n> referencing fontX is gone, it's safe to free fontX.\n\nYou don't need a pid to solve that problem. You have the reference count for that (number of processes that are using that font). You have a map because you are using static members, and then you have to go from that to a process.\n\nThat's what I feel is wrong: having a class with objects that abstract a process, but adding static members (that lose the knowledge of individual processes) and then having to add a process_identifier and a map to go back to the lost concept.\n\nBut as I said, I'm happy if John is happy.","disapproval":false,"date":"2011-09-15 19:25:51.247182","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"On 2011/09/15 19:25:51, rvargas wrote:\n> On 2011/09/15 19:05:00, arthurhsu wrote:\n> > I have already removed all pid from messages.\n> > \n> > For cache implementation, PID is introduced to solve this issue.\n> > \n> > Renderer A uses fontX, browser loads it\n> > Renderer B uses fontX, browser loads it\n> > Renderer B goes away, browser DeleteObject()\n> > Renderer A GetFontData(), Kaboom!\n> > \n> > I use PID to keep track how fontX maps to what process.  When the last process\n> > referencing fontX is gone, it's safe to free fontX.\n> \n> You don't need a pid to solve that problem. You have the reference count for\n> that (number of processes that are using that font). You have a map because you\n> are using static members, and then you have to go from that to a process.\n> \n> That's what I feel is wrong: having a class with objects that abstract a\n> process, but adding static members (that lose the knowledge of individual\n> processes) and then having to add a process_identifier and a map to go back to\n> the lost concept.\n> \n> But as I said, I'm happy if John is happy.\n\nA renderer can/will request fontX for multiple times to avoid GDI swapping the font out of memory.  Given that I don't know when renderer/webkit is done with a font, pid is introduced to do a proper ref count so that each process add/release a font's ref count only once.","disapproval":false,"date":"2011-09-15 19:41:02.851668","approval":false},{"sender":"rvargas@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"> A renderer can/will request fontX for multiple times to avoid GDI swapping the\n> font out of memory.  Given that I don't know when renderer/webkit is done with a\n> font, pid is introduced to do a proper ref count so that each process\n> add/release a font's ref count only once.\n\nAnd again, I don't see the connection between that and a map<process, process_fonts>. I have never suggested to get rid of process_fonts.\n\nOn a more serious point, given that we don't know when it is safe to release a font for a renderer whithout causing it to crash, it seems like we cannot ignore renderers that are using a given font without talking to the browser process: if there is any chance that ensureFontLoaded is not called for a given renderer because it was able to start using a font already cached, we have a problem.","disapproval":false,"date":"2011-09-15 21:50:10.827684","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"http://codereview.chromium.org/7866019/diff/4024/chrome/common/chrome_utility_messages.h\nFile chrome/common/chrome_utility_messages.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/4024/chrome/common/chrome_utility_messages.h#newcode153\nchrome/common/chrome_utility_messages.h:153: IPC_MESSAGE_CONTROL0(ChromeUtilityHostMsg_ReleaseCachedFonts)\nOn 2011/09/15 16:18:23, John Abd-El-Malek wrote:\n> instead of declaring this message for utility/renderer, it should be in\n> child_process_messages.h. and while you're at it, please move\n> ViewHostMsg_PreCacheFont as well and ChromeUtilityHostMsg_PreCacheFont\n\nDone.\n\nhttp://codereview.chromium.org/7866019/diff/4024/chrome/service/service_utility_process_host.cc\nFile chrome/service/service_utility_process_host.cc (right):\n\nhttp://codereview.chromium.org/7866019/diff/4024/chrome/service/service_utility_process_host.cc#newcode175\nchrome/service/service_utility_process_host.cc:175: ReleaseCachedFonts(pid());\nOn 2011/09/15 16:18:23, John Abd-El-Malek wrote:\n> you use pid for service processes, while for renderers you're using process_id\n> (which is not a pid, but rather a unique id). the reason we avoid using pids is\n> that they get recycled, which can cause some hard to catch bugs. Can you make\n> each ServiceutilityProcessHost generate a unique id using\n> ChildProcessInfo::GenerateChildProcessUniqueId, and pass that to the font\n> caching code\n\nDone.","disapproval":false,"date":"2011-09-16 02:14:06.080287","approval":false},{"sender":"jam@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"http://codereview.chromium.org/7866019/diff/18014/chrome/service/service_utility_process_host.cc\nFile chrome/service/service_utility_process_host.cc (right):\n\nhttp://codereview.chromium.org/7866019/diff/18014/chrome/service/service_utility_process_host.cc#newcode122\nchrome/service/service_utility_process_host.cc:122: unique_process_id_ = ChildProcessInfo::GenerateChildProcessUniqueId();\nwe usually set this in the constructor. that way the id stays the same even if the process crashes. it's also simpler to have the id from the beginning, instead of having some period of time when we don't have an id\n\nhttp://codereview.chromium.org/7866019/diff/18014/chrome/service/service_utility_process_host.h\nFile chrome/service/service_utility_process_host.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/18014/chrome/service/service_utility_process_host.h#newcode111\nchrome/service/service_utility_process_host.h:111: int unique_process_id();\nno need for this getter since it's only used in the class\n\nhttp://codereview.chromium.org/7866019/diff/18014/chrome/service/service_utility_process_host.h#newcode149\nchrome/service/service_utility_process_host.h:149: int unique_process_id_;\nnit: this should just be called process_id_ to be consistent with our other usages of this (i.e. we don't say unique_process_id anywhere)\n\nhttp://codereview.chromium.org/7866019/diff/18014/content/browser/browser_child_process_host.cc\nFile content/browser/browser_child_process_host.cc (right):\n\nhttp://codereview.chromium.org/7866019/diff/18014/content/browser/browser_child_process_host.cc#newcode158\ncontent/browser/browser_child_process_host.cc:158: base::GetProcId(child_process_->GetHandle()));\n1) this currently doesn't do anything, since it's using the pid instead of the process id\n\n2) why not do this in RenderMessageFilter::OnChannelError (not currently overriden, but can be for this purpose)? that way all the font related code is in one place\n\nhttp://codereview.chromium.org/7866019/diff/18014/content/common/child_process_messages.h\nFile content/common/child_process_messages.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/18014/content/common/child_process_messages.h#newcode66\ncontent/common/child_process_messages.h:66: IPC_SYNC_MESSAGE_CONTROL1_0(ChromeUtilityHostMsg_PreCacheFont,\nmessages in this file start with ChildProcessMsg or ChildProcessHostMsg. ChromeUtilityHostMsg would belong in chrome_utility_messages.h, and ViewHostMsg would belong in view_messages.h\n\nalso, sorry if I wasn't clear, but the reason I said these should be moved here is so that we avoid duplicate messages for the same purpose. i.e. there should be just one ChildHostMsg_PreCacheFont, and one ChildHostMsg_ReleaseCachedFonts","disapproval":false,"date":"2011-09-19 16:31:17.228128","approval":false},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"http://codereview.chromium.org/7866019/diff/18014/chrome/service/service_utility_process_host.cc\nFile chrome/service/service_utility_process_host.cc (right):\n\nhttp://codereview.chromium.org/7866019/diff/18014/chrome/service/service_utility_process_host.cc#newcode122\nchrome/service/service_utility_process_host.cc:122: unique_process_id_ = ChildProcessInfo::GenerateChildProcessUniqueId();\nOn 2011/09/19 16:31:17, John Abd-El-Malek wrote:\n> we usually set this in the constructor. that way the id stays the same even if\n> the process crashes. it's also simpler to have the id from the beginning,\n> instead of having some period of time when we don't have an id\n\nDone.\n\nhttp://codereview.chromium.org/7866019/diff/18014/chrome/service/service_utility_process_host.h\nFile chrome/service/service_utility_process_host.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/18014/chrome/service/service_utility_process_host.h#newcode111\nchrome/service/service_utility_process_host.h:111: int unique_process_id();\nOn 2011/09/19 16:31:17, John Abd-El-Malek wrote:\n> no need for this getter since it's only used in the class\n\nDone.\n\nhttp://codereview.chromium.org/7866019/diff/18014/chrome/service/service_utility_process_host.h#newcode149\nchrome/service/service_utility_process_host.h:149: int unique_process_id_;\nOn 2011/09/19 16:31:17, John Abd-El-Malek wrote:\n> nit: this should just be called process_id_ to be consistent with our other\n> usages of this (i.e. we don't say unique_process_id anywhere)\n\nDone.\n\nhttp://codereview.chromium.org/7866019/diff/18014/content/browser/browser_child_process_host.cc\nFile content/browser/browser_child_process_host.cc (right):\n\nhttp://codereview.chromium.org/7866019/diff/18014/content/browser/browser_child_process_host.cc#newcode158\ncontent/browser/browser_child_process_host.cc:158: base::GetProcId(child_process_->GetHandle()));\nOn 2011/09/19 16:31:17, John Abd-El-Malek wrote:\n> 1) this currently doesn't do anything, since it's using the pid instead of the\n> process id\n> \n> 2) why not do this in RenderMessageFilter::OnChannelError (not currently\n> overriden, but can be for this purpose)? that way all the font related code is\n> in one place\n\nDone.\n\nhttp://codereview.chromium.org/7866019/diff/18014/content/common/child_process_messages.h\nFile content/common/child_process_messages.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/18014/content/common/child_process_messages.h#newcode66\ncontent/common/child_process_messages.h:66: IPC_SYNC_MESSAGE_CONTROL1_0(ChromeUtilityHostMsg_PreCacheFont,\nOn 2011/09/19 16:31:17, John Abd-El-Malek wrote:\n> messages in this file start with ChildProcessMsg or ChildProcessHostMsg.\n> ChromeUtilityHostMsg would belong in chrome_utility_messages.h, and ViewHostMsg\n> would belong in view_messages.h\n> \n> also, sorry if I wasn't clear, but the reason I said these should be moved here\n> is so that we avoid duplicate messages for the same purpose. i.e. there should\n> be just one ChildHostMsg_PreCacheFont, and one ChildHostMsg_ReleaseCachedFonts\n\nDone.","disapproval":false,"date":"2011-09-19 18:22:51.516597","approval":false},{"sender":"jam@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"lgtm\n\nhttp://codereview.chromium.org/7866019/diff/27001/content/common/child_process_host.h\nFile content/common/child_process_host.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/27001/content/common/child_process_host.h#newcode93\ncontent/common/child_process_host.h:93: static void PreCacheFont(LOGFONT font, int pid);\nnit: here and below, and also in the cc file, these should be process_id to make it a little clearer that they're not pids","disapproval":false,"date":"2011-09-19 21:27:48.999884","approval":true},{"sender":"arthurhsu@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"http://codereview.chromium.org/7866019/diff/27001/content/common/child_process_host.h\nFile content/common/child_process_host.h (right):\n\nhttp://codereview.chromium.org/7866019/diff/27001/content/common/child_process_host.h#newcode93\ncontent/common/child_process_host.h:93: static void PreCacheFont(LOGFONT font, int pid);\nOn 2011/09/19 21:27:49, John Abd-El-Malek wrote:\n> nit: here and below, and also in the cc file, these should be process_id to make\n> it a little clearer that they're not pids\n\nDone.","disapproval":false,"date":"2011-09-19 22:47:31.832888","approval":false},{"sender":"commit-bot@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","commit-bot@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"Can't apply patch for file chrome/renderer/chrome_render_process_observer.cc.\nWhile running patch -p1 --forward --force;\npatching file chrome/renderer/chrome_render_process_observer.cc\nHunk #2 FAILED at 164.\n1 out of 2 hunks FAILED -- saving rejects to file chrome/renderer/chrome_render_process_observer.cc.rej","disapproval":false,"date":"2011-09-20 00:35:33.876969","approval":false},{"sender":"commit-bot@chromium.org","recipients":["arthurhsu@chromium.org","nsylvain@chromium.org","nsylvain@google.com","rvargas@chromium.org","jam@chromium.org","commit-bot@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","jam@chromium.org","dpranke+watch-content@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org","thestig@chromium.org","vandebo@chromium.org"],"text":"Change committed as 101911","disapproval":false,"date":"2011-09-20 03:33:24.095724","approval":false}],"owner_email":"arthurhsu@chromium.org","private":false,"base_url":"http://git.chromium.org/git/chromium.git@trunk","owner":"arthurhsu","subject":"New implementation of font precache on Windows.","created":"2011-09-09 23:22:18.770547","patchsets":[1,6003,6016,8004,4024,17001,18014,27001,33001,36001],"modified":"2011-09-20 03:33:24.393618","closed":true,"commit":false,"issue":7866019}