{"description":"Add RemoteFileSyncService interface for Sync FileSystem.\r\n\r\nBUG=156041\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=163805","cc":["chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"reviewers":["kinuko@chromium.org","thestig@chromium.org"],"messages":[{"sender":"tzik@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"PTAL","disapproval":false,"date":"2012-10-17 08:30:09.964930","approval":false},{"sender":"kinuko@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"http://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h\nFile chrome/browser/sync_file_system/remote_file_provider.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode27\nchrome/browser/sync_file_system/remote_file_provider.h:27: virtual bool deleted() = 0;\nIs it possible to reuse fileapi::FileChange for this purpose?\nDoes a remote change have distinction between kind=file or folder?\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode34\nchrome/browser/sync_file_system/remote_file_provider.h:34: RemoteFileProvider* remote_file_provider) = 0;\nMaybe... for now I don't think we need this argument?\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode43\nchrome/browser/sync_file_system/remote_file_provider.h:43: virtual void SetObserver(RemoteFileObserver* observer) = 0;\nCan you add a comment about the expected lifetime of the |observer|? (E.g. the observer needs to be alive etc)\n\nAlso if we're using usual (non-thread-safe / non-task-runner-safe) observer pattern I think AddObserver()/RemoveObserver() (used together with base::ObserverList) is more common pattern\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode52\nchrome/browser/sync_file_system/remote_file_provider.h:52: // After this method is called, GetRemoteChange() doesn't return remote-side\n... GetRemoteChange() won't include ... ?\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode60\nchrome/browser/sync_file_system/remote_file_provider.h:60: virtual scoped_ptr<RemoteChange> GetRemoteChange() = 0;\nReturns a remote change\n\nCan you also comment what happens if it's called when HasRemoteChange == false?\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode62\nchrome/browser/sync_file_system/remote_file_provider.h:62: // Notifies RemoveFileProvider of |change| is applied local filesystem.\n'Notifies' may be confusing with observer related methods.\n\n\"Tells this RemoteFileProvider that the |change| has been applied to the local side.\" ...?\n\nOr maybe simply we can name it DidProcessRemoteChange(...)\n\n(Let's be consistent with terms in the method names: Change or RemoteChange)\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode66\nchrome/browser/sync_file_system/remote_file_provider.h:66: // invoked with status and temporary file.\nPlease comment if the temporary file needs to be discarded on the caller side or not.\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode76\nchrome/browser/sync_file_system/remote_file_provider.h:76: // Upon completion, |callback| is invoked with status.\nPlease comment if the caller needs to make sure file_path is unmodified while upload is ongoing.\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/sync_file_system_service.cc\nFile chrome/browser/sync_file_system/sync_file_system_service.cc (right):\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/sync_file_system_service.cc#newcode103\nchrome/browser/sync_file_system/sync_file_system_service.cc:103: void SyncFileSystemService::MayStartRemoteSync() {\nMay -> Maybe ?\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/sync_file_system_service.h\nFile chrome/browser/sync_file_system/sync_file_system_service.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/sync_file_system_service.h#newcode75\nchrome/browser/sync_file_system/sync_file_system_service.h:75: std::set<RemoteFileProvider*> pending_providers_;\nI haven't looked closely at the .cc file but what this 'pending' means?","disapproval":false,"date":"2012-10-17 09:22:57.442010","approval":false},{"sender":"tzik@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"Thanks! Updated.\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h\nFile chrome/browser/sync_file_system/remote_file_provider.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode27\nchrome/browser/sync_file_system/remote_file_provider.h:27: virtual bool deleted() = 0;\nOn 2012/10/17 09:22:57, kinuko wrote:\n> Is it possible to reuse fileapi::FileChange for this purpose?\n> Does a remote change have distinction between kind=file or folder?\n\nI think it's true iff we use single provider.\n\nWhen we advance to multi provider at some point, we'll need to add some extra data for each change (e.g. md5, resource id, changestamp), and might want to hide them from SyncService.\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode34\nchrome/browser/sync_file_system/remote_file_provider.h:34: RemoteFileProvider* remote_file_provider) = 0;\nOn 2012/10/17 09:22:57, kinuko wrote:\n> Maybe... for now I don't think we need this argument?\n\nIt's correct if we start from single provider, as we chatted.\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode43\nchrome/browser/sync_file_system/remote_file_provider.h:43: virtual void SetObserver(RemoteFileObserver* observer) = 0;\nOn 2012/10/17 09:22:57, kinuko wrote:\n> Can you add a comment about the expected lifetime of the |observer|? (E.g. the\n> observer needs to be alive etc)\n> \n> Also if we're using usual (non-thread-safe / non-task-runner-safe) observer\n> pattern I think AddObserver()/RemoveObserver() (used together with\n> base::ObserverList) is more common pattern\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode60\nchrome/browser/sync_file_system/remote_file_provider.h:60: virtual scoped_ptr<RemoteChange> GetRemoteChange() = 0;\nOn 2012/10/17 09:22:57, kinuko wrote:\n> Returns a remote change\n> \n> Can you also comment what happens if it's called when HasRemoteChange == false?\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode62\nchrome/browser/sync_file_system/remote_file_provider.h:62: // Notifies RemoveFileProvider of |change| is applied local filesystem.\nOn 2012/10/17 09:22:57, kinuko wrote:\n> 'Notifies' may be confusing with observer related methods.\n> \n> \"Tells this RemoteFileProvider that the |change| has been applied to the local\n> side.\" ...?\n> \n> Or maybe simply we can name it DidProcessRemoteChange(...)\n> \n> (Let's be consistent with terms in the method names: Change or RemoteChange)\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode66\nchrome/browser/sync_file_system/remote_file_provider.h:66: // invoked with status and temporary file.\nOn 2012/10/17 09:22:57, kinuko wrote:\n> Please comment if the temporary file needs to be discarded on the caller side or\n> not.\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/remote_file_provider.h#newcode76\nchrome/browser/sync_file_system/remote_file_provider.h:76: // Upon completion, |callback| is invoked with status.\nOn 2012/10/17 09:22:57, kinuko wrote:\n> Please comment if the caller needs to make sure file_path is unmodified while\n> upload is ongoing.\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/sync_file_system_service.cc\nFile chrome/browser/sync_file_system/sync_file_system_service.cc (right):\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/sync_file_system_service.cc#newcode103\nchrome/browser/sync_file_system/sync_file_system_service.cc:103: void SyncFileSystemService::MayStartRemoteSync() {\nOn 2012/10/17 09:22:57, kinuko wrote:\n> May -> Maybe ?\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/sync_file_system_service.h\nFile chrome/browser/sync_file_system/sync_file_system_service.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/1005/chrome/browser/sync_file_system/sync_file_system_service.h#newcode75\nchrome/browser/sync_file_system/sync_file_system_service.h:75: std::set<RemoteFileProvider*> pending_providers_;\nOn 2012/10/17 09:22:57, kinuko wrote:\n> I haven't looked closely at the .cc file but what this 'pending' means?\n\nRemoved.\n\nIn this version of patchset, I considered multiprovider case, and stored providers that have pending changes here.","disapproval":false,"date":"2012-10-18 07:18:07.959590","approval":false},{"sender":"kinuko@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"http://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h\nFile chrome/browser/sync_file_system/remote_file_provider.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode34\nchrome/browser/sync_file_system/remote_file_provider.h:34: // This class represents the changelist of the remote files.\nThis class provides access to the remote side changes. ?\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode43\nchrome/browser/sync_file_system/remote_file_provider.h:43: // remote file changes for |origin|.\nRegisters |origin| to track remote side changes for the |origin|. ?\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode44\nchrome/browser/sync_file_system/remote_file_provider.h:44: virtual void RegisterOrigin(const GURL& origin) = 0;\nOn the second thought I may prefer having this on RemoteFileProvider.  Or we should make it clearer if each method is for a current change or for the provider itself.\n\nAlso in the current interface it's unclear when we populate a next change...\n\nI think I still like a simpler traditional design like following:\n\nclass RemoteChange {\n  bool IsDeletion();\n  bool IsDirectory();\n  FileSystemURL& GetURL();\n};\n\nclass RemoteFileSyncService {\n  explicit RemoteFileSyncService(RemoteChangeObserver* observer);\n\n  void RegisterOriginForTrackChanges(origin);\n  void UnregisterOriginForTrackChanges(origin);\n\n  // Returns a next available remote change.\n  // This returns NULL if no changes are available.\n  // The returned change becomes invalid once FinalizeChange() is called on this\n  // change or after this service gets killed.\n  // Also calling this again without finalizing or ungetting the returned change\n  // (by calling FinalizeChange or UngetChange) is invalid.\n  // The ownership of the returned change is owned by this service and must not\n  // be deleted by the caller.\n  RemoteChange* GetNextChange();\n\n  // Finalizes the given change.\n  // This must be called before next GetNextChange() is called.\n  void FinalizeChange(RemoteChange*);\n\n  // Ungets the given change. This is useful when the consumer of the change\n  // is not ready for process and wants to revisit the change later.\n  void UngetChange(RemoteChange*);\n\n  // ...\n};\n\nWDYT? Let me know if I'm missing something.\n(I changed some class names or reverted some name changes; let's talk offline about them... sorry for not being really decisive)\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode48\nchrome/browser/sync_file_system/remote_file_provider.h:48: // remote file changes for |origin|.\nUnregisters |origin| so that this provider no longer returns changes for the |origin|.\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode52\nchrome/browser/sync_file_system/remote_file_provider.h:52: virtual bool HasRemoteChange() = 0;\nnit: Change -> Changes ?\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode60\nchrome/browser/sync_file_system/remote_file_provider.h:60: virtual bool IsDeletionChange() = 0;\nHow do we know if a change is for a file or a directory?\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode75\nchrome/browser/sync_file_system/remote_file_provider.h:75: class RemoteFileProvider {\nFor consistency & since this interface is still specific to the sync service can we rename this to RemoteFileSyncService?\n(Or RemoteFileSyncBackend maybe)\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/sync_file_system_service.cc\nFile chrome/browser/sync_file_system/sync_file_system_service.cc (right):\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/sync_file_system_service.cc#newcode54\nchrome/browser/sync_file_system/sync_file_system_service.cc:54: DCHECK(remote_file_provider_);\nUntil we resolve the TODO on line 158 don't we hit this assertion?\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/sync_file_system_service.cc#newcode57\nchrome/browser/sync_file_system/sync_file_system_service.cc:57: app_url, file_system_context, callback);\nHmm... while you're there can you also change this to app_url.GetOrigin() ?\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/sync_file_system_service.cc#newcode105\nchrome/browser/sync_file_system/sync_file_system_service.cc:105: base::Bind(&SyncFileSystemService::DidDownloadFile, AsWeakPtr()));\nWe also need to handle directory cases.\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/sync_file_system_service.h\nFile chrome/browser/sync_file_system/sync_file_system_service.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/sync_file_system_service.h#newcode52\nchrome/browser/sync_file_system/sync_file_system_service.h:52: typedef std::map<std::string, RemoteFileProvider*> RemoteFileProviderMap;\nNot necessary for now?\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/sync_file_system_service.h#newcode68\nchrome/browser/sync_file_system/sync_file_system_service.h:68: bool sync_is_running_;\nremote_sync_is_running_ at least for now?","disapproval":false,"date":"2012-10-18 13:54:32.631250","approval":false},{"sender":"tzik@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"Thanks for reviewing, Kinuko-san. I'm addressing your comment.\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h\nFile chrome/browser/sync_file_system/remote_file_provider.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode60\nchrome/browser/sync_file_system/remote_file_provider.h:60: virtual bool IsDeletionChange() = 0;\nOn 2012/10/18 13:54:32, kinuko wrote:\n> How do we know if a change is for a file or a directory?\n\nChange data from Drive server seems not containing mime-type, which is needed to determine the file was file or directory.\nIs it needed for proceeding RemoteSync?\n\nIf it's needed, we can add a field to database entry to store that.","disapproval":false,"date":"2012-10-19 04:32:07.880130","approval":false},{"sender":"kinuko@chromium.org","recipients":["reply@chromiumcodereview-hr.appspotmail.com"],"text":"Ok I think I have an alternative proposal. The problem is that the remote\r\nsync service wants to control the sync flow since most of sync detail needs\r\nto be hidden inside the remote service, while the current model assumes the\r\ncentral service takes the overall control.\r\nI think maybe we can reverse the role.  What about a model like following?\r\n\r\n// This interface is to be implemented/backed by LocalSyncFileService.\r\nclass RemoteChangeProcessor {\r\n  typedef Callback<void(SyncStatusCode status,\r\n                        ChangeList& change)> PrepareSyncCallback;\r\n\r\n  // This must be called before processing the change for the |url|.\r\n  // This tries to lock the target |url| and returns the local changes\r\n  // if any.\r\n  virtual void PrepareSync(\r\n      const FileSystemURL& url,\r\n      const PrepareSyncCallback& callback) = 0;\r\n\r\n  // Call this to apply the remote change. If the change type is\r\n  // ADD_OR_UPDATE for a file, |local_path| needs to point to a\r\n  // local file path that contains the remote file image.\r\n  virtual void ApplyChange(\r\n      const FileChange& change,\r\n      const FilePath& local_path,\r\n      const FileSystemURL& url,\r\n      const StatusCallback& callback) = 0;\r\n};\r\n\r\nclass RemoteChangeObserver {\r\n  virtual void OnRemoteChangeAvailable(int64 pending_changes);\r\n};\r\n\r\nclass RemoteFileSyncService {\r\n  explicit RemoteFileSyncService(RemoteChangeObserver* observer);\r\n  void RegisterOriginForTrackChanges(origin);\r\n  void UnregisterOriginForTrackChanges(origin);\r\n\r\n  // Called by the sync engine to process one remote change.\r\n  // After a change is processed |callback| will be called (to return\r\n  // the control to the sync engine).\r\n  void ProcessChange(RemoteChangeProcessor* processor,\r\n                     StatusCallback& callback);\r\n};\r\n\r\nThe sync engine determines when to call remote_service->ProcessChange based\r\non the # of pending changes/operations in local/remote side.\r\nIn this way most of the logic you've wrote in\r\nSyncFileSystemService::MaybeStartRemoteSync() can be implemented in\r\nRemoteFileSyncService::ProcessChange in a more straightforward way.\r\n\r\nWDYT?\r\n\r\n\r\n\r\n\r\nOn Fri, Oct 19, 2012 at 1:32 PM, <tzik@chromium.org> wrote:\r\n\r\n> Thanks for reviewing, Kinuko-san. I'm addressing your comment.\r\n>\r\n>\r\n>\r\n> http://codereview.chromium.**org/11187021/diff/2008/chrome/**\r\n> browser/sync_file_system/**remote_file_provider.h<http://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h>\r\n> File chrome/browser/sync_file_**system/remote_file_provider.h (right):\r\n>\r\n> http://codereview.chromium.**org/11187021/diff/2008/chrome/**\r\n> browser/sync_file_system/**remote_file_provider.h#**newcode60<http://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode60>\r\n> chrome/browser/sync_file_**system/remote_file_provider.h:**60: virtual\r\n> bool\r\n> IsDeletionChange() = 0;\r\n> On 2012/10/18 13:54:32, kinuko wrote:\r\n>\r\n>> How do we know if a change is for a file or a directory?\r\n>>\r\n>\r\n> Change data from Drive server seems not containing mime-type, which is\r\n> needed to determine the file was file or directory.\r\n> Is it needed for proceeding RemoteSync?\r\n>\r\n> If it's needed, we can add a field to database entry to store that.\r\n>\r\n> http://codereview.chromium.**org/11187021/<http://codereview.chromium.org/11187021/>\r\n>\r\n","disapproval":false,"date":"2012-10-19 14:27:24.678340","approval":false},{"sender":"kinuko@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"On 2012/10/19 14:27:24, kinuko wrote:\n> Ok I think I have an alternative proposal. The problem is that the remote\n> sync service wants to control the sync flow since most of sync detail needs\n> to be hidden inside the remote service, while the current model assumes the\n> central service takes the overall control.\n> I think maybe we can reverse the role.  What about a model like following?\n> \n> // This interface is to be implemented/backed by LocalSyncFileService.\n> class RemoteChangeProcessor {\n>   typedef Callback<void(SyncStatusCode status,\n>                         ChangeList& change)> PrepareSyncCallback;\n> \n>   // This must be called before processing the change for the |url|.\n>   // This tries to lock the target |url| and returns the local changes\n>   // if any.\n>   virtual void PrepareSync(\n>       const FileSystemURL& url,\n>       const PrepareSyncCallback& callback) = 0;\n> \n>   // Call this to apply the remote change. If the change type is\n>   // ADD_OR_UPDATE for a file, |local_path| needs to point to a\n>   // local file path that contains the remote file image.\n>   virtual void ApplyChange(\n>       const FileChange& change,\n>       const FilePath& local_path,\n>       const FileSystemURL& url,\n>       const StatusCallback& callback) = 0;\n> };\n> \n> class RemoteChangeObserver {\n>   virtual void OnRemoteChangeAvailable(int64 pending_changes);\n> };\n> \n> class RemoteFileSyncService {\n>   explicit RemoteFileSyncService(RemoteChangeObserver* observer);\n>   void RegisterOriginForTrackChanges(origin);\n>   void UnregisterOriginForTrackChanges(origin);\n> \n>   // Called by the sync engine to process one remote change.\n>   // After a change is processed |callback| will be called (to return\n>   // the control to the sync engine).\n>   void ProcessChange(RemoteChangeProcessor* processor,\n>                      StatusCallback& callback);\n> };\n> \n> The sync engine determines when to call remote_service->ProcessChange based\n> on the # of pending changes/operations in local/remote side.\n> In this way most of the logic you've wrote in\n> SyncFileSystemService::MaybeStartRemoteSync() can be implemented in\n> RemoteFileSyncService::ProcessChange in a more straightforward way.\n> \n> WDYT?\n\nCreated a skeleton changeset along this line:\nhttp://codereview.chromium.org/11234025/\n\n> On Fri, Oct 19, 2012 at 1:32 PM, <mailto:tzik@chromium.org> wrote:\n> \n> > Thanks for reviewing, Kinuko-san. I'm addressing your comment.\n> >\n> >\n> >\n> > http://codereview.chromium.**org/11187021/diff/2008/chrome/**\n> >\n> browser/sync_file_system/**remote_file_provider.h<http://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h>\n> > File chrome/browser/sync_file_**system/remote_file_provider.h (right):\n> >\n> > http://codereview.chromium.**org/11187021/diff/2008/chrome/**\n> >\n> browser/sync_file_system/**remote_file_provider.h#**newcode60<http://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode60>\n> > chrome/browser/sync_file_**system/remote_file_provider.h:**60: virtual\n> > bool\n> > IsDeletionChange() = 0;\n> > On 2012/10/18 13:54:32, kinuko wrote:\n> >\n> >> How do we know if a change is for a file or a directory?\n> >>\n> >\n> > Change data from Drive server seems not containing mime-type, which is\n> > needed to determine the file was file or directory.\n> > Is it needed for proceeding RemoteSync?\n> >\n> > If it's needed, we can add a field to database entry to store that.\n> >\n> >\n> http://codereview.chromium.**org/11187021/%3Chttp://codereview.chromium.org/11187021/>\n> >","disapproval":false,"date":"2012-10-22 08:44:01.233630","approval":false},{"sender":"tzik@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"Updated.\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h\nFile chrome/browser/sync_file_system/remote_file_provider.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode43\nchrome/browser/sync_file_system/remote_file_provider.h:43: // remote file changes for |origin|.\nOn 2012/10/18 13:54:32, kinuko wrote:\n> Registers |origin| to track remote side changes for the |origin|. ?\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode48\nchrome/browser/sync_file_system/remote_file_provider.h:48: // remote file changes for |origin|.\nOn 2012/10/18 13:54:32, kinuko wrote:\n> Unregisters |origin| so that this provider no longer returns changes for the\n> |origin|.\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/remote_file_provider.h#newcode75\nchrome/browser/sync_file_system/remote_file_provider.h:75: class RemoteFileProvider {\nOn 2012/10/18 13:54:32, kinuko wrote:\n> For consistency & since this interface is still specific to the sync service can\n> we rename this to RemoteFileSyncService?\n> (Or RemoteFileSyncBackend maybe)\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/sync_file_system_service.cc\nFile chrome/browser/sync_file_system/sync_file_system_service.cc (right):\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/sync_file_system_service.cc#newcode57\nchrome/browser/sync_file_system/sync_file_system_service.cc:57: app_url, file_system_context, callback);\nOn 2012/10/18 13:54:32, kinuko wrote:\n> Hmm... while you're there can you also change this to app_url.GetOrigin() ?\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/sync_file_system_service.h\nFile chrome/browser/sync_file_system/sync_file_system_service.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/2008/chrome/browser/sync_file_system/sync_file_system_service.h#newcode52\nchrome/browser/sync_file_system/sync_file_system_service.h:52: typedef std::map<std::string, RemoteFileProvider*> RemoteFileProviderMap;\nOn 2012/10/18 13:54:32, kinuko wrote:\n> Not necessary for now?\n\nDone.","disapproval":false,"date":"2012-10-23 04:19:32.487340","approval":false},{"sender":"kinuko@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"http://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/remote_file_sync_service.h\nFile chrome/browser/sync_file_system/remote_file_sync_service.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/remote_file_sync_service.h#newcode27\nchrome/browser/sync_file_system/remote_file_sync_service.h:27: void RemoveObserver(RemoteChangeObserver* observer);\nIt might be ok to leave them pure virtual too.. then we don't need the protected methods as well.\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/remote_file_sync_service.h#newcode39\nchrome/browser/sync_file_system/remote_file_sync_service.h:39: StatusCallback& callback) = 0;\nI think this should also let the caller know what URL it has worked on (to show status & to handle suspended sync properly).\n\nIn local service case I'm thinking about using this callback type:\ntypedef base::Callback<void(fileapi::SyncStatusCode status, fileapi::FileSystemURL& url)> SyncCompletionCallback;\n\nhttp://codereview.chromium.org/11234025/diff/12/chrome/browser/sync_file_system/local_file_sync_service.h\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/sync_file_system_callbacks.h\nFile chrome/browser/sync_file_system/sync_file_system_callbacks.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/sync_file_system_callbacks.h#newcode12\nchrome/browser/sync_file_system/sync_file_system_callbacks.h:12: typedef base::Callback<void(fileapi::SyncStatusCode)> StatusCallback;\nCan you move this under webkit/fileapi/syncable and split it into a separate patch (for a new bug)?\n\nProbably we can also put SyncCompletionCallback here too (see other comments)\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/sync_file_system_service.cc\nFile chrome/browser/sync_file_system/sync_file_system_service.cc (right):\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/sync_file_system_service.cc#newcode30\nchrome/browser/sync_file_system/sync_file_system_service.cc:30: // remote_file_service_->RemoveObserver(this);\nNot sure if this line is really necessary...","disapproval":false,"date":"2012-10-23 08:12:14.625180","approval":false},{"sender":"tzik@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"http://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/remote_file_sync_service.h\nFile chrome/browser/sync_file_system/remote_file_sync_service.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/remote_file_sync_service.h#newcode27\nchrome/browser/sync_file_system/remote_file_sync_service.h:27: void RemoveObserver(RemoteChangeObserver* observer);\nOn 2012/10/23 08:12:14, kinuko wrote:\n> It might be ok to leave them pure virtual too.. then we don't need the protected\n> methods as well.\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/remote_file_sync_service.h#newcode39\nchrome/browser/sync_file_system/remote_file_sync_service.h:39: StatusCallback& callback) = 0;\nOn 2012/10/23 08:12:14, kinuko wrote:\n> I think this should also let the caller know what URL it has worked on (to show\n> status & to handle suspended sync properly).\n> \n> In local service case I'm thinking about using this callback type:\n> typedef base::Callback<void(fileapi::SyncStatusCode status,\n> fileapi::FileSystemURL& url)> SyncCompletionCallback;\n> \n> http://codereview.chromium.org/11234025/diff/12/chrome/browser/sync_file_system/local_file_sync_service.h\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/sync_file_system_callbacks.h\nFile chrome/browser/sync_file_system/sync_file_system_callbacks.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/sync_file_system_callbacks.h#newcode12\nchrome/browser/sync_file_system/sync_file_system_callbacks.h:12: typedef base::Callback<void(fileapi::SyncStatusCode)> StatusCallback;\nOn 2012/10/23 08:12:14, kinuko wrote:\n> Can you move this under webkit/fileapi/syncable and split it into a separate\n> patch (for a new bug)?\n> \n> Probably we can also put SyncCompletionCallback here too (see other comments)\n\nDone at http://codereview.chromium.org/11265002/\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/sync_file_system_service.cc\nFile chrome/browser/sync_file_system/sync_file_system_service.cc (right):\n\nhttp://codereview.chromium.org/11187021/diff/14002/chrome/browser/sync_file_system/sync_file_system_service.cc#newcode30\nchrome/browser/sync_file_system/sync_file_system_service.cc:30: // remote_file_service_->RemoveObserver(this);\nOn 2012/10/23 08:12:14, kinuko wrote:\n> Not sure if this line is really necessary...\n\nDone.","disapproval":false,"date":"2012-10-24 03:32:33.392730","approval":false},{"sender":"kinuko@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"lgtm\n\nPlease update the issue description!\n\nhttp://codereview.chromium.org/11187021/diff/22001/chrome/browser/sync_file_system/sync_file_system_service.cc\nFile chrome/browser/sync_file_system/sync_file_system_service.cc (right):\n\nhttp://codereview.chromium.org/11187021/diff/22001/chrome/browser/sync_file_system/sync_file_system_service.cc#newcode53\nchrome/browser/sync_file_system/sync_file_system_service.cc:53: remote_file_service_->RegisterOriginForTrackingChanges(app_url.GetOrigin());\nI think this line should be added when you add implementation. We can just leave TODO comment like:\n// TODO(tzik): Call remote_file_service_->RegisterOriginForTrackingChanges() here","disapproval":false,"date":"2012-10-24 05:17:21.636490","approval":true},{"sender":"tzik@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","thestig@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"Thanks for reviewing, Kinuko-san.\n\nLei, could you take a look as OWNERS of chrome/?\n\nhttp://codereview.chromium.org/11187021/diff/22001/chrome/browser/sync_file_system/sync_file_system_service.cc\nFile chrome/browser/sync_file_system/sync_file_system_service.cc (right):\n\nhttp://codereview.chromium.org/11187021/diff/22001/chrome/browser/sync_file_system/sync_file_system_service.cc#newcode53\nchrome/browser/sync_file_system/sync_file_system_service.cc:53: remote_file_service_->RegisterOriginForTrackingChanges(app_url.GetOrigin());\nOn 2012/10/24 05:17:21, kinuko wrote:\n> I think this line should be added when you add implementation. We can just leave\n> TODO comment like:\n> // TODO(tzik): Call remote_file_service_->RegisterOriginForTrackingChanges()\n> here\n\nDone.","disapproval":false,"date":"2012-10-24 05:32:52.265330","approval":false},{"sender":"thestig@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","thestig@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"lgtm\n\nhttp://codereview.chromium.org/11187021/diff/27001/chrome/browser/sync_file_system/remote_file_sync_service.h\nFile chrome/browser/sync_file_system/remote_file_sync_service.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/27001/chrome/browser/sync_file_system/remote_file_sync_service.h#newcode9\nchrome/browser/sync_file_system/remote_file_sync_service.h:9: #include \"base/observer_list.h\"\nnit: not needed\n\nhttp://codereview.chromium.org/11187021/diff/27001/webkit/fileapi/syncable/sync_callbacks.h\nFile webkit/fileapi/syncable/sync_callbacks.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/27001/webkit/fileapi/syncable/sync_callbacks.h#newcode17\nwebkit/fileapi/syncable/sync_callbacks.h:17: }  // namespace sync_file_system\nnit: wrong namespace in the comment","disapproval":false,"date":"2012-10-24 05:53:19.210470","approval":true},{"sender":"tzik@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","thestig@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"Thanks! Updated!\n\nhttp://codereview.chromium.org/11187021/diff/27001/chrome/browser/sync_file_system/remote_file_sync_service.h\nFile chrome/browser/sync_file_system/remote_file_sync_service.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/27001/chrome/browser/sync_file_system/remote_file_sync_service.h#newcode9\nchrome/browser/sync_file_system/remote_file_sync_service.h:9: #include \"base/observer_list.h\"\nOn 2012/10/24 05:53:19, Lei Zhang wrote:\n> nit: not needed\n\nDone.\n\nhttp://codereview.chromium.org/11187021/diff/27001/webkit/fileapi/syncable/sync_callbacks.h\nFile webkit/fileapi/syncable/sync_callbacks.h (right):\n\nhttp://codereview.chromium.org/11187021/diff/27001/webkit/fileapi/syncable/sync_callbacks.h#newcode17\nwebkit/fileapi/syncable/sync_callbacks.h:17: }  // namespace sync_file_system\nOn 2012/10/24 05:53:19, Lei Zhang wrote:\n> nit: wrong namespace in the comment\n\nDone.","disapproval":false,"date":"2012-10-24 06:43:11.216960","approval":false},{"sender":"commit-bot@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","thestig@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/tzik@chromium.org/11187021/31003","disapproval":false,"date":"2012-10-24 07:38:45.222000","approval":false},{"sender":"commit-bot@chromium.org","recipients":["tzik@chromium.org","kinuko@chromium.org","thestig@chromium.org","chromium-reviews@chromium.org","tzik+watch@chromium.org","kinuko+watch@chromium.org"],"text":"Retried try job too often for step(s) compile","disapproval":false,"date":"2012-10-24 08:52:32.965890","approval":false}],"owner_email":"tzik@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"tzik","subject":"Add RemoteFileSyncService interface","created":"2012-10-17 06:42:37.923880","patchsets":[1,2001,1005,2007,2008,14002,22001,27001,31003,28008],"modified":"2012-10-24 10:15:33.903390","closed":true,"commit":false,"issue":11187021}