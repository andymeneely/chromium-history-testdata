{"files":{"net/spdy/spdy_http_stream.cc":{"status":"M    ","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":24,"num_removed":4,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Extra line","draft":false,"lineno":22,"date":"2010-08-16 23:24:02.172722","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 23:24:02, vandebo wrote:\n> Extra line\n\nDone.","draft":false,"lineno":22,"date":"2010-08-16 23:55:11.860677","left":false}],"id":26031,"is_binary":false},"net/http/http_stream_factory.h":{"status":"A    ","num_chunks":1,"no_base_file":false,"property_changes":"\nAdded: svn:eol-style\n   + LF\n","num_added":114,"num_removed":0,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"is map needed?","draft":false,"lineno":8,"date":"2010-08-16 22:31:30.827460","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Why are these not exposed in the HttpStream interface?","draft":false,"lineno":46,"date":"2010-08-16 22:31:30.827636","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"HttpNetworkTransaction -> HttpSteamFactory","draft":false,"lineno":86,"date":"2010-08-16 22:31:30.827811","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> is map needed?\n\nDone.","draft":false,"lineno":8,"date":"2010-08-16 23:55:11.856717","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Why are these not exposed in the HttpStream interface?\n\nI liked them here, because the settings persist longer than the lifetime of the stream.  However, they could be added to the stream as well; they are generic, not specific to any particular stream type (http/spdy)\n\n","draft":false,"lineno":46,"date":"2010-08-16 23:55:11.856920","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> HttpNetworkTransaction -> HttpSteamFactory\n\nDone.","draft":false,"lineno":86,"date":"2010-08-16 23:55:11.857109","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"On 2010/08/16 23:55:11, Mike Belshe wrote:\n> On 2010/08/16 22:31:30, vandebo wrote:\n> > Why are these not exposed in the HttpStream interface?\n> \n> I liked them here, because the settings persist longer than the lifetime of the\n> stream.  However, they could be added to the stream as well; they are generic,\n> not specific to any particular stream type (http/spdy)\n\nSorry, I meant StreamFactory interface.\n","draft":false,"lineno":46,"date":"2010-08-17 17:18:52.716675","left":false}],"id":26023,"is_binary":false},"net/socket/client_socket_handle.h":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":13,"messages":[],"id":26030,"is_binary":false},"net/http/http_network_transaction.h":{"status":"M    ","num_chunks":13,"no_base_file":false,"property_changes":"","num_added":22,"num_removed":110,"messages":[],"id":26017,"is_binary":false},"net/spdy/spdy_stream.h":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":0,"messages":[],"id":26037,"is_binary":false},"net/spdy/spdy_http_stream.h":{"status":"M    ","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":15,"num_removed":2,"messages":[],"id":26032,"is_binary":false},"net/http/http_basic_stream.cc":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":21,"num_removed":0,"messages":[],"id":26011,"is_binary":false},"net/http/http_proxy_client_socket.h":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":26019,"is_binary":false},"net/http/http_network_transaction_unittest.cc":{"status":"M    ","num_chunks":20,"no_base_file":false,"property_changes":"","num_added":41,"num_removed":40,"messages":[],"id":26018,"is_binary":false},"chrome/browser/browser_main.cc":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":3,"messages":[],"id":26009,"is_binary":false},"net/http/http_stream.h":{"status":"M    ","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":23,"num_removed":1,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Alphabetize","draft":false,"lineno":26,"date":"2010-08-16 22:31:30.826398","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Is it the stream that's reusable, or the underlying connection?  I think a stream is still only good for a single transaction.  This is fine, just clarifying the comment would be good.\n\nI'm not sure we could completely fold in the flag, but we could probably do some of the checking within the Close method and the flag could then only indicate the cases where the consumers of the class think it shouldn't be reused.","draft":false,"lineno":77,"date":"2010-08-16 22:31:30.826575","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Is it possible to establish this state automatically?","draft":false,"lineno":102,"date":"2010-08-16 22:31:30.826751","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"It would be good to document the behavior of this method and the next for the non-ssl connection case.","draft":false,"lineno":104,"date":"2010-08-16 22:31:30.826931","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Alphabetize\n\nDone.","draft":false,"lineno":26,"date":"2010-08-16 23:55:11.855763","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"I updated the comment.\n\nI agree on the TODO() - and I will revisit.\nOn 2010/08/16 22:31:30, vandebo wrote:\n> Is it the stream that's reusable, or the underlying connection?  I think a\n> stream is still only good for a single transaction.  This is fine, just\n> clarifying the comment would be good.\n> \n> I'm not sure we could completely fold in the flag, but we could probably do some\n> of the checking within the Close method and the flag could then only indicate\n> the cases where the consumers of the class think it shouldn't be reused.\n\n","draft":false,"lineno":77,"date":"2010-08-16 23:55:11.855951","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Is it possible to establish this state automatically?\n\nIt might be.  I'd rather not change the logic back to HttpNetworkTransaction here.  I updated the TODO to cover this as well.","draft":false,"lineno":102,"date":"2010-08-16 23:55:11.856162","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> It would be good to document the behavior of this method and the next for the\n> non-ssl connection case.\n\nDone.","draft":false,"lineno":104,"date":"2010-08-16 23:55:11.856355","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"I know it's not you, but this is in the wrong order too.","draft":false,"lineno":21,"date":"2010-08-17 17:18:52.716467","left":false}],"id":26021,"is_binary":false},"net/http/http_network_layer.cc":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":10,"num_removed":10,"messages":[],"id":26013,"is_binary":false},"net/spdy/spdy_network_transaction_unittest.cc":{"status":"M    ","num_chunks":8,"no_base_file":false,"property_changes":"","num_added":19,"num_removed":15,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Do these changes indicate a small change in behavior?","draft":false,"lineno":1251,"date":"2010-08-16 23:24:02.172912","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 23:24:02, vandebo wrote:\n> Do these changes indicate a small change in behavior?\n\nYes, it has to do with that we post back through the message loop instead of completing immediately.  In looking through the old code, I realize my comment at our discussion today was incorrect - the old code does *not* post back through the messageloop.\n\n","draft":false,"lineno":1251,"date":"2010-08-16 23:55:11.860875","left":false}],"id":26033,"is_binary":false},"net/net.gyp":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":5,"num_removed":0,"messages":[],"id":26029,"is_binary":false},"net/http/http_response_info.h":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Is this change needed?","draft":false,"lineno":10,"date":"2010-08-16 22:31:30.826189","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Is this change needed?\n\nI was hoping you didn't notice.  It's some C++ include error I can't figure out.  I get a template problem with SSLCertRequestInfo being referenced via refptr<> without it.\n","draft":false,"lineno":10,"date":"2010-08-16 23:55:11.855575","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"On 2010/08/16 23:55:11, Mike Belshe wrote:\n> On 2010/08/16 22:31:30, vandebo wrote:\n> > Is this change needed?\n> \n> I was hoping you didn't notice.  It's some C++ include error I can't figure out.\n>  I get a template problem with SSLCertRequestInfo being referenced via refptr<>\n> without it.\n\nMan those can be a real PITA. Should probably figure it out though. What context are you getting the error in?\n","draft":false,"lineno":10,"date":"2010-08-17 17:18:52.716247","left":false}],"id":26020,"is_binary":false},"net/spdy/spdy_session.h":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":6,"messages":[],"id":26035,"is_binary":false},"net/http/http_stream_request.h":{"status":"A    ","num_chunks":1,"no_base_file":false,"property_changes":"\nAdded: svn:eol-style\n   + LF\n","num_added":204,"num_removed":0,"messages":[],"id":26027,"is_binary":false},"net/http/http_stream_parser.h":{"status":"M    ","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":12,"num_removed":0,"messages":[],"id":26025,"is_binary":false},"net/http/http_network_session.cc":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":0,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"I think this will create a circular reference on HttpNetworkSession, preventing it from ever being freed.","draft":false,"lineno":65,"date":"2010-08-16 22:31:30.825136","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> I think this will create a circular reference on HttpNetworkSession, preventing\n> it from ever being freed.\n\nNice spot on this - you're right.  I found it yesterday and fixed it this morning in the latest revision.\n","draft":false,"lineno":65,"date":"2010-08-16 23:55:11.854891","left":false}],"id":26014,"is_binary":false},"net/http/http_basic_stream.h":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":10,"num_removed":0,"messages":[],"id":26012,"is_binary":false},"net/http/http_stream_parser.cc":{"status":"M    ","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":35,"num_removed":1,"messages":[],"id":26024,"is_binary":false},"net/http/http_stream_request.cc":{"status":"A    ","num_chunks":1,"no_base_file":false,"property_changes":"\nAdded: svn:eol-style\n   + LF\n","num_added":858,"num_removed":0,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"FYI, this isn't strictly necessary because it will happen anyway due to scoped_ptr<ClientSocketHandle>","draft":false,"lineno":71,"date":"2010-08-16 22:31:30.827997","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Looks like this returns a net error code and theoretically could return synchronously.","draft":false,"lineno":78,"date":"2010-08-16 22:31:30.828197","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Should also DCHECK(!establishing_tunnel)","draft":false,"lineno":145,"date":"2010-08-16 22:31:30.828405","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"If you want to get rid of this switch, you can fold at least the error cases into DoInitConnectionComplete.","draft":false,"lineno":213,"date":"2010-08-16 22:31:30.828604","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Why do we even have usercallback?  Completion in immediate or singalled to the delegate by OnStreamReady.\nShould only set usercallback if callback != NULL","draft":false,"lineno":241,"date":"2010-08-16 22:31:30.828834","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"It would be good to DCHECK(!connection_.get() || !connection_->socket()).","draft":false,"lineno":815,"date":"2010-08-16 22:31:30.829043","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"Yeah - code removed!\n\nOn 2010/08/16 22:31:30, vandebo wrote:\n> FYI, this isn't strictly necessary because it will happen anyway due to\n> scoped_ptr<ClientSocketHandle>\n\n","draft":false,"lineno":71,"date":"2010-08-16 23:55:11.857322","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Looks like this returns a net error code and theoretically could return\n> synchronously.\n\nYes.\n\n","draft":false,"lineno":78,"date":"2010-08-16 23:55:11.857531","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Should also DCHECK(!establishing_tunnel)\n\nDone.","draft":false,"lineno":145,"date":"2010-08-16 23:55:11.857735","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> If you want to get rid of this switch, you can fold at least the error cases\n> into DoInitConnectionComplete.\n\nI know - I tried this a couple of different ways.  Which do you think is better?\n\n","draft":false,"lineno":213,"date":"2010-08-16 23:55:11.857925","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Why do we even have usercallback?  Completion in immediate or singalled to the\n> delegate by OnStreamReady.\n> Should only set usercallback if callback != NULL\n\nDuh - of course.  I can prune this out.  We never call it, just pass it around...  Removed!\n\n","draft":false,"lineno":241,"date":"2010-08-16 23:55:11.858176","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> It would be good to DCHECK(!connection_.get() || !connection_->socket()).\n\nDone.","draft":false,"lineno":815,"date":"2010-08-16 23:55:11.858367","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"On 2010/08/16 23:55:11, Mike Belshe wrote:\n> On 2010/08/16 22:31:30, vandebo wrote:\n> > Looks like this returns a net error code and theoretically could return\n> > synchronously.\n> \n> Yes.\n\nOk, so the comment in StreamFactory should just say that Start returns a net error node, but the delegate will always be called. Hmm.  If that's the case, why return anything at all?\n","draft":false,"lineno":78,"date":"2010-08-17 17:18:52.716890","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"On 2010/08/16 23:55:11, Mike Belshe wrote:\n> On 2010/08/16 22:31:30, vandebo wrote:\n> > If you want to get rid of this switch, you can fold at least the error cases\n> > into DoInitConnectionComplete.\n> \n> I know - I tried this a couple of different ways.  Which do you think is better?\n\nShorter functions are better, but RunLoop is kind of strange with DoLoop as well.  If folding them in would get rid of RunLoop, it might be worth it.\n","draft":false,"lineno":213,"date":"2010-08-17 17:18:52.717113","left":false}],"id":26026,"is_binary":false},"net/http/stream_factory.h":{"status":"A    ","num_chunks":1,"no_base_file":false,"property_changes":"\nAdded: svn:eol-style\n   + LF\n","num_added":136,"num_removed":0,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Do you have both this interface and the HttpStreamFactory class per my request to ease pipelined streams?","draft":false,"lineno":5,"date":"2010-08-16 22:31:30.829271","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Can you comment on ownership of the passed stream?","draft":false,"lineno":34,"date":"2010-08-16 22:31:30.829489","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Comment on ownership of the pointers?","draft":false,"lineno":47,"date":"2010-08-16 22:31:30.829728","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"const ref?","draft":false,"lineno":49,"date":"2010-08-16 22:31:30.829901","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"const ref?","draft":false,"lineno":52,"date":"2010-08-16 22:31:30.830093","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"This sentence seems redundant with the next.","draft":false,"lineno":65,"date":"2010-08-16 22:31:30.830270","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"It seems that StreamFactory is already HTTP specific.  So maybe it should be HttpStreamFactory and the current HttpStreamFactory should be HttpStreamFactoryImpl?","draft":false,"lineno":69,"date":"2010-08-16 22:31:30.830470","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Given the warning in the comment, can you make these const refs ?","draft":false,"lineno":71,"date":"2010-08-16 22:31:30.830655","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Will const ref work?","draft":false,"lineno":84,"date":"2010-08-16 22:31:30.830831","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Doesn't seem that this interface needs this method.  Either the request is outstanding and the caller doesn't yet have the stream, or the caller knows and can keep track of being between OnNeedsProxyAuth() and RestartTunnelWithProxyAuth().","draft":false,"lineno":101,"date":"2010-08-16 22:31:30.831021","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Is this comment out of date?  I don't see a request id handle on the Cancel method.  Should this method just return the scoped_refptr<StreamRequestJob> ?","draft":false,"lineno":119,"date":"2010-08-16 22:31:30.831212","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Do you have both this interface and the HttpStreamFactory class per my request\n> to ease pipelined streams?\n\nYes, partially.  Does it meet your needs?\n\n","draft":false,"lineno":5,"date":"2010-08-16 23:55:11.858575","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Can you comment on ownership of the passed stream?\n\nDone.","draft":false,"lineno":34,"date":"2010-08-16 23:55:11.858797","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Comment on ownership of the pointers?\n\nDone.","draft":false,"lineno":47,"date":"2010-08-16 23:55:11.859035","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> const ref?\n\nDone.","draft":false,"lineno":49,"date":"2010-08-16 23:55:11.859240","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> const ref?\n\nNo - this is a reference counted object; documented the lifetime.\n\n","draft":false,"lineno":52,"date":"2010-08-16 23:55:11.859451","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> This sentence seems redundant with the next.\n\nDone.","draft":false,"lineno":65,"date":"2010-08-16 23:55:11.859657","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> It seems that StreamFactory is already HTTP specific.  So maybe it should be\n> HttpStreamFactory and the current HttpStreamFactory should be\n> HttpStreamFactoryImpl?\n\nFor now that may be true, but I do think that websockets will add another dimension.  Even if the arguments are less than perfect now, I'd prefer the current naming, and then expand to make more generic as necessary?\n\n","draft":false,"lineno":69,"date":"2010-08-16 23:55:11.859883","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Given the warning in the comment, can you make these const refs ?\n\nNo-  they get modified on both sides.  That's the strange part of the contract between these two classes.\n\n","draft":false,"lineno":71,"date":"2010-08-16 23:55:11.860097","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Will const ref work?\n\nThe receiver is likely going to stick this cert into the SSLConfig, which is not-const.  I don't really want to dig into the const-ness of that object?\n\n","draft":false,"lineno":84,"date":"2010-08-16 23:55:11.860293","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Is this comment out of date?  I don't see a request id handle on the Cancel\n> method.  Should this method just return the scoped_refptr<StreamRequestJob> ?\n\nComment was out of date.  I waffled on the return value.\n\n","draft":false,"lineno":119,"date":"2010-08-16 23:55:11.860478","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"On 2010/08/16 23:55:11, Mike Belshe wrote:\n> On 2010/08/16 22:31:30, vandebo wrote:\n> > Do you have both this interface and the HttpStreamFactory class per my request\n> > to ease pipelined streams?\n> \n> Yes, partially.  Does it meet your needs?\n\nBecause of the TLSIntolerant and alternate protocol stuff it makes it much less clear if it's a win. The PiplinedHttpStreamFactory should be below that level... If it's not too much trouble, you can get rid of the extra layer and I'll deal with it later.\n","draft":false,"lineno":5,"date":"2010-08-17 17:18:52.717331","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"On 2010/08/16 23:55:11, Mike Belshe wrote:\n> On 2010/08/16 22:31:30, vandebo wrote:\n> > Given the warning in the comment, can you make these const refs ?\n> \n> No-  they get modified on both sides.  That's the strange part of the contract\n> between these two classes.\n\nHmm, indeed.  Since they are both in and out arguments, should the net_log come first?  I know it usually goes at the end, but the style guide says it should be the first arg in this case.  I'm ok ignoring the style guide here, just pointing it out.\n","draft":false,"lineno":71,"date":"2010-08-17 17:18:52.717532","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Doesn't seem that this interface needs this method.  Either the request is\n> outstanding and the caller doesn't yet have the stream, or the caller knows and\n> can keep track of being between OnNeedsProxyAuth() and\n> RestartTunnelWithProxyAuth().\n\nWhat do you think of killing this method?","draft":false,"lineno":101,"date":"2010-08-17 17:18:52.717727","left":false}],"id":26028,"is_binary":false},"net/spdy/spdy_stream.cc":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":0,"messages":[],"id":26036,"is_binary":false},"net/spdy/spdy_session.cc":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":11,"num_removed":0,"messages":[],"id":26034,"is_binary":false},"net/http/http_stream_factory.cc":{"status":"A    ","num_chunks":1,"no_base_file":false,"property_changes":"\nAdded: svn:eol-style\n   + LF\n","num_added":134,"num_removed":0,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"// static ?","draft":false,"lineno":22,"date":"2010-08-16 22:31:30.827239","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> // static ?\n\nDone.","draft":false,"lineno":22,"date":"2010-08-16 23:55:11.856540","left":false}],"id":26022,"is_binary":false},"net/http/http_network_transaction.cc":{"status":"M    ","num_chunks":37,"no_base_file":false,"property_changes":"","num_added":265,"num_removed":935,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Shouldn't this turn into if(!stream_.get()) ?","draft":false,"lineno":436,"date":"2010-08-16 22:31:30.825566","left":true},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Is it possible to get a Read with stream_request_ != NULL and not establishing a tunnel?  I'm thinking it's not.","draft":false,"lineno":314,"date":"2010-08-16 22:31:30.825765","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"I don't think this captures all of cases that used to, but you've probably thought about it more?","draft":false,"lineno":1065,"date":"2010-08-16 22:31:30.825966","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"These two DCHECKs didn't make the move.  Are they trivially true now?","draft":false,"lineno":699,"date":"2010-08-16 23:24:02.171375","left":true},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"This check didn't make the move the HttpStreamRequest, and I think it's required.","draft":false,"lineno":1024,"date":"2010-08-16 23:24:02.171607","left":true},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"IIRC, spdy doesn't use the passed headers, so why bother to generate them in the spdy case?","draft":false,"lineno":1096,"date":"2010-08-16 23:24:02.171805","left":true},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"What's going on with this change?","draft":false,"lineno":619,"date":"2010-08-16 23:24:02.172063","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Since you removed the if(using_ssl_), this should probably DCHECK that we are using SSL before trying to get the CertRequestInfo.","draft":false,"lineno":713,"date":"2010-08-16 23:24:02.172281","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Maybe just pull this if above the Log call and DCHECK(result == OK) ?","draft":false,"lineno":751,"date":"2010-08-16 23:24:02.172500","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> Is it possible to get a Read with stream_request_ != NULL and not establishing a\n> tunnel?  I'm thinking it's not.\n\nI agree.  Changed the if and added a DCHECK.\n\n","draft":false,"lineno":314,"date":"2010-08-16 23:55:11.855168","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 22:31:30, vandebo wrote:\n> I don't think this captures all of cases that used to, but you've probably\n> thought about it more?\n\nI did spend a lot of time thinking about this.  It was tricky to untangle exactly what the old code was trying to do.  In particular, there is a case of ShouldResendFailedRequest where it differentiated \"unused\" vs \"unused_idle\" sockets, which I didn't think was correct. \n\n","draft":false,"lineno":1065,"date":"2010-08-16 23:55:11.855366","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 23:24:02, vandebo wrote:\n> These two DCHECKs didn't make the move.  Are they trivially true now?\n\nRe-added...\n\n","draft":false,"lineno":699,"date":"2010-08-17 00:35:26.711365","left":true},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 23:24:02, vandebo wrote:\n> This check didn't make the move the HttpStreamRequest, and I think it's\n> required.\n\nI don't think so; this result will simply pass through and be returned to the caller; we'll fall through RunLoop, and then call the delegate for OnNeedsProxyAuth.\n\n","draft":false,"lineno":1024,"date":"2010-08-17 00:35:26.711594","left":true},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 23:24:02, vandebo wrote:\n> IIRC, spdy doesn't use the passed headers, so why bother to generate them in the\n> spdy case?\n\nRight you are - my oversight.  Fixed.\n\n","draft":false,"lineno":1096,"date":"2010-08-17 00:35:26.711768","left":true},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 23:24:02, vandebo wrote:\n> What's going on with this change?\n\nThe change looks funny because the state \"STATE_INIT_STREAM\" has different meaning than before.  If we have a stream after we got our auth credentials, we're ready to go straight into STATE_SEND_REQUEST.  If we don't have a stream, then we need to go get one.\n\nIn the old state machine STATE_INIT_STREAM was kind of a pseudo-state for SPDY which was used just before calling STATE_SEND_REQUEST.\n\nI might be able to get away with a DCHECK(stream_.get()) and always proceeding to STATE_SEND_REQUEST.\n\n","draft":false,"lineno":619,"date":"2010-08-17 00:35:26.712043","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 23:24:02, vandebo wrote:\n> Since you removed the if(using_ssl_), this should probably DCHECK that we are\n> using SSL before trying to get the CertRequestInfo.\n\nDone.","draft":false,"lineno":713,"date":"2010-08-17 00:35:26.712232","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/16 23:24:02, vandebo wrote:\n> Maybe just pull this if above the Log call and DCHECK(result == OK) ?\n\nHmm - I don't understand?  Looks like we can drop through with other codes?","draft":false,"lineno":751,"date":"2010-08-17 00:35:26.712442","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"On 2010/08/17 00:35:26, Mike Belshe wrote:\n> On 2010/08/16 23:24:02, vandebo wrote:\n> > This check didn't make the move the HttpStreamRequest, and I think it's\n> > required.\n> \n> I don't think so; this result will simply pass through and be returned to the\n> caller; we'll fall through RunLoop, and then call the delegate for\n> OnNeedsProxyAuth.\n\nHmm, it does seem that ReconsiderProxyAfterError has no side-effects when getting this error code, but the function name doesn't imply that.  It might make things easier to understand in the future to handle this error explicitly (even if it's just to return it up the stack).\n","draft":false,"lineno":1024,"date":"2010-08-17 17:18:52.715391","left":true},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"On 2010/08/17 00:35:26, Mike Belshe wrote:\n> On 2010/08/16 23:24:02, vandebo wrote:\n> > What's going on with this change?\n> \n> The change looks funny because the state \"STATE_INIT_STREAM\" has different\n> meaning than before.  If we have a stream after we got our auth credentials,\n> we're ready to go straight into STATE_SEND_REQUEST.  If we don't have a stream,\n> then we need to go get one.\n> \n> In the old state machine STATE_INIT_STREAM was kind of a pseudo-state for SPDY\n> which was used just before calling STATE_SEND_REQUEST.\n> \n> I might be able to get away with a DCHECK(stream_.get()) and always proceeding\n> to STATE_SEND_REQUEST.\n\nYea, it looks like the only way to get to this state is through DoInitStreamComplete.\n","draft":false,"lineno":619,"date":"2010-08-17 17:18:52.715625","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"On 2010/08/17 00:35:26, Mike Belshe wrote:\n> On 2010/08/16 23:24:02, vandebo wrote:\n> > Maybe just pull this if above the Log call and DCHECK(result == OK) ?\n> \n> Hmm - I don't understand?  Looks like we can drop through with other codes?\n\nThis is nothing - I was just saying that you add the if (OK); instead, you could move the CONNECTION_CLOSED block above the LogTransaction... block and DCHECK_EQ(OK, result)","draft":false,"lineno":751,"date":"2010-08-17 17:18:52.715828","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"On 2010/08/16 23:55:11, Mike Belshe wrote:\n> On 2010/08/16 22:31:30, vandebo wrote:\n> > I don't think this captures all of cases that used to, but you've probably\n> > thought about it more?\n> \n> I did spend a lot of time thinking about this.  It was tricky to untangle\n> exactly what the old code was trying to do.  In particular, there is a case of\n> ShouldResendFailedRequest where it differentiated \"unused\" vs \"unused_idle\"\n> sockets, which I didn't think was correct. \n\nSometimes we end up connecting a socket, but not needing it because we reuse another socket first.  So we can end up with a socket that hasn't ever been used, but has sat idle for a long time.  For this purpose, we should treat it as a reused socket because it might have timed out - meaning we should try again with a fresh socket.","draft":false,"lineno":1065,"date":"2010-08-17 17:18:52.716026","left":false}],"id":26016,"is_binary":false},"net/http/http_network_session.h":{"status":"M    ","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":0,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Should this be just a scoped_refptr<StreamFactory> ?  Or is the StreamFactory / HttpStreamFactory distinction actually an explicit HTTP support issue?","draft":false,"lineno":172,"date":"2010-08-16 22:31:30.825382","left":false}],"id":26015,"is_binary":false},"net/http/http_auth_controller.cc":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":0,"messages":[],"id":26010,"is_binary":false}},"owner_email":"mbelshe@chromium.org","owner":"Mike Belshe","message":"''","try_job_results":[{"parent_name":null,"tests":[],"slave":null,"url":"http://build.chromium.org/buildbot/try-server/buildstatus?builder=mac&number=42190","timestamp":"2010-08-17 17:18:52.843063","builder":"mac","clobber":null,"project":null,"reason":null,"result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIyCxIFSXNzdWUYusXBAQwLEghQYXRjaFNldBiuvQMMCxIMVHJ5Sm9iUmVzdWx0GL3eBQw","requester":null,"buildnumber":null,"revision":null},{"parent_name":null,"tests":[],"slave":null,"url":"http://build.chromium.org/buildbot/try-server/buildstatus?builder=mac_valgrind&number=259","timestamp":"2010-08-17 17:18:52.843063","builder":"mac_valgrind","clobber":null,"project":null,"reason":null,"result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIyCxIFSXNzdWUYusXBAQwLEghQYXRjaFNldBiuvQMMCxIMVHJ5Sm9iUmVzdWx0GL7eBQw","requester":null,"buildnumber":null,"revision":null},{"parent_name":null,"tests":[],"slave":null,"url":"http://build.chromium.org/buildbot/try-server/buildstatus?builder=linux&number=42314","timestamp":"2010-08-17 17:18:52.843063","builder":"linux","clobber":null,"project":null,"reason":null,"result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIyCxIFSXNzdWUYusXBAQwLEghQYXRjaFNldBiuvQMMCxIMVHJ5Sm9iUmVzdWx0GL_eBQw","requester":null,"buildnumber":null,"revision":null},{"parent_name":null,"tests":[],"slave":null,"url":"http://build.chromium.org/buildbot/try-server/buildstatus?builder=linux_valgrind&number=1832","timestamp":"2010-08-17 17:18:52.843063","builder":"linux_valgrind","clobber":null,"project":null,"reason":null,"result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIyCxIFSXNzdWUYusXBAQwLEghQYXRjaFNldBiuvQMMCxIMVHJ5Sm9iUmVzdWx0GMDeBQw","requester":null,"buildnumber":null,"revision":null}],"created":"2010-08-13 22:19:34.934036","url":null,"num_comments":87,"modified":"2012-01-13 14:33:37.227209","patchset":57006,"issue":3171002}