{"files":{"net/spdy/spdy_http_stream.cc":{"status":"M    ","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":24,"num_removed":4,"messages":[],"id":38028,"is_binary":false},"net/socket/ssl_client_socket_nss_factory.cc":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":38027,"is_binary":false},"net/http/http_stream_factory.h":{"status":"A    ","num_chunks":1,"no_base_file":false,"property_changes":"\nAdded: svn:eol-style\n   + LF\n","num_added":114,"num_removed":0,"messages":[],"id":38019,"is_binary":false},"net/socket/client_socket_handle.h":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":13,"messages":[],"id":38026,"is_binary":false},"net/http/http_network_transaction.h":{"status":"M    ","num_chunks":13,"no_base_file":false,"property_changes":"","num_added":22,"num_removed":110,"messages":[],"id":38013,"is_binary":false},"net/spdy/spdy_stream.h":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":0,"messages":[],"id":38034,"is_binary":false},"net/spdy/spdy_http_stream.h":{"status":"M    ","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":15,"num_removed":2,"messages":[],"id":38029,"is_binary":false},"net/http/http_basic_stream.cc":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":21,"num_removed":0,"messages":[],"id":38007,"is_binary":false},"net/http/http_proxy_client_socket.h":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":38015,"is_binary":false},"net/http/http_network_transaction_unittest.cc":{"status":"M    ","num_chunks":20,"no_base_file":false,"property_changes":"","num_added":41,"num_removed":40,"messages":[],"id":38014,"is_binary":false},"chrome/browser/browser_main.cc":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":3,"messages":[],"id":38005,"is_binary":false},"net/http/http_stream.h":{"status":"M    ","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":21,"num_removed":1,"messages":[{"author":"Ryan Hamilton","author_email":"rch@chromium.org","text":"Looking at HttpNetworkTransaction, it appears that the \"not_reusable\" could be computed by the HttpStream itself.  In the case of a SpdyStream.  The callers seems to be looking at the contents of the response headers, as well as the state of stream_, both of which the http_stream has access to.  If so we could eliminate the parameter all together.  FWIW, it appears that not_reusable is all about the connection underneath the stream, as opposed to the stream itself, since it looks like everywhere the stream is Closed(), stream_ is also reset().","draft":false,"lineno":79,"date":"2010-08-13 20:42:04.707276","left":false},{"author":"Ryan Hamilton","author_email":"rch@chromium.org","text":"This interface seems so much cleaner that trying to extract the SSLClientSocket and interrogating it directly!","draft":false,"lineno":103,"date":"2010-08-13 20:42:04.707450","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 20:42:04, rch wrote:\n> Looking at HttpNetworkTransaction, it appears that the \"not_reusable\" could be\n> computed by the HttpStream itself.  In the case of a SpdyStream.  The callers\n> seems to be looking at the contents of the response headers, as well as the\n> state of stream_, both of which the http_stream has access to.  If so we could\n> eliminate the parameter all together.  FWIW, it appears that not_reusable is all\n> about the connection underneath the stream, as opposed to the stream itself,\n> since it looks like everywhere the stream is Closed(), stream_ is also reset().\n\n\nYes, basically there are times where the HttpNetworkTransaction wants to influence the underlying connection.  As you point out, with a little more smarts in the Stream, maybe the stream can do this and we won't need it to be passed through.  If it is ok with you - I'll take that work on in a separate CL.\n\n","draft":false,"lineno":79,"date":"2010-08-13 21:26:07.324033","left":false}],"id":38017,"is_binary":false},"net/http/http_network_layer.cc":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":10,"num_removed":10,"messages":[],"id":38009,"is_binary":false},"net/spdy/spdy_network_transaction_unittest.cc":{"status":"M    ","num_chunks":8,"no_base_file":false,"property_changes":"","num_added":19,"num_removed":15,"messages":[],"id":38030,"is_binary":false},"net/net.gyp":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":5,"num_removed":0,"messages":[],"id":38025,"is_binary":false},"net/http/http_response_info.h":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":38016,"is_binary":false},"net/spdy/spdy_session.h":{"status":"M    ","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":6,"messages":[],"id":38032,"is_binary":false},"net/http/http_stream_request.h":{"status":"A    ","num_chunks":1,"no_base_file":false,"property_changes":"\nAdded: svn:eol-style\n   + LF\n","num_added":206,"num_removed":0,"messages":[],"id":38023,"is_binary":false},"net/http/http_stream_parser.h":{"status":"M    ","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":12,"num_removed":0,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"I think these should be handled in the HttpBasicStream class.  The idea is to have multiple HttpStreamParsers on a single socket in the pipelined case.","draft":false,"lineno":66,"date":"2010-08-13 23:00:01.912441","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 23:00:01, vandebo wrote:\n> I think these should be handled in the HttpBasicStream class.  The idea is to\n> have multiple HttpStreamParsers on a single socket in the pipelined case.\n\nThat would be fine by me - but for now, the connection_ (which is needed here) is owned at the HttpStreamParser level...\n\n","draft":false,"lineno":66,"date":"2010-08-16 03:38:44.562584","left":false}],"id":38021,"is_binary":false},"net/http/http_network_session.cc":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":0,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"In a later CL, should all the socket factories get moved inside the stream factory?","draft":false,"lineno":64,"date":"2010-08-13 23:00:01.911572","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 23:00:01, vandebo wrote:\n> In a later CL, should all the socket factories get moved inside the stream\n> factory?\n\nYup - I think that is a better container.  Added a TODO().\n\n","draft":false,"lineno":64,"date":"2010-08-16 03:38:44.561680","left":false}],"id":38010,"is_binary":false},"net/http/http_basic_stream.h":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":10,"num_removed":0,"messages":[],"id":38008,"is_binary":false},"net/http/http_stream_parser.cc":{"status":"M    ","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":35,"num_removed":1,"messages":[{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Should this and GetSSLCertRequestInfo also check connection_->IsConnected() first?  It might prevent an incorrect cast in some in-between states, like during tunnel auth. (or maybe not)","draft":false,"lineno":579,"date":"2010-08-13 23:00:01.912252","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 23:00:01, vandebo wrote:\n> Should this and GetSSLCertRequestInfo also check connection_->IsConnected()\n> first?  It might prevent an incorrect cast in some in-between states, like\n> during tunnel auth. (or maybe not)\n\nDone.  (BTW - this exposed a bug in the MockSSLClientSocket where it isn't tracking connected state properly- separate CL in progress for that now)","draft":false,"lineno":579,"date":"2010-08-16 03:38:44.562381","left":false}],"id":38020,"is_binary":false},"net/http/http_stream_request.cc":{"status":"A    ","num_chunks":1,"no_base_file":false,"property_changes":"\nAdded: svn:eol-style\n   + LF\n","num_added":834,"num_removed":0,"messages":[],"id":38022,"is_binary":false},"net/http/stream_factory.h":{"status":"A    ","num_chunks":1,"no_base_file":false,"property_changes":"\nAdded: svn:eol-style\n   + LF\n","num_added":129,"num_removed":0,"messages":[],"id":38024,"is_binary":false},"net/spdy/spdy_stream.cc":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":0,"messages":[],"id":38033,"is_binary":false},"net/spdy/spdy_session.cc":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":11,"num_removed":0,"messages":[],"id":38031,"is_binary":false},"net/http/http_stream_factory.cc":{"status":"A    ","num_chunks":1,"no_base_file":false,"property_changes":"\nAdded: svn:eol-style\n   + LF\n","num_added":136,"num_removed":0,"messages":[],"id":38018,"is_binary":false},"net/http/http_network_transaction.cc":{"status":"M    ","num_chunks":37,"no_base_file":false,"property_changes":"","num_added":233,"num_removed":933,"messages":[{"author":"erikchen","author_email":"erikchen@google.com","text":"should you be setting next_state_ here?","draft":false,"lineno":210,"date":"2010-08-13 19:59:15.367188","left":false},{"author":"erikchen","author_email":"erikchen@google.com","text":"should you be setting next_state_ here?","draft":false,"lineno":244,"date":"2010-08-13 19:59:15.367415","left":false},{"author":"erikchen","author_email":"erikchen@google.com","text":"spdy can return ERR_IO_PENDING and not be done. this function still needs separate logic for using_spdy_.","draft":false,"lineno":808,"date":"2010-08-13 19:59:15.367598","left":false},{"author":"erikchen","author_email":"erikchen@google.com","text":"Is there a reason stream_.reset() is not being called?","draft":false,"lineno":967,"date":"2010-08-13 19:59:15.367797","left":false},{"author":"Ryan Hamilton","author_email":"rch@chromium.org","text":"Just to reiterate my earlier point, it seems like the stream could easily figure out how to compute keep alive, and that would make HNT's job easier.  In fact, if HttpStream's destructor called Close(), then HNT's destructor here could simply let stream_ destruct itself...","draft":false,"lineno":456,"date":"2010-08-13 20:42:04.706381","left":false},{"author":"Ryan Hamilton","author_email":"rch@chromium.org","text":"Should we perhaps change the name of this method from using_ssl (which seems a bit confusing if the url was http://, but we fetched it over spdy+ssl) to something like is_https_request()?","draft":false,"lineno":464,"date":"2010-08-13 20:42:04.706641","left":false},{"author":"Ryan Hamilton","author_email":"rch@chromium.org","text":"stream_request_.release()?","draft":false,"lineno":577,"date":"2010-08-13 20:42:04.706855","left":false},{"author":"Ryan Hamilton","author_email":"rch@chromium.org","text":"Again here, the computation of keep_alive is merely a function of the stream_","draft":false,"lineno":818,"date":"2010-08-13 20:42:04.707068","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 19:59:15, erikchen wrote:\n> should you be setting next_state_ here?\n\nNope - in this case we're in the STATE_INIT_STREAM_COMPLETED state (the stream_request is still active).  I should add a DCHECK to make this more clear.\n\nI am still working on this part of the code tho.\n\n","draft":false,"lineno":210,"date":"2010-08-13 20:55:12.612344","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 19:59:15, erikchen wrote:\n> should you be setting next_state_ here?\n\nNo - same as above.\n","draft":false,"lineno":244,"date":"2010-08-13 20:55:12.612548","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"As per discussion, I don't think so.  We should not be coming into this routine with ERR_IO_PENDING.  I'll DCHECK that just for good measure.\n\nOn 2010/08/13 19:59:15, erikchen wrote:\n> spdy can return ERR_IO_PENDING and not be done. this function still needs\n> separate logic for using_spdy_.\n\n","draft":false,"lineno":808,"date":"2010-08-13 20:55:12.612733","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 19:59:15, erikchen wrote:\n> Is there a reason stream_.reset() is not being called?\n\nNo.  added.\n\n","draft":false,"lineno":967,"date":"2010-08-13 20:55:12.612998","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 20:42:04, rch wrote:\n> Just to reiterate my earlier point, it seems like the stream could easily figure\n> out how to compute keep alive, and that would make HNT's job easier.  In fact,\n> if HttpStream's destructor called Close(), then HNT's destructor here could\n> simply let stream_ destruct itself...\n\nI think you're right.  I'm adding a TODO for it.\n\n","draft":false,"lineno":456,"date":"2010-08-13 21:26:07.323104","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 20:42:04, rch wrote:\n> Should we perhaps change the name of this method from using_ssl (which seems a\n> bit confusing if the url was http://, but we fetched it over spdy+ssl) to\n> something like is_https_request()?\n\nDone.","draft":false,"lineno":464,"date":"2010-08-13 21:26:07.323343","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 20:42:04, rch wrote:\n> stream_request_.release()?\n\nNo - that would release the pointer, but not clean it up.  I've updated the comment to not say \"release\" :-)\n\n","draft":false,"lineno":577,"date":"2010-08-13 21:26:07.323557","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 20:42:04, rch wrote:\n> Again here, the computation of keep_alive is merely a function of the stream_\n\nAgree, also marked the TODO().\n\n","draft":false,"lineno":818,"date":"2010-08-13 21:26:07.323790","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"You could just call OnIOComplete at the end of each of these.","draft":false,"lineno":390,"date":"2010-08-13 23:00:01.911864","left":false},{"author":"vandebo","author_email":"vandebo@chromium.org","text":"Have you seen a case where more data is read after IsResponseBodyComplete returns true, are you just changing the semantic of exactly when we cleanup the connection?","draft":false,"lineno":813,"date":"2010-08-13 23:00:01.912063","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"On 2010/08/13 23:00:01, vandebo wrote:\n> You could just call OnIOComplete at the end of each of these.\n\nGood call. done.\n\n","draft":false,"lineno":390,"date":"2010-08-16 03:38:44.561957","left":false},{"author":"Mike Belshe","author_email":"mbelshe@chromium.org","text":"I actually don't think I changed the semantics here - the semantics were just weird.  I think it could maybe further be simplified.  The reason I don't think it changes is because we should get a zero length read when the stream is really finshed; closing the stream before that is wrong.  Previously we would reset the connection (releasing it to the pool) one read earlier, but the overall semantics are equivalent.  Hopefully that sounds right?\n\nOn 2010/08/13 23:00:01, vandebo wrote:\n> Have you seen a case where more data is read after IsResponseBodyComplete\n> returns true, are you just changing the semantic of exactly when we cleanup the\n> connection?\n\n","draft":false,"lineno":813,"date":"2010-08-16 03:38:44.562176","left":false}],"id":38012,"is_binary":false},"net/http/http_network_session.h":{"status":"M    ","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":0,"messages":[],"id":38011,"is_binary":false},"net/http/http_auth_controller.cc":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":0,"messages":[],"id":38006,"is_binary":false}},"owner_email":"mbelshe@chromium.org","owner":"Mike Belshe","message":"''","try_job_results":[{"parent_name":null,"tests":[],"slave":null,"url":"http://build.chromium.org/buildbot/try-server/buildstatus?builder=win&number=44478","timestamp":"2010-08-16 03:38:44.624069","builder":"win","clobber":null,"project":null,"reason":null,"result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIwCxIFSXNzdWUYusXBAQwLEghQYXRjaFNldBgbDAsSDFRyeUpvYlJlc3VsdBjizgUM","requester":null,"buildnumber":null,"revision":null},{"parent_name":null,"tests":[],"slave":null,"url":"http://build.chromium.org/buildbot/try-server/buildstatus?builder=linux&number=42217","timestamp":"2010-08-16 03:38:44.624069","builder":"linux","clobber":null,"project":null,"reason":null,"result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIwCxIFSXNzdWUYusXBAQwLEghQYXRjaFNldBgbDAsSDFRyeUpvYlJlc3VsdBjjzgUM","requester":null,"buildnumber":null,"revision":null},{"parent_name":null,"tests":[],"slave":null,"url":"http://build.chromium.org/buildbot/try-server/buildstatus?builder=mac&number=42093","timestamp":"2010-08-16 03:38:44.624069","builder":"mac","clobber":null,"project":null,"reason":null,"result":"2","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIwCxIFSXNzdWUYusXBAQwLEghQYXRjaFNldBgbDAsSDFRyeUpvYlJlc3VsdBjkzgUM","requester":null,"buildnumber":null,"revision":null}],"created":"2010-08-13 07:25:55.888757","url":null,"num_comments":29,"modified":"2012-01-13 14:33:36.262334","patchset":27,"issue":3171002}