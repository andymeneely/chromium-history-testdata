{"description":"Added support for O3D in Chrome on Mac OS X using CoreGraphics drawing\nmodel by rendering offscreen, reading back the frame buffer, and\ndrawing the rendering results into the CGContextRef.\n\nThis code path is currently Chrome-specific, but could be used for any\nbrowser with similar characteristics. This will require refactoring of\nthe drawing and event model selection code, which may be done in a\nsubsequent bug.\n\nChanged the RenderSurface APIs to allow the Bitmap for readback to be\npassed in. Added Client::SetOffscreenRenderingSurfaces so that the\nentry point Client::RenderClient() can be used unchanged.\n\nFixed problem with plugin_enable_fullscreen_msg gyp variable which\nneeds to be in top-level gypi so #define is consistent throughout\nproject. Fixed minor issue in Cocoa key event handling. Fixed log\nmessage causing crashes when render target attachment fails.\n\nChrome currently blacklists the O3D plugin's MIME type, so to enable\nsupport for O3D this blacklist entry needs to be removed from Chrome.\n\nRan nearly all O3D samples in Chrome on Mac OS X. There are a couple\nof failures which will be fixed in subsequent bugs. Also ran samples\nin Safari and Firefox on Mac and verified no performance regressions.\n\nBUG=http://code.google.com/p/o3d/issues/detail?id=215\nTEST=ran O3D samples in Chrome, Safari and Firefox\n\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=41233","cc":["o3d-review@googlegroups.com"],"reviewers":["maf@google.com","gman@chromium.org"],"messages":[{"sender":"kbr@chromium.org","recipients":["kbr@chromium.org","maf@google.com","gman@chromium.org","o3d-review@googlegroups.com"],"text":"Please review. Thanks.","disapproval":false,"date":"2010-03-06 00:27:49.660281","approval":false},{"sender":"gman@chromium.org","recipients":["kbr@chromium.org","maf@google.com","gman@chromium.org","o3d-review@googlegroups.com"],"text":"LGTM\n\nhttp://codereview.chromium.org/669220/diff/1026/1031\nFile core/cross/gl/render_surface_gl.cc (right):\n\nhttp://codereview.chromium.org/669220/diff/1026/1031#newcode59\ncore/cross/gl/render_surface_gl.cc:59: DCHECK(renderer);\nDCHECK that the bitmap is the correct size, levels and format for ReadPixels?\n\nhttp://codereview.chromium.org/669220/diff/1026/1030\nFile core/cross/render_surface.cc (right):\n\nhttp://codereview.chromium.org/669220/diff/1026/1030#newcode90\ncore/cross/render_surface.cc:90: bitmap->width() != static_cast<unsigned int>(clip_width()) ||\ncheck that bitmap->levels() = 1 and bitmap->format() is Texture::ARGB8?\n\nhttp://codereview.chromium.org/669220/diff/1026/1036\nFile core/win/d3d9/render_surface_d3d9.cc (right):\n\nhttp://codereview.chromium.org/669220/diff/1026/1036#newcode79\ncore/win/d3d9/render_surface_d3d9.cc:79: Bitmap::Ref bitmap) const {\nDCHECK or test and fail that the bitmap is the correct size, levels and format for ReadPixels?","disapproval":false,"date":"2010-03-10 22:24:33.771228","approval":true},{"sender":"maf@google.com","recipients":["kbr@chromium.org","maf@google.com","gman@chromium.org","o3d-review@googlegroups.com"],"text":"http://codereview.chromium.org/669220/diff/1026/1038\nFile plugin/mac/plugin_mac.mm (right):\n\nhttp://codereview.chromium.org/669220/diff/1026/1038#newcode275\nplugin/mac/plugin_mac.mm:275: NPN_InvalidateRect(instance, NULL);\nIt is OK to pass NULL here? I don't see this in the spec. https://developer-stage.mozilla.org/en/NPN_InvalidateRect","disapproval":false,"date":"2010-03-10 22:56:20.344804","approval":false},{"sender":"maf@google.com","recipients":["kbr@chromium.org","maf@google.com","gman@chromium.org","o3d-review@googlegroups.com"],"text":"http://codereview.chromium.org/669220/diff/1026/1041\nFile plugin/mac/main_mac.mm (right):\n\nhttp://codereview.chromium.org/669220/diff/1026/1041#newcode97\nplugin/mac/main_mac.mm:97: unsigned width = bitmap->width();\nGoogle coding guidelines forbid unsigned, but I understand that this is endemic on our code base.","disapproval":false,"date":"2010-03-10 23:00:44.921397","approval":false},{"sender":"kbr@chromium.org","recipients":["kbr@chromium.org","maf@google.com","gman@chromium.org","o3d-review@googlegroups.com"],"text":"http://codereview.chromium.org/669220/diff/1026/1031\nFile core/cross/gl/render_surface_gl.cc (right):\n\nhttp://codereview.chromium.org/669220/diff/1026/1031#newcode59\ncore/cross/gl/render_surface_gl.cc:59: DCHECK(renderer);\nOn 2010/03/10 22:24:33, greggman wrote:\n> DCHECK that the bitmap is the correct size, levels and format for ReadPixels?\n\nDone.\n\nhttp://codereview.chromium.org/669220/diff/1026/1030\nFile core/cross/render_surface.cc (right):\n\nhttp://codereview.chromium.org/669220/diff/1026/1030#newcode90\ncore/cross/render_surface.cc:90: bitmap->width() != static_cast<unsigned int>(clip_width()) ||\nOn 2010/03/10 22:24:33, greggman wrote:\n> check that bitmap->levels() = 1 and bitmap->format() is Texture::ARGB8?\n\nDone.\n\nhttp://codereview.chromium.org/669220/diff/1026/1036\nFile core/win/d3d9/render_surface_d3d9.cc (right):\n\nhttp://codereview.chromium.org/669220/diff/1026/1036#newcode79\ncore/win/d3d9/render_surface_d3d9.cc:79: Bitmap::Ref bitmap) const {\nOn 2010/03/10 22:24:33, greggman wrote:\n> DCHECK or test and fail that the bitmap is the correct size, levels and format\n> for ReadPixels?\n\nDone.\n\nhttp://codereview.chromium.org/669220/diff/1026/1041\nFile plugin/mac/main_mac.mm (right):\n\nhttp://codereview.chromium.org/669220/diff/1026/1041#newcode97\nplugin/mac/main_mac.mm:97: unsigned width = bitmap->width();\nOn 2010/03/10 23:00:45, maf wrote:\n> Google coding guidelines forbid unsigned, but I understand that this is endemic\n> on our code base.\n\nYes, several of these changes don't compile without using unsigned.\n\nhttp://codereview.chromium.org/669220/diff/1026/1038\nFile plugin/mac/plugin_mac.mm (right):\n\nhttp://codereview.chromium.org/669220/diff/1026/1038#newcode275\nplugin/mac/plugin_mac.mm:275: NPN_InvalidateRect(instance, NULL);\nOn 2010/03/10 22:56:20, maf wrote:\n> It is OK to pass NULL here? I don't see this in the spec.\n> https://developer-stage.mozilla.org/en/NPN_InvalidateRect\n\nGood point. I had been working against the Chrome implementation, which invalidates the plugin's entire region. I checked the Firefox source code and it will crash. Changed to pass in a rectangle explicitly covering the plugin's entire region.","disapproval":false,"date":"2010-03-11 00:52:15.527312","approval":false},{"sender":"maf@google.com","recipients":["kbr@chromium.org","maf@google.com","gman@chromium.org","o3d-review@googlegroups.com"],"text":"LGTM","disapproval":false,"date":"2010-03-11 01:02:26.187530","approval":true},{"sender":"maf@google.com","recipients":["kbr@chromium.org","maf@google.com","gman@chromium.org","o3d-review@googlegroups.com"],"text":"LGTM","disapproval":false,"date":"2010-03-11 01:02:26.487649","approval":true}],"owner_email":"kbr@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src/o3d/","owner":"Ken Russell","subject":"Added support for O3D in Chrome on Mac OS X using CoreGraphics drawing...","created":"2010-03-06 00:26:04.672617","patchsets":[1,1026,5002,22001],"modified":"2011-05-09 13:38:12.287801","closed":true,"commit":false,"issue":669220}