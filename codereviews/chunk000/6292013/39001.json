{"files":{"net/spdy/spdy_proxy_client_socket.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":2,"messages":[],"id":40014,"is_binary":false},"net/spdy/spdy_http_stream.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":26,"num_removed":5,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"You should initialize *eof to false. Your comment in spdy_stream.h leaves this state ambiguous. It's probably best to always set *eof. If *eof was already true, then how can the user tell if this code also set it to true?","draft":false,"lineno":288,"date":"2011-03-03 19:47:48.071711","left":false},{"author":"Satish","author_email":"satish@chromium.org","text":"On 2011/03/03 19:47:48, willchan wrote:\n> You should initialize *eof to false. Your comment in spdy_stream.h leaves this\n> state ambiguous. It's probably best to always set *eof. If *eof was already\n> true, then how can the user tell if this code also set it to true?\n\n*eof is already initialized below in line 292, not to false but to the stream->eof(). Or have I misunderstood?","draft":false,"lineno":288,"date":"2011-03-03 22:21:44.053636","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"On 2011/03/03 22:21:44, Satish wrote:\n> On 2011/03/03 19:47:48, willchan wrote:\n> > You should initialize *eof to false. Your comment in spdy_stream.h leaves this\n> > state ambiguous. It's probably best to always set *eof. If *eof was already\n> > true, then how can the user tell if this code also set it to true?\n> \n> *eof is already initialized below in line 292, not to false but to the\n> stream->eof(). Or have I misunderstood?\n\nOops, I'm blind. ","draft":false,"lineno":288,"date":"2011-03-03 22:26:54.694172","left":false}],"id":40009,"is_binary":false},"net/base/upload_data.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":3,"messages":[],"id":40004,"is_binary":false},"net/spdy/spdy_proxy_client_socket.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":1,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"Shouldn't this also do NOTREACHED() and return ERR_UNEXPECTED?","draft":false,"lineno":98,"date":"2011-03-03 19:47:48.072212","left":false}],"id":40015,"is_binary":false},"net/spdy/spdy_stream_unittest.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":2,"messages":[],"id":40019,"is_binary":false},"net/base/upload_data_stream.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":12,"num_removed":0,"messages":[],"id":40006,"is_binary":false},"net/spdy/spdy_stream.h":{"status":"M","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":14,"num_removed":4,"messages":[],"id":40018,"is_binary":false},"chrome/common/net/url_fetcher.cc":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":15,"num_removed":17,"messages":[],"id":40001,"is_binary":false},"net/url_request/url_request_unittest.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":7,"messages":[],"id":40024,"is_binary":false},"net/spdy/spdy_test_util.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":29,"num_removed":0,"messages":[],"id":40020,"is_binary":false},"net/spdy/spdy_http_utils.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":1,"messages":[],"id":40012,"is_binary":false},"net/base/upload_data_stream.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":17,"num_removed":2,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"This is not a trivial accessor. Also, this may be better named as IsOnLastChunk().","draft":false,"lineno":146,"date":"2011-03-03 19:47:48.071066","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"Can you get away with a const reference?","draft":false,"lineno":147,"date":"2011-03-03 19:47:48.071226","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"If this doesn't depend on |elements|, then how about moving it above?\n\nBut should this ever be called in the non-chunked control path? Perhaps we should have a DCHECK(data_->is_chunked()); I don't understand what \"peek_end_of_chunks()\" means for a non-chunked UploadDataStream. Rather than forcing weird semantics on the function, I think it's best to disallow it being called. Callers should know they're dealing with chunked UploadDataStreams, or they should check is_chunked().","draft":false,"lineno":148,"date":"2011-03-03 19:47:48.071385","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"I find |next_element_ > elements.size()| more readable since you don't need the - 1.","draft":false,"lineno":152,"date":"2011-03-03 19:47:48.071543","left":false},{"author":"Satish","author_email":"satish@chromium.org","text":"On 2011/03/03 19:47:48, willchan wrote:\n> I find |next_element_ > elements.size()| more readable since you don't need the\n> - 1.\n\nThe condition could only be changed as \"next_element_ > elements.size() - 2\", not as \"next_element_ > elements.size()\". So leaving as is.","draft":false,"lineno":152,"date":"2011-03-03 22:21:44.053391","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"On 2011/03/03 22:21:44, Satish wrote:\n> On 2011/03/03 19:47:48, willchan wrote:\n> > I find |next_element_ > elements.size()| more readable since you don't need\n> the\n> > - 1.\n> \n> The condition could only be changed as \"next_element_ > elements.size() - 2\",\n> not as \"next_element_ > elements.size()\". So leaving as is.\n\nOops, missed that! Bleh, off by one =/","draft":false,"lineno":152,"date":"2011-03-03 22:26:54.693932","left":false}],"id":40005,"is_binary":false},"net/url_request/url_request.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":8,"messages":[],"id":40022,"is_binary":false},"net/spdy/spdy_http_stream.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":1,"messages":[],"id":40010,"is_binary":false},"net/spdy/spdy_network_transaction_unittest.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":44,"num_removed":0,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"You should also have a test with multiple chunks.","draft":false,"lineno":1545,"date":"2011-03-03 19:47:48.072049","left":false}],"id":40013,"is_binary":false},"net/http/http_stream_parser.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":0,"messages":[],"id":40008,"is_binary":false},"net/spdy/spdy_test_util.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":0,"messages":[],"id":40021,"is_binary":false},"net/http/http_stream_parser.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":56,"num_removed":9,"messages":[],"id":40007,"is_binary":false},"net/spdy/spdy_stream.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":19,"num_removed":5,"messages":[],"id":40017,"is_binary":false},"net/spdy/spdy_session.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":40016,"is_binary":false},"chrome/common/net/url_fetcher.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":6,"messages":[],"id":40002,"is_binary":false},"net/url_request/url_request.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":4,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"http://dev.chromium.org/developers/coding-style#Code_Formatting says:\n\n\"\"\"\nFor function declarations and definitions, put each argument on a separate line unless everything fits on one line. You should only break this rule when the arguments have some logical association like \"int x, int y\" or \"char* str, int str_len\" where putting a few arguments together makes semantic sense.  Do NOT collapse function arguments together just because you have \"too many\":\n\"\"\"","draft":false,"lineno":334,"date":"2011-03-03 19:47:48.072378","left":false}],"id":40023,"is_binary":false},"net/spdy/spdy_http_stream_unittest.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":59,"num_removed":2,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"Please add a test where you have multiple chunks.","draft":false,"lineno":101,"date":"2011-03-03 19:47:48.071884","left":false}],"id":40011,"is_binary":false},"net/base/upload_data.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":9,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"http://dev.chromium.org/developers/coding-style#Code_Formatting says:\n\n\"\"\"\nFor function declarations and definitions, put each argument on a separate line unless everything fits on one line. You should only break this rule when the arguments have some logical association like \"int x, int y\" or \"char* str, int str_len\" where putting a few arguments together makes semantic sense.  Do NOT collapse function arguments together just because you have \"too many\":\n\"\"\"","draft":false,"lineno":31,"date":"2011-03-03 19:47:48.070665","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"http://dev.chromium.org/developers/coding-style#Code_Formatting says:\n\n\"\"\"\nFor function declarations and definitions, put each argument on a separate line unless everything fits on one line. You should only break this rule when the arguments have some logical association like \"int x, int y\" or \"char* str, int str_len\" where putting a few arguments together makes semantic sense.  Do NOT collapse function arguments together just because you have \"too many\":\n\"\"\"","draft":false,"lineno":145,"date":"2011-03-03 19:47:48.070895","left":false}],"id":40003,"is_binary":false}},"owner_email":"satish@chromium.org","owner":"Satish","message":".","try_job_results":[{"parent_name":null,"tests":[],"slave":null,"url":"http://build.chromium.org/p/tryserver.chromium/buildstatus?builder=linux&number=14980","timestamp":"2011-03-03 22:26:54.752356","builder":"linux","clobber":null,"project":null,"reason":null,"result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIyCxIFSXNzdWUYrYSAAwwLEghQYXRjaFNldBjZsAIMCxIMVHJ5Sm9iUmVzdWx0GJ_vAgw","requester":null,"buildnumber":null,"revision":null},{"parent_name":null,"tests":[],"slave":null,"url":"http://build.chromium.org/p/tryserver.chromium/buildstatus?builder=mac&number=15407","timestamp":"2011-03-03 22:26:54.752356","builder":"mac","clobber":null,"project":null,"reason":null,"result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIyCxIFSXNzdWUYrYSAAwwLEghQYXRjaFNldBjZsAIMCxIMVHJ5Sm9iUmVzdWx0GKDvAgw","requester":null,"buildnumber":null,"revision":null},{"parent_name":null,"tests":[],"slave":null,"url":"http://build.chromium.org/p/tryserver.chromium/buildstatus?builder=win&number=18944","timestamp":"2011-03-03 22:26:54.752356","builder":"win","clobber":null,"project":null,"reason":null,"result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIyCxIFSXNzdWUYrYSAAwwLEghQYXRjaFNldBjZsAIMCxIMVHJ5Sm9iUmVzdWx0GKHvAgw","requester":null,"buildnumber":null,"revision":null}],"created":"2011-03-03 12:55:20.716578","url":null,"num_comments":15,"modified":"2012-01-13 14:34:14.815620","patchset":39001,"issue":6292013}