{"files":{"net/spdy/spdy_proxy_client_socket.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":2,"messages":[],"id":21009,"is_binary":false},"net/spdy/spdy_http_stream.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":35,"num_removed":6,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"You should probably add a\nif (status != 0) {\n  NOTREACHED();\n  return ERR_UNEXPECTED;\n}","draft":false,"lineno":283,"date":"2011-02-24 19:41:34.913551","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"Er, does this work for the non-chunked case? When will *eof = true be set in the non-chunked case? Do we have a test covering this? If not, please add one.","draft":false,"lineno":287,"date":"2011-02-24 19:41:34.913718","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"On 2011/02/24 19:41:34, willchan wrote:\n> Er, does this work for the non-chunked case? When will *eof = true be set in the\n> non-chunked case? Do we have a test covering this? If not, please add one.\n\nWas there a test? Or did you add one?","draft":false,"lineno":287,"date":"2011-03-02 18:44:40.939172","left":false},{"author":"Satish","author_email":"satish@chromium.org","text":"On 2011/03/02 18:44:40, willchan wrote:\n> On 2011/02/24 19:41:34, willchan wrote:\n> > Er, does this work for the non-chunked case? When will *eof = true be set in\n> the\n> > non-chunked case? Do we have a test covering this? If not, please add one.\n> \n> Was there a test? Or did you add one?\n\nI added 2 unit tests and they cover this code path as well. This code has also been greatly simplified in the latest patch.","draft":false,"lineno":287,"date":"2011-03-03 13:50:10.123643","left":false}],"id":21006,"is_binary":false},"net/spdy/spdy_http_stream.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":1,"messages":[],"id":21007,"is_binary":false},"net/spdy/spdy_proxy_client_socket.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":1,"messages":[],"id":21010,"is_binary":false},"net/http/http_stream_parser.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":54,"num_removed":9,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"Please add a regression test here, since last time it was memcpy() which was wrong.","draft":false,"lineno":281,"date":"2011-02-24 19:41:34.913092","left":false},{"author":"willchan","author_email":"willchan@chromium.org","text":"Please do something like:\nstatic const char kLastChunk[] = \"0\\r\\n\\r\\n\";\n\nThen you can do chunk_length_ = strlen(kLastChunk) (note: compiler will reduce this to a compile-time constant) and memcpy with strlen(kLastChunk) too. I prefer this to magic constants like 5.","draft":false,"lineno":297,"date":"2011-02-24 19:41:34.913228","left":false}],"id":21004,"is_binary":false},"net/spdy/spdy_stream_unittest.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":2,"messages":[],"id":21014,"is_binary":false},"net/base/upload_data_stream.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":0,"messages":[],"id":21003,"is_binary":false},"net/spdy/spdy_stream.cc":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":19,"num_removed":5,"messages":[],"id":21012,"is_binary":false},"net/spdy/spdy_session.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":21011,"is_binary":false},"net/spdy/spdy_http_utils.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":1,"messages":[],"id":21008,"is_binary":false},"net/base/upload_data_stream.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":4,"num_removed":2,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"Please add a comment for why we need this condition. I re-read the earlier review comments and they make sense, but this code is not immediately obvious that it's because d may be empty.","draft":false,"lineno":72,"date":"2011-02-24 19:41:34.912914","left":false}],"id":21002,"is_binary":false},"net/spdy/spdy_stream.h":{"status":"M","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":14,"num_removed":4,"messages":[],"id":21013,"is_binary":false},"net/base/upload_data.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":0,"num_removed":5,"messages":[],"id":21001,"is_binary":false},"net/http/http_stream_parser.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":0,"messages":[{"author":"willchan","author_email":"willchan@chromium.org","text":"Please add a note that this should be improved not to rely on copies.","draft":false,"lineno":192,"date":"2011-02-24 19:41:34.913370","left":false}],"id":21005,"is_binary":false}},"owner_email":"satish@chromium.org","owner":"Satish","message":".","try_job_results":[],"created":"2011-02-22 14:22:52.455797","url":null,"num_comments":8,"modified":"2011-03-03 13:50:10.158299","patchset":20001,"issue":6292013}