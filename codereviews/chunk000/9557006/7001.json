{"files":{"ppapi/tests/test_network_monitor_private.cc":{"status":"A","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":174,"num_removed":0,"messages":[{"author":"dmichael","author_email":"dmichael@chromium.org","text":"Please comment to explain what \"SUCCESS\" means here (empty string) and/or what you're using this for (calling a separate method that follows the PPAPI test convention of returning a non-empty string on error). I almost suggested a name like \"ASSERT_STRING_NONEMPTY\", but after seeing ASSERT_SUCCESS in context, I understand why you chose this name.","draft":false,"lineno":17,"date":"2012-03-05 19:22:00.933947","left":false},{"author":"dmichael","author_email":"dmichael@chromium.org","text":"Maybe worth putting in a \"do {...} while (false)\" to\n(a) force consistent use of a semi-colon and\n(b) disallow weird constructs like:\n  if (p)\n    ASSERT_SUCCESS(foo);\n  else\n    DoSomethingElse();\nIn this case, the else would actually apply to the \"if (!(error_message).empty())\" in your macro.\n\nAlternatively, you could get rid of the macro...  it doesn't save that much code or greatly improve readability.","draft":false,"lineno":19,"date":"2012-03-05 19:22:00.934163","left":false},{"author":"dmichael","author_email":"dmichael@chromium.org","text":"nit: might be clearer to say \"network interface\" or something, to distinguish from PPAPI interfaces.","draft":false,"lineno":73,"date":"2012-03-05 19:22:00.934371","left":false},{"author":"dmichael","author_email":"dmichael@chromium.org","text":"nit: interface->interfaces","draft":false,"lineno":77,"date":"2012-03-05 19:22:00.934585","left":false},{"author":"dmichael","author_email":"dmichael@chromium.org","text":"style nit: extra carriage return","draft":false,"lineno":79,"date":"2012-03-05 19:22:00.934822","left":false},{"author":"dmichael","author_email":"dmichael@chromium.org","text":"A quick comment above this loop saying \"Make sure the address is non-zero\" or whatever might be nice.","draft":false,"lineno":93,"date":"2012-03-05 19:22:00.935070","left":false},{"author":"dmichael","author_email":"dmichael@chromium.org","text":"why not use ASSERT_FALSE?","draft":false,"lineno":98,"date":"2012-03-05 19:22:00.935263","left":false},{"author":"dmichael","author_email":"dmichael@chromium.org","text":"I think dereferencing end() is technically undefined (though it should be fine in practice), so it might be better to do something like:\nreinterpret_cast<char*>(&addresses[0] + addresses.size())","draft":false,"lineno":130,"date":"2012-03-05 19:22:00.935470","left":false},{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"On 2012/03/05 19:22:00, dmichael wrote:\n> Please comment to explain what \"SUCCESS\" means here (empty string) and/or what\n> you're using this for (calling a separate method that follows the PPAPI test\n> convention of returning a non-empty string on error). I almost suggested a name\n> like \"ASSERT_STRING_NONEMPTY\", but after seeing ASSERT_SUCCESS in context, I\n> understand why you chose this name.\n\nThat was actually copied from the TCPServerSocket tests. There is also RUN_SUBTEST() in test_transport.cc that is almost the same as this one. Maybe we should just move this macro to test_case.h? When I wrote test_transport.cc I initially put RUN_SUBTEST() there, but then Brett advised against it because that was the only test that needed that macro. ","draft":false,"lineno":17,"date":"2012-03-06 02:11:06.947710","left":false},{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"On 2012/03/05 19:22:00, dmichael wrote:\n> Maybe worth putting in a \"do {...} while (false)\" to\n> (a) force consistent use of a semi-colon and\n> (b) disallow weird constructs like:\n>   if (p)\n>     ASSERT_SUCCESS(foo);\n>   else\n>     DoSomethingElse();\n> In this case, the else would actually apply to the \"if\n> (!(error_message).empty())\" in your macro.\n> \n> Alternatively, you could get rid of the macro...  it doesn't save that much code\n> or greatly improve readability.\n\nDone, but see my comment about RUN_SUBTEST() above.","draft":false,"lineno":19,"date":"2012-03-06 02:11:06.948004","left":false},{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"On 2012/03/05 19:22:00, dmichael wrote:\n> nit: might be clearer to say \"network interface\" or something, to distinguish\n> from PPAPI interfaces.\n\nDone.","draft":false,"lineno":73,"date":"2012-03-06 02:11:06.948303","left":false},{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"On 2012/03/05 19:22:00, dmichael wrote:\n> nit: interface->interfaces\n\nDone.","draft":false,"lineno":77,"date":"2012-03-06 02:11:06.948605","left":false},{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"On 2012/03/05 19:22:00, dmichael wrote:\n> style nit: extra carriage return\n\nDone.","draft":false,"lineno":79,"date":"2012-03-06 02:11:06.948903","left":false},{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"On 2012/03/05 19:22:00, dmichael wrote:\n> A quick comment above this loop saying \"Make sure the address is non-zero\" or\n> whatever might be nice.\n\nDone.","draft":false,"lineno":93,"date":"2012-03-06 02:11:06.949182","left":false},{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"On 2012/03/05 19:22:00, dmichael wrote:\n> why not use ASSERT_FALSE?\n\nDone.","draft":false,"lineno":98,"date":"2012-03-06 02:11:06.949471","left":false},{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"On 2012/03/05 19:22:00, dmichael wrote:\n> I think dereferencing end() is technically undefined (though it should be fine\n> in practice), so it might be better to do something like:\n> reinterpret_cast<char*>(&addresses[0] + addresses.size())\n\nDone.","draft":false,"lineno":130,"date":"2012-03-06 02:11:06.949760","left":false},{"author":"dmichael","author_email":"dmichael@chromium.org","text":"On 2012/03/06 02:11:06, sergeyu wrote:\n> On 2012/03/05 19:22:00, dmichael wrote:\n> > Please comment to explain what \"SUCCESS\" means here (empty string) and/or what\n> > you're using this for (calling a separate method that follows the PPAPI test\n> > convention of returning a non-empty string on error). I almost suggested a\n> name\n> > like \"ASSERT_STRING_NONEMPTY\", but after seeing ASSERT_SUCCESS in context, I\n> > understand why you chose this name.\n> \n> That was actually copied from the TCPServerSocket tests. There is also\n> RUN_SUBTEST() in test_transport.cc that is almost the same as this one. Maybe we\n> should just move this macro to test_case.h? When I wrote test_transport.cc I\n> initially put RUN_SUBTEST() there, but then Brett advised against it because\n> that was the only test that needed that macro. \nSure, we can do that since there are several uses. The tricky part will be coming up with the right name. Maybe \"ASSERT_SUBTEST_SUCCESS\" would be descriptive & short enough?\n\nI think it makes sense to put that in to test_case.h in a separate CL, though.","draft":false,"lineno":17,"date":"2012-03-06 16:11:28.577343","left":false},{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"On 2012/03/06 16:11:28, dmichael wrote:\n> On 2012/03/06 02:11:06, sergeyu wrote:\n> > On 2012/03/05 19:22:00, dmichael wrote:\n> > > Please comment to explain what \"SUCCESS\" means here (empty string) and/or\n> what\n> > > you're using this for (calling a separate method that follows the PPAPI test\n> > > convention of returning a non-empty string on error). I almost suggested a\n> > name\n> > > like \"ASSERT_STRING_NONEMPTY\", but after seeing ASSERT_SUCCESS in context, I\n> > > understand why you chose this name.\n> > \n> > That was actually copied from the TCPServerSocket tests. There is also\n> > RUN_SUBTEST() in test_transport.cc that is almost the same as this one. Maybe\n> we\n> > should just move this macro to test_case.h? When I wrote test_transport.cc I\n> > initially put RUN_SUBTEST() there, but then Brett advised against it because\n> > that was the only test that needed that macro. \n> Sure, we can do that since there are several uses. The tricky part will be\n> coming up with the right name. Maybe \"ASSERT_SUBTEST_SUCCESS\" would be\n> descriptive & short enough?\n> \n> I think it makes sense to put that in to test_case.h in a separate CL, though.\n\nDone. I sent you a separate CL for that change.","draft":false,"lineno":17,"date":"2012-03-06 23:38:08.732095","left":false}],"id":7009,"is_binary":false},"ppapi/tests/test_network_monitor_private.h":{"status":"A","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":28,"num_removed":0,"messages":[],"id":7010,"is_binary":false},"webkit/plugins/ppapi/plugin_delegate.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":0,"messages":[],"id":7013,"is_binary":false},"ppapi/ppapi_sources.gypi":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":0,"messages":[],"id":7008,"is_binary":false},"webkit/glue/webkit_glue.gypi":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":0,"messages":[],"id":7012,"is_binary":false},"content/renderer/p2p/socket_dispatcher.cc":{"status":"M","num_chunks":5,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":5,"messages":[],"id":7004,"is_binary":false},"content/renderer/p2p/socket_dispatcher.h":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":10,"num_removed":18,"messages":[],"id":7005,"is_binary":false},"webkit/glue/network_list_observer.h":{"status":"A","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":33,"num_removed":0,"messages":[],"id":7011,"is_binary":false},"webkit/plugins/ppapi/resource_creation_impl.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":2,"messages":[],"id":7016,"is_binary":false},"content/renderer/pepper/pepper_plugin_delegate_impl.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":20,"num_removed":0,"messages":[],"id":7006,"is_binary":false},"chrome/test/ui/ppapi_uitest.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":0,"messages":[],"id":7002,"is_binary":false},"webkit/plugins/ppapi/ppb_network_monitor_private_impl.h":{"status":"A","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":57,"num_removed":0,"messages":[],"id":7015,"is_binary":false},"content/renderer/p2p/ipc_network_manager.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":2,"messages":[],"id":7003,"is_binary":false},"webkit/plugins/ppapi/ppb_network_monitor_private_impl.cc":{"status":"A","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":87,"num_removed":0,"messages":[],"id":7014,"is_binary":false},"content/renderer/pepper/pepper_plugin_delegate_impl.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":6,"num_removed":0,"messages":[],"id":7007,"is_binary":false}},"owner_email":"sergeyu@chromium.org","owner":"Sergey Ulanov","message":"-","try_job_results":[],"created":"2012-03-03 02:25:49.470105","url":null,"num_comments":18,"modified":"2012-03-06 23:38:08.774175","patchset":7001,"issue":9557006}