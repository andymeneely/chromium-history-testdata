{"files":{"media/base/user_input_monitor_mac.cc":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":3,"num_removed":4,"messages":[],"id":21005,"is_binary":false},"media/base/user_input_monitor_linux.cc":{"status":"M","num_chunks":7,"no_base_file":false,"property_changes":"","num_added":8,"num_removed":16,"messages":[{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"There is potential race between StartKeyboardMonitoring() and StopKeyboardMonitoring(). If StopKeyboardMonitoring() is called on a thread other than the IO thread and then StartKeyboardMonitoring() is called the IO immediately after that then monitoring will be started and then stopped on the IO thread, while it should be stopped first and then started. I think you can avoid it by always posting a task to call StopMonitor().","draft":false,"lineno":138,"date":"2013-09-04 18:40:09.861820","left":false},{"author":"jiayl","author_email":"jiayl@chromium.org","text":"On 2013/09/04 18:40:09, Sergey Ulanov wrote:\n> There is potential race between StartKeyboardMonitoring() and\n> StopKeyboardMonitoring(). If StopKeyboardMonitoring() is called on a thread\n> other than the IO thread and then StartKeyboardMonitoring() is called the IO\n> immediately after that then monitoring will be started and then stopped on the\n> IO thread, while it should be stopped first and then started. I think you can\n> avoid it by always posting a task to call StopMonitor().\n\nIf the same caller calls Start and Stop on different threads, there is no way to know what's the intended ordering and I think it's expected to get undefined behavior.","draft":false,"lineno":138,"date":"2013-09-05 00:29:38.299090","left":false},{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"On 2013/09/05 00:29:38, jiayl wrote:\n> On 2013/09/04 18:40:09, Sergey Ulanov wrote:\n> > There is potential race between StartKeyboardMonitoring() and\n> > StopKeyboardMonitoring(). If StopKeyboardMonitoring() is called on a thread\n> > other than the IO thread and then StartKeyboardMonitoring() is called the IO\n> > immediately after that then monitoring will be started and then stopped on the\n> > IO thread, while it should be stopped first and then started. I think you can\n> > avoid it by always posting a task to call StopMonitor().\n> \n> If the same caller calls Start and Stop on different threads, there is no way to\n> know what's the intended ordering and I think it's expected to get undefined\n> behavior.\n\nIt might not be the same caller.  One object may be calling RemoveMouseListener() which would call StopMonitoring(), while completely different object is calling AddMouseListener() which calls StartMonitoring().\nWhat matters is that the listener gets notification after registering with AddMouseListener(), but due to this race it could happen that monitoring will be stopped when it shouldn't be.\n","draft":false,"lineno":138,"date":"2013-09-07 20:19:41.123330","left":false},{"author":"jiayl","author_email":"jiayl@chromium.org","text":"On 2013/09/07 20:19:41, Sergey Ulanov wrote:\n> On 2013/09/05 00:29:38, jiayl wrote:\n> > On 2013/09/04 18:40:09, Sergey Ulanov wrote:\n> > > There is potential race between StartKeyboardMonitoring() and\n> > > StopKeyboardMonitoring(). If StopKeyboardMonitoring() is called on a thread\n> > > other than the IO thread and then StartKeyboardMonitoring() is called the IO\n> > > immediately after that then monitoring will be started and then stopped on\n> the\n> > > IO thread, while it should be stopped first and then started. I think you\n> can\n> > > avoid it by always posting a task to call StopMonitor().\n> > \n> > If the same caller calls Start and Stop on different threads, there is no way\n> to\n> > know what's the intended ordering and I think it's expected to get undefined\n> > behavior.\n> \n> It might not be the same caller.  One object may be calling\n> RemoveMouseListener() which would call StopMonitoring(), while completely\n> different object is calling AddMouseListener() which calls StartMonitoring().\n> What matters is that the listener gets notification after registering with\n> AddMouseListener(), but due to this race it could happen that monitoring will be\n> stopped when it shouldn't be.\n\nDone.","draft":false,"lineno":138,"date":"2013-09-10 16:31:00.481490","left":false}],"id":21004,"is_binary":false},"media/base/user_input_monitor.h":{"status":"M","num_chunks":4,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":3,"messages":[],"id":21003,"is_binary":false},"media/base/user_input_monitor_unittest.cc":{"status":"A","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":117,"num_removed":0,"messages":[],"id":21006,"is_binary":false},"media/media.gyp":{"status":"M","num_chunks":3,"no_base_file":false,"property_changes":"","num_added":7,"num_removed":2,"messages":[{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"indentation","draft":false,"lineno":884,"date":"2013-09-04 18:40:09.862720","left":false},{"author":"jiayl","author_email":"jiayl@chromium.org","text":"On 2013/09/04 18:40:09, Sergey Ulanov wrote:\n> indentation\n\nDone.","draft":false,"lineno":884,"date":"2013-09-05 00:29:38.299510","left":false}],"id":21008,"is_binary":false},"media/base/user_input_monitor_win.cc":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":250,"num_removed":4,"messages":[{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"There is a same race as in Linux version of this code. Just post a task for StopMonitor()?","draft":false,"lineno":114,"date":"2013-09-04 18:40:09.862130","left":false},{"author":"Sergey Ulanov","author_email":"sergeyu@chromium.org","text":"nit: operators should not be wrapped. ? goes on the previous line.","draft":false,"lineno":207,"date":"2013-09-04 18:40:09.862430","left":false},{"author":"jiayl","author_email":"jiayl@chromium.org","text":"On 2013/09/04 18:40:09, Sergey Ulanov wrote:\n> nit: operators should not be wrapped. ? goes on the previous line.\n\nI don't find the rule on the style guide. But this is auto formatted by git-cl format.","draft":false,"lineno":207,"date":"2013-09-05 00:29:38.299340","left":false}],"id":21007,"is_binary":false},"content/browser/browser_main_loop.h":{"status":"M","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":1,"num_removed":1,"messages":[],"id":21001,"is_binary":false},"media/base/keyboard_event_counter.h":{"status":"M","num_chunks":2,"no_base_file":false,"property_changes":"","num_added":2,"num_removed":1,"messages":[],"id":21002,"is_binary":false}},"owner_email":"jiayl@chromium.org","owner":"jiayl","message":" ","try_job_results":[],"created":"2013-09-03 23:39:05.386500","url":null,"num_comments":9,"modified":"2013-09-10 16:31:00.638100","patchset":20001,"issue":23702008}