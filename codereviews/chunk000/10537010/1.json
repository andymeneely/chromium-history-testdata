{"files":{"chrome/browser/ui/cocoa/omnibox/omnibox_popup_view_mac.mm":{"status":"M    ","num_chunks":1,"no_base_file":false,"property_changes":"","num_added":8,"num_removed":3,"messages":[{"author":"sail","author_email":"sail@chromium.org","text":"Hey Mike! It seems like there are two underlying problems you're trying to address.\n\n#1 Conversion from string16 to NSString.\nI think the best thing to do would be to do something like this:\nNSString* s = base::SysUTF16ToNSString(matchString);\nif ([s length] != matchString.length()) {\n  NOTREACHED();\n  return nil;\n}\n\n#2 That |classifications| has offsets that go beyond the end of matchString. For this you could do something like:\nfor (....) {\n  if (i->offset >= matchString.length()) {\n    NOTREACHED();\n    return nil;\n  }\n\n  nextOffset = 0;\n  if (isLast) {\n     nextOffset = matchString.length();\n  } else {\n    nextOffset = (i + 1)->offset;\n    if (nextOffset >= matchString.length()) {\n      NOTREACHED();\n      return nil;\n    }\n  }\n}\n\nWhat do you think?","draft":false,"lineno":127,"date":"2012-06-05 18:09:59.046466","left":false},{"author":"mrossetti","author_email":"mrossetti@chromium.org","text":"On 2012/06/05 18:09:59, sail wrote:\n> Hey Mike! It seems like there are two underlying problems you're trying to\n> address.\n> \n> #1 Conversion from string16 to NSString.\n> I think the best thing to do would be to do something like this:\n> NSString* s = base::SysUTF16ToNSString(matchString);\n> if ([s length] != matchString.length()) {\n>   NOTREACHED();\n>   return nil;\n> }\n\nI'd prefer to not mix string16's with NSStrings. Their encodings and lengths are not guaranteed to be the same. That's the source of the mismatch that has lead to this crash.\n\nIn the test case, the matchString is 40 char16s long while the converted NSString is 37 magic Apple characters long.\n\nI'm going to fix the underlying problem in how the classifications are getting miscalculated in the face of certain code points but that's going to take a little longer and I'm anxious to get this prophylactic guard code in ASAP so that we at least eliminate the crash.\n\n> \n> #2 That |classifications| has offsets that go beyond the end of matchString. For\n> this you could do something like:\n> for (....) {\n>   if (i->offset >= matchString.length()) {\n>     NOTREACHED();\n>     return nil;\n>   }\n> \n>   nextOffset = 0;\n>   if (isLast) {\n>      nextOffset = matchString.length();\n>   } else {\n>     nextOffset = (i + 1)->offset;\n>     if (nextOffset >= matchString.length()) {\n>       NOTREACHED();\n>       return nil;\n>     }\n>   }\n> }\n> \n> What do you think?\n\nEven in the case of bad classification offsets, some of the classifications can, and probably will, be correct. So the choice is 1) show the user nothing, or 2) show them something possibly incorrect. #1 will probably get no notice while #2 could generate bug reports. Which do you think is best?","draft":false,"lineno":127,"date":"2012-06-05 22:44:41.191416","left":false},{"author":"sail","author_email":"sail@chromium.org","text":"> In the test case, the matchString is 40 char16s long while the converted\n> NSString is 37 magic Apple characters long.\n\nOuch that really sucks. I didn't realize that this was possible. I hope we aren't affected by this in other places too.\n\n> Even in the case of bad classification offsets, some of the classifications can,\n> and probably will, be correct. So the choice is 1) show the user nothing, or 2)\n> show them something possibly incorrect. #1 will probably get no notice while #2\n> could generate bug reports. Which do you think is best?\n\nI think if we encounter a case where [NSString length] != string16.size() then we should just bail.\n\nAdding temporary code to work around this isn't worth it I think.","draft":false,"lineno":127,"date":"2012-06-05 23:02:08.709196","left":false}],"id":2,"is_binary":false}},"owner_email":"mrossetti@chromium.org","owner":"mrossetti","message":null,"try_job_results":[{"parent_name":null,"tests":[],"slave":"vm643-m4","url":"http://build.chromium.org/p/tryserver.chromium/buildstatus?builder=mac_rel&number=30181","timestamp":"2012-06-05 18:16:02.462457","builder":"mac_rel","clobber":null,"project":"Chromium Try Server","reason":"","result":"0","key":"ahdzfmNocm9taXVtY29kZXJldmlldy1ocnIvCxIFSXNzdWUYspCDBQwLEghQYXRjaFNldBgBDAsSDFRyeUpvYlJlc3VsdBjRDww","requester":null,"buildnumber":"30181","revision":"140527"}],"created":"2012-06-05 17:42:46.111118","url":null,"num_comments":3,"modified":"2012-06-05 23:02:08.758598","patchset":1,"issue":10537010}