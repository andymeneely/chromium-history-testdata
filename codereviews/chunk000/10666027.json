{"description":"Remove inappropriate chrome.{extension,app} bindings for platform apps.\n\nAlso:\n\n-Begin process of moving from chrome.extension.lastError to chrome.runtime.lastError.\n\n-Add chrome.runtime.getManifest and chrome.runtime.getURL\n\n\n\nBUG=131717\nTEST=In platform apps, chrome.extension and chrome.app should not contain any\nextension or legacy hosted app stuff on them.\n\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=145238","cc":["chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"reviewers":["mihaip@chromium.org","aa@chromium.org","kalman@chromium.org"],"messages":[{"sender":"asargent@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"mihaip: please review whole CL\n\naa, kalman: FYI, drive-bys welcome","disapproval":false,"date":"2012-06-25 18:45:00.802109","approval":false},{"sender":"kalman@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"General wishful thinking comment: if we're deprecating chrome.extension.lastError then ideally we could actually replace it with a more sensible system, e.g. having the error as part of every callback (there is a design doc somewhere).\n\nI presume that this i, emergency surgery for platform apps or something, though. Sad.\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc\nFile chrome/common/extensions/api/extension_api.cc (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc#newcode637\nchrome/common/extensions/api/extension_api.cc:637: // apps pick up features we don't want via dependencies.\nCan we do this in ChromeV8Context::GetAvailableExtensionAPIs? I'd rather keep this kind of specific information out of this file, and besides, it might regress in here (e.g. if we convert to features system).\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc#newcode734\nchrome/common/extensions/api/extension_api.cc:734: if (extension->is_platform_app() &&\nditto\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/runtime.json\nFile chrome/common/extensions/api/runtime.json (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/runtime.json#newcode18\nchrome/common/extensions/api/runtime.json:18: },\ndescription?\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/runtime.json#newcode30\nchrome/common/extensions/api/runtime.json:30: \"type\": \"any\"\nAren't these always strings?\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/runtime.json#newcode68\nchrome/common/extensions/api/runtime.json:68: \"optional\": true,\nWhy optional?\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/renderer/resources/extensions/runtime_custom_bindings.js\nFile chrome/renderer/resources/extensions/runtime_custom_bindings.js (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/renderer/resources/extensions/runtime_custom_bindings.js#newcode26\nchrome/renderer/resources/extensions/runtime_custom_bindings.js:26: return appNatives.GetDetails();\nPerhaps cache this result?\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/renderer/resources/extensions/send_request.js\nFile chrome/renderer/resources/extensions/send_request.js (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/renderer/resources/extensions/send_request.js#newcode22\nchrome/renderer/resources/extensions/send_request.js:22: };\nchromeHidden is not the place for these methods. Either put them on exports, or even better, not as part of send_request.js at all and in their own module. E.g. last_error.js. (hopefully we can avoid the chrome.runtime = chrome.runtime || {}, why is that necessary anyway?)\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/test/data/extensions/platform_apps/restrictions/main.js\nFile chrome/test/data/extensions/platform_apps/restrictions/main.js (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/test/data/extensions/platform_apps/restrictions/main.js#newcode165\nchrome/test/data/extensions/platform_apps/restrictions/main.js:165: return;\nIt might be useful to have separate checks for each of these, it would make it easier to track down regressions.","disapproval":false,"date":"2012-06-25 23:35:56.565885","approval":false},{"sender":"mihaip@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"LGTM\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc\nFile chrome/common/extensions/api/extension_api.cc (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc#newcode639\nchrome/common/extensions/api/extension_api.cc:639: feature_name == \"extension\")\nCan this also check for feature_name == \"app\", like the other check, in case something ends up with a dependency on apps?\n\nBetter yet, add a IsFeatureAllowedForExtension(feature_name, extension) helper and use it in both?\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc#newcode733\nchrome/common/extensions/api/extension_api.cc:733: // Platform apps don't want the extension or legacy app API bindings.\nCan there be a TODO about this being specifiable more declaratively via the feature system?\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/runtime.json\nFile chrome/common/extensions/api/runtime.json (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/runtime.json#newcode7\nchrome/common/extensions/api/runtime.json:7: \"namespace\": \"runtime\",\nShould this also include lastError?","disapproval":false,"date":"2012-06-25 23:45:18.077105","approval":true},{"sender":"kalman@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"http://codereview.chromium.org/10666027/diff/8001/chrome/renderer/resources/extensions/runtime_custom_bindings.js\nFile chrome/renderer/resources/extensions/runtime_custom_bindings.js (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/renderer/resources/extensions/runtime_custom_bindings.js#newcode26\nchrome/renderer/resources/extensions/runtime_custom_bindings.js:26: return appNatives.GetDetails();\nOn 2012/06/25 23:35:56, kalman wrote:\n> Perhaps cache this result?\n\nEh, never mind caching it.\n\nBut I just noticed that you're using appNatives here not a new runtimeNatives class. The problem with appNatives is that it also puts an \"id\" thing in the manifest. I had a separate change quite similar to this one which put the id separately on chrome.runtime.id and I prefer that to including in getManifest().\n\nThe other problem is that... well, it's appNatives not runtimeNatives. That's confusing.\n\nhttp://codereview.chromium.org/10640013/\n\nCopy runtime_natives.cc from there?","disapproval":false,"date":"2012-06-25 23:55:11.782832","approval":false},{"sender":"aa@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"On Mon, Jun 25, 2012 at 4:35 PM,  <kalman@chromium.org> wrote:\r\n> General wishful thinking comment: if we're deprecating\r\n> chrome.extension.lastError then ideally we could actually replace it with a\r\n> more\r\n> sensible system, e.g. having the error as part of every callback (there is a\r\n> design doc somewhere).\r\n\r\nI don't see any deprecation of anything here - just aliasing\r\nchrome.extension.lastError at chrome.runtime.lastError, right?\r\n\r\nThat said, I think I've said this before, but I think that all new\r\nAPIs should pass the error as the first param to the callback.\r\n\r\nMihai, what do you think about making this a launch blocker for the beta/stable?\r\n\r\n- a\r\n","disapproval":false,"date":"2012-06-26 01:27:41.390604","approval":false},{"sender":"mihaip@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"On Mon, Jun 25, 2012 at 6:27 PM, Aaron Boodman <aa@chromium.org> wrote:\r\n\r\n> That said, I think I've said this before, but I think that all new\r\n> APIs should pass the error as the first param to the callback.\r\n>\r\n> Mihai, what do you think about making this a launch blocker for the\r\n> beta/stable?\r\n>\r\n\r\nSure. Though I'm not convinced that having it as the first param is that\r\nreadable (or clean, given legacy APIs). What about the other approaches\r\nconsidered in\r\nhttps://docs.google.com/a/google.com/document/d/1ZJtY80XK0eU9Xs1dBD2ZqoeJK9FPkRMW74iMq9NVXDg/edit(last\r\nparam, keep lastError but make its presence/type signaled via the\r\nschema, so that the docs include it)?\r\n\r\nMihai\r\n","disapproval":false,"date":"2012-06-26 05:35:15.473835","approval":false},{"sender":"aa@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"On Mon, Jun 25, 2012 at 10:35 PM, Mihai Parparita <mihaip@chromium.org> wrote:\r\n> On Mon, Jun 25, 2012 at 6:27 PM, Aaron Boodman <aa@chromium.org> wrote:\r\n>>\r\n>> That said, I think I've said this before, but I think that all new\r\n>> APIs should pass the error as the first param to the callback.\r\n>>\r\n>> Mihai, what do you think about making this a launch blocker for the\r\n>> beta/stable?>\r\n>\r\n> Sure. Though I'm not convinced that having it as the first param is that\r\n> readable (or clean, given legacy APIs). What about the other approaches\r\n> considered in\r\n> https://docs.google.com/a/google.com/document/d/1ZJtY80XK0eU9Xs1dBD2ZqoeJK9FPkRMW74iMq9NVXDg/edit\r\n> (last param, keep lastError but make its presence/type signaled via the\r\n> schema, so that the docs include it)?\r\n\r\nSorry, to be more clear, my current favorite proposal is:\r\n\r\n- keep lastError\r\n- make it first-class via the schema system, and make it show up in docs\r\n- new APIs also pass it as first param\r\n- in new APIs, make lastError a richer object for the cases where that\r\nwould be useful\r\n\r\nThe problem with making it the last param is that it slowly becomes\r\nless consistent as the APIs age.\r\n\r\nwdyt?\r\n\r\n- a\r\n","disapproval":false,"date":"2012-06-26 05:55:00.354967","approval":false},{"sender":"kalman@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"http://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc\nFile chrome/common/extensions/api/extension_api.cc (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc#newcode602\nchrome/common/extensions/api/extension_api.cc:602: ResolveDependencies(&temp_result);\nif (extension->is_platform_app())\n  RemoveNonPlatformAppAPIs(&temp_result);\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc#newcode637\nchrome/common/extensions/api/extension_api.cc:637: // apps pick up features we don't want via dependencies.\nOn 2012/06/25 23:35:56, kalman wrote:\n> Can we do this in ChromeV8Context::GetAvailableExtensionAPIs? I'd rather keep\n> this kind of specific information out of this file, and besides, it might\n> regress in here (e.g. if we convert to features system).\n\nI changed my mind here, a better way to avoid regressions would be to do something like what we do for removing privileged APIs in the UNBLESSED/CONTENT_SCRIPT cases. I've added a comment where. This would replace the code here and below.","disapproval":false,"date":"2012-06-26 22:40:30.878195","approval":false},{"sender":"asargent@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"Addressed comments - PTAL.\n\nAaron/Mihai - I didn't address the bigger picture question of whether we want to switch new APIs to have error as the first argument and skip having chrome.runtime.lastError for them. Perhaps we can hash out whether we agree on that as the plan and we can do that as a follow up CL in the next week or two.\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc\nFile chrome/common/extensions/api/extension_api.cc (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc#newcode637\nchrome/common/extensions/api/extension_api.cc:637: // apps pick up features we don't want via dependencies.\nOn 2012/06/26 22:40:30, kalman wrote:\n> On 2012/06/25 23:35:56, kalman wrote:\n> > Can we do this in ChromeV8Context::GetAvailableExtensionAPIs? I'd rather keep\n> > this kind of specific information out of this file, and besides, it might\n> > regress in here (e.g. if we convert to features system).\n> \n> I changed my mind here, a better way to avoid regressions would be to do\n> something like what we do for removing privileged APIs in the\n> UNBLESSED/CONTENT_SCRIPT cases. I've added a comment where. This would replace\n> the code here and below.\n\nOk, I've done it this way.\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc#newcode639\nchrome/common/extensions/api/extension_api.cc:639: feature_name == \"extension\")\nOn 2012/06/25 23:45:18, Mihai Parparita wrote:\n> Can this also check for feature_name == \"app\", like the other check, in case\n> something ends up with a dependency on apps?\n> \n> Better yet, add a IsFeatureAllowedForExtension(feature_name, extension) helper\n> and use it in both?\n\nDone. (up above though)\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/extension_api.cc#newcode733\nchrome/common/extensions/api/extension_api.cc:733: // Platform apps don't want the extension or legacy app API bindings.\nOn 2012/06/25 23:45:18, Mihai Parparita wrote:\n> Can there be a TODO about this being specifiable more declaratively via the\n> feature system?\nRemoved this code, but added the TODO in other place above.\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/runtime.json\nFile chrome/common/extensions/api/runtime.json (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/runtime.json#newcode7\nchrome/common/extensions/api/runtime.json:7: \"namespace\": \"runtime\",\nOn 2012/06/25 23:45:18, Mihai Parparita wrote:\n> Should this also include lastError?\n\nYes. Done.\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/runtime.json#newcode18\nchrome/common/extensions/api/runtime.json:18: },\nOn 2012/06/25 23:35:56, kalman wrote:\n> description?\n\nDone.\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/runtime.json#newcode30\nchrome/common/extensions/api/runtime.json:30: \"type\": \"any\"\nOn 2012/06/25 23:35:56, kalman wrote:\n> Aren't these always strings?\n\nYes, good catch. Fixed.\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/common/extensions/api/runtime.json#newcode68\nchrome/common/extensions/api/runtime.json:68: \"optional\": true,\nOn 2012/06/25 23:35:56, kalman wrote:\n> Why optional?\n\nGood catch. I copied this from app.json, where I guess it can return null if called from not within an app. But for chrome.runtime it should always return a value.\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/renderer/resources/extensions/runtime_custom_bindings.js\nFile chrome/renderer/resources/extensions/runtime_custom_bindings.js (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/renderer/resources/extensions/runtime_custom_bindings.js#newcode26\nchrome/renderer/resources/extensions/runtime_custom_bindings.js:26: return appNatives.GetDetails();\nOn 2012/06/25 23:55:11, kalman wrote:\n> On 2012/06/25 23:35:56, kalman wrote:\n> > Perhaps cache this result?\n> \n> Eh, never mind caching it.\n> \n> But I just noticed that you're using appNatives here not a new runtimeNatives\n> class. The problem with appNatives is that it also puts an \"id\" thing in the\n> manifest. I had a separate change quite similar to this one which put the id\n> separately on chrome.runtime.id and I prefer that to including in getManifest().\n> \n> The other problem is that... well, it's appNatives not runtimeNatives. That's\n> confusing.\n> \n> http://codereview.chromium.org/10640013/\n> \n> Copy runtime_natives.cc from there?\n\nDone.\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/renderer/resources/extensions/send_request.js\nFile chrome/renderer/resources/extensions/send_request.js (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/renderer/resources/extensions/send_request.js#newcode22\nchrome/renderer/resources/extensions/send_request.js:22: };\nOn 2012/06/25 23:35:56, kalman wrote:\n> chromeHidden is not the place for these methods. Either put them on exports, or\n> even better, not as part of send_request.js at all and in their own module. E.g.\n> last_error.js. (hopefully we can avoid the chrome.runtime = chrome.runtime ||\n> {}, why is that necessary anyway?)\n\nDone (Moved these to last_error.js)\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/test/data/extensions/platform_apps/restrictions/main.js\nFile chrome/test/data/extensions/platform_apps/restrictions/main.js (right):\n\nhttp://codereview.chromium.org/10666027/diff/8001/chrome/test/data/extensions/platform_apps/restrictions/main.js#newcode165\nchrome/test/data/extensions/platform_apps/restrictions/main.js:165: return;\nOn 2012/06/25 23:35:56, kalman wrote:\n> It might be useful to have separate checks for each of these, it would make it\n> easier to track down regressions.\nRefactored to use assertEq for each one.","disapproval":false,"date":"2012-06-28 23:10:33.531692","approval":false},{"sender":"kalman@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"lgtm with comments.\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/common/extensions/api/extension_api.cc\nFile chrome/common/extensions/api/extension_api.cc (right):\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/common/extensions/api/extension_api.cc#newcode591\nchrome/common/extensions/api/extension_api.cc:591: if (extension && !IsFeatureAllowedForExtension(*i, *extension)) {\nThis method should never get passed a NULL extension, so CHECK rather than guard against it?\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/renderer/extensions/extension_dispatcher.cc\nFile chrome/renderer/extensions/extension_dispatcher.cc (right):\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/renderer/extensions/extension_dispatcher.cc#newcode40\nchrome/renderer/extensions/extension_dispatcher.cc:40: #include \"chrome/renderer/extensions/runtime_custom_bindings.h\"\nnit: r after p\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/renderer/extensions/extension_dispatcher.cc#newcode710\nchrome/renderer/extensions/extension_dispatcher.cc:710: if (!extension || !extension->is_platform_app())\nSomething is going wrong if there isn't an extension here (right? or am I going crazy?). So CHECK?\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/renderer/extensions/runtime_custom_bindings.cc\nFile chrome/renderer/extensions/runtime_custom_bindings.cc (right):\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/renderer/extensions/runtime_custom_bindings.cc#newcode32\nchrome/renderer/extensions/runtime_custom_bindings.cc:32: \nAgain, something going wrong if there isn't an extension here (my bad for putting that in the other patch). CHECK?\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/test/data/extensions/platform_apps/runtime/test.js\nFile chrome/test/data/extensions/platform_apps/runtime/test.js (right):\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/test/data/extensions/platform_apps/runtime/test.js#newcode9\nchrome/test/data/extensions/platform_apps/runtime/test.js:9: chrome.test.runTests([\nThis isn't really a platform-app specific test, it belongs more in c/t/d/e/api_test?\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/test/data/extensions/platform_apps/runtime/test.js#newcode36\nchrome/test/data/extensions/platform_apps/runtime/test.js:36: assertEq(manifest.app.background.scripts[0], \"test.js\");\nJust assertEq(manifest.app.background.scripts, [\"test.js\"])","disapproval":false,"date":"2012-06-29 02:10:28.259298","approval":true},{"sender":"asargent@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"Comments addressed, hitting CQ button now.\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/common/extensions/api/extension_api.cc\nFile chrome/common/extensions/api/extension_api.cc (right):\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/common/extensions/api/extension_api.cc#newcode591\nchrome/common/extensions/api/extension_api.cc:591: if (extension && !IsFeatureAllowedForExtension(*i, *extension)) {\nOn 2012/06/29 02:10:28, kalman wrote:\n> This method should never get passed a NULL extension, so CHECK rather than guard\n> against it?\n\nGood point. Changed from Extension* to Extension&.\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/renderer/extensions/extension_dispatcher.cc\nFile chrome/renderer/extensions/extension_dispatcher.cc (right):\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/renderer/extensions/extension_dispatcher.cc#newcode40\nchrome/renderer/extensions/extension_dispatcher.cc:40: #include \"chrome/renderer/extensions/runtime_custom_bindings.h\"\nOn 2012/06/29 02:10:28, kalman wrote:\n> nit: r after p\n\nDone.\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/renderer/extensions/extension_dispatcher.cc#newcode710\nchrome/renderer/extensions/extension_dispatcher.cc:710: if (!extension || !extension->is_platform_app())\nOn 2012/06/29 02:10:28, kalman wrote:\n> Something is going wrong if there isn't an extension here (right? or am I going\n> crazy?). So CHECK?\n\nIt's not immediately obvious that the Extension* is guaranteed to be non-null from a quick look at the surrounding code and the implementation of ClassifyJavaScriptContext. I'll put in the check and we'll see if it catches anything, but perhaps a larger refactoring is in order to split this into the \"I have an extension\" (where we can use const Extension&) and \"I don't have an extension\" cases.\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/renderer/extensions/runtime_custom_bindings.cc\nFile chrome/renderer/extensions/runtime_custom_bindings.cc (right):\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/renderer/extensions/runtime_custom_bindings.cc#newcode32\nchrome/renderer/extensions/runtime_custom_bindings.cc:32: \nOn 2012/06/29 02:10:28, kalman wrote:\n> Again, something going wrong if there isn't an extension here (my bad for\n> putting that in the other patch). CHECK?\n\nDone.\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/test/data/extensions/platform_apps/runtime/test.js\nFile chrome/test/data/extensions/platform_apps/runtime/test.js (right):\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/test/data/extensions/platform_apps/runtime/test.js#newcode9\nchrome/test/data/extensions/platform_apps/runtime/test.js:9: chrome.test.runTests([\nOn 2012/06/29 02:10:28, kalman wrote:\n> This isn't really a platform-app specific test, it belongs more in\n> c/t/d/e/api_test?\n\nDone.\n\nhttp://codereview.chromium.org/10666027/diff/13004/chrome/test/data/extensions/platform_apps/runtime/test.js#newcode36\nchrome/test/data/extensions/platform_apps/runtime/test.js:36: assertEq(manifest.app.background.scripts[0], \"test.js\");\nOn 2012/06/29 02:10:28, kalman wrote:\n> Just assertEq(manifest.app.background.scripts, [\"test.js\"])\n\nDone.","disapproval":false,"date":"2012-07-02 17:29:43.401979","approval":false},{"sender":"commit-bot@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/asargent@chromium.org/10666027/15010","disapproval":false,"date":"2012-07-02 17:30:05.191449","approval":false},{"sender":"commit-bot@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"Try job failure for 10666027-15010 (retry) on linux_rel for step \"interactive_ui_tests\".\nIt's a second try, previously, step \"interactive_ui_tests\" failed.\nhttp://build.chromium.org/p/tryserver.chromium/buildstatus?builder=linux_rel&number=36900","disapproval":false,"date":"2012-07-02 18:25:17.317446","approval":false},{"sender":"commit-bot@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/asargent@chromium.org/10666027/15010","disapproval":false,"date":"2012-07-02 18:28:51.137462","approval":false},{"sender":"commit-bot@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"Try job failure for 10666027-15010 (retry) on linux_rel for step \"interactive_ui_tests\".\nIt's a second try, previously, step \"interactive_ui_tests\" failed.\nhttp://build.chromium.org/p/tryserver.chromium/buildstatus?builder=linux_rel&number=36932","disapproval":false,"date":"2012-07-02 19:09:36.335563","approval":false},{"sender":"commit-bot@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/asargent@chromium.org/10666027/15010","disapproval":false,"date":"2012-07-02 23:25:43.527324","approval":false},{"sender":"commit-bot@chromium.org","recipients":["asargent@chromium.org","mihaip@chromium.org","aa@chromium.org","kalman@chromium.org","chromium-reviews@chromium.org","mihaip-chromium-reviews@chromium.org","darin-cc@chromium.org","brettw-cc@chromium.org"],"text":"Change committed as 145238","disapproval":false,"date":"2012-07-03 01:32:26.403972","approval":false}],"owner_email":"asargent@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"Antony Sargent","subject":"Remove inappropriate chrome.{extension,app} bindings for platform apps","created":"2012-06-25 17:29:42.917702","patchsets":[1,16,8001,16002,13004,25025,15010],"modified":"2012-07-03 01:32:26.548917","closed":true,"commit":false,"issue":10666027}