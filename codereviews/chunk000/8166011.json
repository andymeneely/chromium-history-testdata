{"description":"[Sync] Add SyncPrefs class to consolidate all the prefs-related sync code\r\n\r\nMake ProfileSyncService and SyncBackendHost use SyncPrefs.\r\n\r\nRewrote how we manage registered/preferred types to use set operations.\r\n\r\nAdd pref for app notifications.\r\n\r\nPrefix all sync prefs with 'kSync'.\r\n\r\nRemove unused GetUnacknowledgedTypes() function.\r\n\r\nBUG=85286\r\nTEST=\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=104534","cc":["chromium-reviews@chromium.org","nick@chromium.org","idana@chromium.org","rsimha@chromium.org","phajdan.jr@chromium.org","estade+watch@chromium.org","tim@chromium.org"],"reviewers":["zea@chromium.org"],"messages":[{"sender":"akalin@google.com","recipients":["akalin@chromium.org","zea@chromium.org","chromium-reviews@chromium.org","nick@chromium.org","idana@chromium.org","rsimha@chromium.org","phajdan.jr@chromium.org","estade+watch@chromium.org","tim@chromium.org"],"text":"+zea for review","disapproval":false,"date":"2011-10-06 01:45:20.264472","approval":false},{"sender":"zea@chromium.org","recipients":["akalin@chromium.org","zea@chromium.org","chromium-reviews@chromium.org","nick@chromium.org","idana@chromium.org","rsimha@chromium.org","phajdan.jr@chromium.org","estade+watch@chromium.org","tim@chromium.org"],"text":"http://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/profile_sync_service.cc\nFile chrome/browser/sync/profile_sync_service.cc (right):\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/profile_sync_service.cc#newcode620\nchrome/browser/sync/profile_sync_service.cc:620: // Register all data types.\n\"Mark all data types as preferred\"\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/profile_sync_service.h\nFile chrome/browser/sync/profile_sync_service.h (right):\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/profile_sync_service.h#newcode407\nchrome/browser/sync/profile_sync_service.h:407: virtual void OnSyncManagedPrefChange(bool is_sync_managed);\nOVERRIDE\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/profile_sync_service.h#newcode574\nchrome/browser/sync/profile_sync_service.h:574: browser_sync::SyncPrefs sync_prefs_;\nComment about what this does.\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs.cc\nFile chrome/browser/sync/sync_prefs.cc (right):\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs.cc#newcode129\nchrome/browser/sync/sync_prefs.cc:129: if (GetDataTypePreferred(*it)) {\n&& *it != AUTOFILL_PROFILE (to enforce that it's not valid for AUTOFILL_PROFILE to be around without AUTOFILL)\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs.cc#newcode224\nchrome/browser/sync/sync_prefs.cc:224: OnSyncManagedPrefChange(*pref_sync_managed_));\nIs it worth using a PrefMember if we're observing the notificaiton ourselves? Why not just get the value directly from the pref service and send it here?\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs.h\nFile chrome/browser/sync/sync_prefs.h (right):\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs.h#newcode61\nchrome/browser/sync/sync_prefs.h:61: bool GetSyncSetupCompleted() const;\nHow about naming the boolean methods from Get* to Is* or Has*. I.e.: HasSyncSetupCompleted(), IsStartSuppressed, HasKeepEverythingSynced, IsManaged, etc.  Makes more sense to me when reading it.\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs_unittest.cc\nFile chrome/browser/sync/sync_prefs_unittest.cc (right):\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs_unittest.cc#newcode28\nchrome/browser/sync/sync_prefs_unittest.cc:28: // Get all frontend types.\nI'm not sure what frontend types means. Perhaps name this GetNonPassiveTypes?\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs_unittest.cc#newcode41\nchrome/browser/sync/sync_prefs_unittest.cc:41: syncable::ModelTypeSet GetVisibleUITypes() {\nPrefer GetUserVisibleTypes","disapproval":false,"date":"2011-10-06 21:05:56.257842","approval":false},{"sender":"akalin@chromium.org","recipients":["akalin@chromium.org","zea@chromium.org","chromium-reviews@chromium.org","nick@chromium.org","idana@chromium.org","rsimha@chromium.org","phajdan.jr@chromium.org","estade+watch@chromium.org","tim@chromium.org"],"text":"Everything address, PTAL.\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/profile_sync_service.cc\nFile chrome/browser/sync/profile_sync_service.cc (right):\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/profile_sync_service.cc#newcode620\nchrome/browser/sync/profile_sync_service.cc:620: // Register all data types.\nOn 2011/10/06 21:05:56, nzea wrote:\n> \"Mark all data types as preferred\"\n\nDone.\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/profile_sync_service.h\nFile chrome/browser/sync/profile_sync_service.h (right):\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/profile_sync_service.h#newcode407\nchrome/browser/sync/profile_sync_service.h:407: virtual void OnSyncManagedPrefChange(bool is_sync_managed);\nOn 2011/10/06 21:05:56, nzea wrote:\n> OVERRIDE\n\nDone.\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/profile_sync_service.h#newcode574\nchrome/browser/sync/profile_sync_service.h:574: browser_sync::SyncPrefs sync_prefs_;\nOn 2011/10/06 21:05:56, nzea wrote:\n> Comment about what this does.\n\nDone.\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs.cc\nFile chrome/browser/sync/sync_prefs.cc (right):\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs.cc#newcode129\nchrome/browser/sync/sync_prefs.cc:129: if (GetDataTypePreferred(*it)) {\nOn 2011/10/06 21:05:56, nzea wrote:\n> && *it != AUTOFILL_PROFILE (to enforce that it's not valid for AUTOFILL_PROFILE\n> to be around without AUTOFILL)\n\nBuilt another set called user_selectable_types and removed AUTOFILL_PROFILE.\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs.cc#newcode224\nchrome/browser/sync/sync_prefs.cc:224: OnSyncManagedPrefChange(*pref_sync_managed_));\nOn 2011/10/06 21:05:56, nzea wrote:\n> Is it worth using a PrefMember if we're observing the notificaiton ourselves?\n> Why not just get the value directly from the pref service and send it here?\n\nThe PrefMember is actually what causes the notification to be sent to us.  It Takes a NotificationObserver in its Init() call.\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs.h\nFile chrome/browser/sync/sync_prefs.h (right):\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs.h#newcode61\nchrome/browser/sync/sync_prefs.h:61: bool GetSyncSetupCompleted() const;\nOn 2011/10/06 21:05:56, nzea wrote:\n> How about naming the boolean methods from Get* to Is* or Has*. I.e.:\n> HasSyncSetupCompleted(), IsStartSuppressed, HasKeepEverythingSynced, IsManaged,\n> etc.  Makes more sense to me when reading it. \n\nDone.\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs_unittest.cc\nFile chrome/browser/sync/sync_prefs_unittest.cc (right):\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs_unittest.cc#newcode28\nchrome/browser/sync/sync_prefs_unittest.cc:28: // Get all frontend types.\nOn 2011/10/06 21:05:56, nzea wrote:\n> I'm not sure what frontend types means. Perhaps name this GetNonPassiveTypes?\n\nDone.\n\nhttp://codereview.chromium.org/8166011/diff/1/chrome/browser/sync/sync_prefs_unittest.cc#newcode41\nchrome/browser/sync/sync_prefs_unittest.cc:41: syncable::ModelTypeSet GetVisibleUITypes() {\nOn 2011/10/06 21:05:56, nzea wrote:\n> Prefer GetUserVisibleTypes\n\nDone.","disapproval":false,"date":"2011-10-06 22:37:56.062861","approval":false},{"sender":"zea@chromium.org","recipients":["akalin@chromium.org","zea@chromium.org","chromium-reviews@chromium.org","nick@chromium.org","idana@chromium.org","rsimha@chromium.org","phajdan.jr@chromium.org","estade+watch@chromium.org","tim@chromium.org"],"text":"I see, I guess the PrefMember is saving you the trouble of adding yourself to the PrefChangeRegistrar as well. LGTM","disapproval":false,"date":"2011-10-06 22:57:41.878154","approval":true},{"sender":"akalin@chromium.org","recipients":["akalin@chromium.org","zea@chromium.org","chromium-reviews@chromium.org","nick@chromium.org","idana@chromium.org","rsimha@chromium.org","phajdan.jr@chromium.org","estade+watch@chromium.org","tim@chromium.org"],"text":"Fixed integration test failure, will check in after trybots\n\nhttp://codereview.chromium.org/8166011/diff/11001/chrome/browser/sync/profile_sync_service.cc\nFile chrome/browser/sync/profile_sync_service.cc (right):\n\nhttp://codereview.chromium.org/8166011/diff/11001/chrome/browser/sync/profile_sync_service.cc#newcode623\nchrome/browser/sync/profile_sync_service.cc:623: std::set_difference(to_register.begin(), to_register.end(),\nNo need to do this -- since preferred_types is a subset of registered_types, then there's no need to do the set difference.  In fact, this is a bug, since preferred types is being grabbed when KeepEverythingSynced is true, which means that it's == registered_types, which means this always results in an empty set.","disapproval":false,"date":"2011-10-07 06:37:53.646971","approval":false}],"owner_email":"akalin@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"akalin","subject":"[Sync] Add SyncPrefs class to consolidate all the prefs-related sync code","created":"2011-10-06 01:42:41.718596","patchsets":[1,8001,11001,21001,22001],"modified":"2011-10-07 18:48:59.478427","closed":true,"commit":false,"issue":8166011}