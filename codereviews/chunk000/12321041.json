{"description":"Omnibox HistoryQuick: Store Recent Visits Information\n\nThis change upgrades HistoryQuick provider private URL\nindex data structure to store information about the ten\nmost recent visits to each URL.  This will allow frecency-\nbased scoring (see bug).\n\nTo make this happen, this change:\n\n* updated the private index data structure format to\nstore recent visit information.\n\n* enabled non-UI thread updates to the private data.  In\nparticular, after a URL is visited (and hence needs to be\nnewly indexed or at least updated), the private data class\nschedules a task on the historyDB thread to get the list\nof recent visits for the URL.  When the task returns, it\nupdates that information in the private data structure.\n\n* updated the cache data structure that gets written and\nrestored from a file to include the recent visits information.\n\n* forced the private data to get rebuilt from history if the\ncached data file come from a version that's not the most\nrecent version.\n\n* revises tests with respect to the new interfaces to certain\nfunctions.\n\n* deletes some of the ------ comment lines in\nchrome/browser/history/url_index_private_data.cc\nper Peter's request.\n\n* rearranges the location of the implementation\nof the helper classes in \nchrome/browser/history/url_index_private_data.cc\nper Peter's request.  I did not make any meaningful\nchanges in the process of this cut-and-paste.  No need\nto review those.\n\n* adds tests\n- recent visits gets populated correctly\n- saving and restoring recent visits\n\nA later changelist will turn on using the\nrecent  visits information in ranking URLs.\n\nBUG=175751\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=189211","cc":["chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"reviewers":["pkasting@chromium.org","sky@chromium.org"],"messages":[{"sender":"mpearson@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"Hi Peter and Scott,\n\nI'm altering the design of HistoryQuick provider's URL index.  Can you take a look at this tentative design and tell me if see and problems?\n\nPlease ignore the dearth of comments in the .cc files.\n\nI tried to comment the .h file I touch enough for you to understand the design.\n\nthanks,\nmark","disapproval":false,"date":"2013-02-21 08:05:13.856230","approval":false},{"sender":"pkasting@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"Approach seems OK\n\nhttps://codereview.chromium.org/12321041/diff/5/chrome/browser/history/url_index_private_data.cc\nFile chrome/browser/history/url_index_private_data.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/5/chrome/browser/history/url_index_private_data.cc#newcode356\nchrome/browser/history/url_index_private_data.cc:356: void URLIndexPrivateData::CancelPendingUpdates() {\nThis isn't currently called.\n\nDoes it need to be a separate function?  Can it be inlined in this class' destructor or something?\n\nhttps://codereview.chromium.org/12321041/diff/5/chrome/browser/history/url_index_private_data.h\nFile chrome/browser/history/url_index_private_data.h (right):\n\nhttps://codereview.chromium.org/12321041/diff/5/chrome/browser/history/url_index_private_data.h#newcode162\nchrome/browser/history/url_index_private_data.h:162: class UpdateRecentVisitsFromHistoryDBTask : public HistoryDBTask {\nNit: No need for a member class for this, just declare/define the class in the .cc file.","disapproval":false,"date":"2013-02-22 19:53:24.859490","approval":false},{"sender":"mpearson@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"Thanks for the comments.  The fact that the approach looks okay is enough of a message for me; I'll continue on the next steps of building on this change.\n\n--mark\n\nhttps://codereview.chromium.org/12321041/diff/5/chrome/browser/history/url_index_private_data.cc\nFile chrome/browser/history/url_index_private_data.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/5/chrome/browser/history/url_index_private_data.cc#newcode356\nchrome/browser/history/url_index_private_data.cc:356: void URLIndexPrivateData::CancelPendingUpdates() {\nOn 2013/02/22 19:53:24, Peter Kasting wrote:\n> This isn't currently called.\n\nGood point.  I intended to call it in the in-memory index's Shtudown().  Added call.\n\n> Does it need to be a separate function?  Can it be inlined in this class'\n> destructor or something?\n\nI think the destructor is an okay time, but for safety and consistency I'd rather do it before we write the private data to the cache file.  I guess I can put the call in that function and in the destructor if you prefer those two calls to the one call I just added.\n\nhttps://codereview.chromium.org/12321041/diff/5/chrome/browser/history/url_index_private_data.h\nFile chrome/browser/history/url_index_private_data.h (right):\n\nhttps://codereview.chromium.org/12321041/diff/5/chrome/browser/history/url_index_private_data.h#newcode162\nchrome/browser/history/url_index_private_data.h:162: class UpdateRecentVisitsFromHistoryDBTask : public HistoryDBTask {\nOn 2013/02/22 19:53:24, Peter Kasting wrote:\n> Nit: No need for a member class for this, just declare/define the class in the\n> .cc file.\n\nDone.\n\nI'm not sure where to put the definition and implementation in the .cc.  Please tell me if have a better suggestion for it.","disapproval":false,"date":"2013-02-22 20:34:55.062610","approval":false},{"sender":"sky@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"This approach seems fine by me too.\n\nhttps://codereview.chromium.org/12321041/diff/7001/chrome/browser/history/in_memory_url_index.cc\nFile chrome/browser/history/in_memory_url_index.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/7001/chrome/browser/history/in_memory_url_index.cc#newcode205\nchrome/browser/history/in_memory_url_index.cc:205: // TODO(mpearson): decide if this should be GetForProfileWithoutCreating().\nThese are all invoked as the result of a history notification. Given that history has to already be created so that what you have here (and 214) is fine.","disapproval":false,"date":"2013-02-22 21:17:40.570270","approval":false},{"sender":"mpearson@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"https://codereview.chromium.org/12321041/diff/7001/chrome/browser/history/in_memory_url_index.cc\nFile chrome/browser/history/in_memory_url_index.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/7001/chrome/browser/history/in_memory_url_index.cc#newcode205\nchrome/browser/history/in_memory_url_index.cc:205: // TODO(mpearson): decide if this should be GetForProfileWithoutCreating().\nOn 2013/02/22 21:17:40, sky wrote:\n> These are all invoked as the result of a history notification. Given that\n> history has to already be created so that what you have here (and 214) is fine.\n\nThen I'll remove the TODOs.  Done.","disapproval":false,"date":"2013-02-22 21:20:32.755660","approval":false},{"sender":"mpearson@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"Hi Peter and Scott,\n\nBecause you approved of the design of the last patchset,\nI continued developing and improved it.\n\nI now modified the URLIndexPrivateData to have space in its data structures \nto store the recent visits information. I also filled in the code \n(the do stuff here message in the old patchset) to populate \nthe new data correctly.\n\nCan you take a look and see if this new patchset looks good?\n(You might want to diff against the previous one.)\nAlso, if you need a refresher on context, see the changelist\ndescription.\n\nthanks,\nmark","disapproval":false,"date":"2013-03-01 02:41:10.899730","approval":false},{"sender":"pkasting@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"https://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/history_types.h\nFile chrome/browser/history/history_types.h (right):\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/history_types.h#newcode822\nchrome/browser/history/history_types.h:822: struct SuperBriefVisitInfo {\nI don't understand why this is needed.  VisitInfo is already typedefed to pair<Time, PageTransition>.  Can't you use that?\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/in_memory_url_index_types.h\nFile chrome/browser/history/in_memory_url_index_types.h (right):\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/in_memory_url_index_types.h#newcode134\nchrome/browser/history/in_memory_url_index_types.h:134: // it's likely to either be empty (if this URL was recently added\n\"likely\" seems like a strong word; won't this be correct most of the time, but incorrect for a brief period after visiting the URL?\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc\nFile chrome/browser/history/url_index_private_data.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode70\nchrome/browser/history/url_index_private_data.cc:70: // Declaration of helper classes  ----------------------------------------------\nNit: I'd put the declaration and definition one after the other within the same \"// -----\" section; call that section by the name of the class; and put that section just after any sections of file-scope functions.\n\n(I'd also put sections for other classes (e.g. member classes) completely above or below the section for URLIndexPrivateData, and have that class only have one section, called by the name of the class.  I'd also put two blank lines above each section divider comment rather than one.)\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode79\nchrome/browser/history/url_index_private_data.cc:79: virtual bool RunOnDBThread(HistoryBackend* backend,\nNit: blank line above\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode86\nchrome/browser/history/url_index_private_data.cc:86: // The URLIndexPrivateData that gets called back to / update after\nNit: Maybe remove the slash?  I'm not sure what the sentence means with it in there.\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode303\nchrome/browser/history/url_index_private_data.cc:303: SuperBriefVisits& brief_visits = row_pos->second.brief_visits;\nNit: I suggest using a pointer instead of a non-const ref, just because non-const refs are so rare in Google code\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode305\nchrome/browser/history/url_index_private_data.cc:305: const int size = std::min(recent_visits.size(), kMaxVisitsToUse);\nNit: size_t\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode314\nchrome/browser/history/url_index_private_data.cc:314: // Ignore this update.\nWhen is this possible?\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode1290\nchrome/browser/history/url_index_private_data.cc:1290: return true;  // always claim being done; do not retry failures\nNit: Capitalization, period; \"being\" -> \"to be\"","disapproval":false,"date":"2013-03-01 22:13:39.919000","approval":false},{"sender":"mpearson@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"Peter,\n\nHere are the revisions you requested.\n\nRemember, this is not a changelist in final form.  Assuming you're comfortable with these new structures (which it sounds like you are), I'm going to continue growing this changes by adding writing and restoring from the cache and by fixing the unit tests.\n\n--mark\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/history_types.h\nFile chrome/browser/history/history_types.h (right):\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/history_types.h#newcode822\nchrome/browser/history/history_types.h:822: struct SuperBriefVisitInfo {\nOn 2013/03/01 22:13:39, Peter Kasting wrote:\n> I don't understand why this is needed.  VisitInfo is already typedefed to\n> pair<Time, PageTransition>.  Can't you use that?\n\nSomehow I missed that.  Done; I now use that.\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/in_memory_url_index_types.h\nFile chrome/browser/history/in_memory_url_index_types.h (right):\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/in_memory_url_index_types.h#newcode134\nchrome/browser/history/in_memory_url_index_types.h:134: // it's likely to either be empty (if this URL was recently added\nOn 2013/03/01 22:13:39, Peter Kasting wrote:\n> \"likely\" seems like a strong word; won't this be correct most of the time, but\n> incorrect for a brief period after visiting the URL?\n\nRevised comment.\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc\nFile chrome/browser/history/url_index_private_data.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode70\nchrome/browser/history/url_index_private_data.cc:70: // Declaration of helper classes  ----------------------------------------------\nOn 2013/03/01 22:13:39, Peter Kasting wrote:\n> Nit: I'd put the declaration and definition one after the other within the same\n> \"// -----\" section; call that section by the name of the class; and put that\n> section just after any sections of file-scope functions.\n\nDone, put the helper class just below the algorithm functions section and just above the constructor for the first class declared in the .h  Also moved the implementation to this area as well.\n\n> \n> (I'd also put sections for other classes (e.g. member classes) completely above\n> or below the section for URLIndexPrivateData,\n\nMoved below.  I'm sorry this cut-and-paste is going to cause what looks like a large diff in the code review tool.\n\n> and have that class only have one\n> section, called by the name of the class.\n\nDone.\n\n> I'd also put two blank lines above\n> each section divider comment rather than one.)\n\nDone.\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode79\nchrome/browser/history/url_index_private_data.cc:79: virtual bool RunOnDBThread(HistoryBackend* backend,\nOn 2013/03/01 22:13:39, Peter Kasting wrote:\n> Nit: blank line above\n\nDone.\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode86\nchrome/browser/history/url_index_private_data.cc:86: // The URLIndexPrivateData that gets called back to / update after\nOn 2013/03/01 22:13:39, Peter Kasting wrote:\n> Nit: Maybe remove the slash?  I'm not sure what the sentence means with it in\n> there.\n\nReplace\ncalled back to / update\nwith\nupdated\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode303\nchrome/browser/history/url_index_private_data.cc:303: SuperBriefVisits& brief_visits = row_pos->second.brief_visits;\nOn 2013/03/01 22:13:39, Peter Kasting wrote:\n> Nit: I suggest using a pointer instead of a non-const ref, just because\n> non-const refs are so rare in Google code\n\nDone.\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode305\nchrome/browser/history/url_index_private_data.cc:305: const int size = std::min(recent_visits.size(), kMaxVisitsToUse);\nOn 2013/03/01 22:13:39, Peter Kasting wrote:\n> Nit: size_t\n\nDone.\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode314\nchrome/browser/history/url_index_private_data.cc:314: // Ignore this update.\nOn 2013/03/01 22:13:39, Peter Kasting wrote:\n> When is this possible?\n\nAdded an example of one case in which it's possible.\n\nhttps://codereview.chromium.org/12321041/diff/12001/chrome/browser/history/url_index_private_data.cc#newcode1290\nchrome/browser/history/url_index_private_data.cc:1290: return true;  // always claim being done; do not retry failures\nOn 2013/03/01 22:13:39, Peter Kasting wrote:\n> Nit: Capitalization, period; \"being\" -> \"to be\"\n\nDid all three.","disapproval":false,"date":"2013-03-03 18:59:09.780480","approval":false},{"sender":"pkasting@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"On 2013/03/03 18:59:09, Mark P wrote:\n> Remember, this is not a changelist in final form.  Assuming you're comfortable\n> with these new structures (which it sounds like you are), I'm going to continue\n> growing this changes by adding writing and restoring from the cache and by\n> fixing the unit tests.\n\nSGTM","disapproval":false,"date":"2013-03-03 20:50:08.657470","approval":false},{"sender":"mpearson@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"I think this changelist is complete and ready for a full review.  Can you please review it at your leisure?  (I'm out the rest of the week so I'm not going to look at any replies you send until next week regardless of when you send comments.)\n\nthanks,\nmark","disapproval":false,"date":"2013-03-12 19:16:22.614030","approval":false},{"sender":"pkasting@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"LGTM save for the commented-out DCHECK issue\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/history_types.h\nFile chrome/browser/history/history_types.h (right):\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/history_types.h#newcode838\nchrome/browser/history/history_types.h:838: // know the url_id;\nThis struct went away in patch set 7, but now it's back.  Bad merge?\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/in_memory_url_index_unittest.cc\nFile chrome/browser/history/in_memory_url_index_unittest.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/in_memory_url_index_unittest.cc#newcode379\nchrome/browser/history/in_memory_url_index_unittest.cc:379: EXPECT_EQ(expected_visits.size(), actual_visits.size());\nNit: If you ASSERT_EQ here you can drop the min() call in the loop.\n\nActually in that case you could just condense the loop to:\n\nEXPECT_TRUE(std::equal(expected_visits.begin(), expected_visits.end(),\n                       actual_visits.begin()));\n\nbut the output would be less verbose.\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/in_memory_url_index_unittest.cc#newcode963\nchrome/browser/history/in_memory_url_index_unittest.cc:963: ASSERT_TRUE(history_info_map.find(1) != history_info_map.end());\nTiny nit: I might factor these find() calls into temps to avoid duplicating the work... or you could use count() instead of find() for the asserts\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc\nFile chrome/browser/history/url_index_private_data.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc#newcode81\nchrome/browser/history/url_index_private_data.cc:81: // UpdateRecentVisitsFromHistoryDBTask (a helper class)  -----------------------\nTiny nit: I probably wouldn't put anything other than the class name itself in any of these dividers\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc#newcode334\nchrome/browser/history/url_index_private_data.cc:334: visits->resize(size);\nNit: I think reserve() + using push_back() might be slightly cheaper than resize() + assignment.  (2 places)\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc#newcode343\nchrome/browser/history/url_index_private_data.cc:343: // remove the URL URLIndexPrivateData before the historyDB call\nNit: removes; also you seem to be missing a preposition\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc#newcode721\nchrome/browser/history/url_index_private_data.cc:721: // DCHECK(!content::BrowserThread::CurrentlyOn(content::BrowserThread::UI));\nWe shouldn't have commented-out DCHECKs... did you need to comment this out for some reason?\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/test/data/History/url_history_provider_test.db.txt\nFile chrome/test/data/History/url_history_provider_test.db.txt (right):\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/test/data/History/url_history_provider_test.db.txt#newcode39\nchrome/test/data/History/url_history_provider_test.db.txt:39: found in visit_database.cc and is equivalent to:\nvisit_database.h","disapproval":false,"date":"2013-03-15 02:23:43.164230","approval":true},{"sender":"mpearson@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"Replies and/or fixes to all comments.  Please take another look if you desire.\n\nthanks,\nmark\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/history_types.h\nFile chrome/browser/history/history_types.h (right):\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/history_types.h#newcode838\nchrome/browser/history/history_types.h:838: // know the url_id;\nOn 2013/03/15 02:23:43, Peter Kasting wrote:\n> This struct went away in patch set 7, but now it's back.  Bad merge?\n\nApparently so.  Removed.\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/in_memory_url_index_unittest.cc\nFile chrome/browser/history/in_memory_url_index_unittest.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/in_memory_url_index_unittest.cc#newcode379\nchrome/browser/history/in_memory_url_index_unittest.cc:379: EXPECT_EQ(expected_visits.size(), actual_visits.size());\nOn 2013/03/15 02:23:43, Peter Kasting wrote:\n> Nit: If you ASSERT_EQ here you can drop the min() call in the loop.\n\nIn my experience with other tests, I found that it's helpful to see if and how the first few items differ even if the lists are a different size.  i.e., I prefer continuing on, not asserting that the sizes are equal.\n\n> Actually in that case you could just condense the loop to:\n> \n> EXPECT_TRUE(std::equal(expected_visits.begin(), expected_visits.end(),\n>                        actual_visits.begin()));\n> \n> but the output would be less verbose.\n\nAgain, I prefer the verbose output because it helps usage what went wrong when something breaks\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/in_memory_url_index_unittest.cc#newcode963\nchrome/browser/history/in_memory_url_index_unittest.cc:963: ASSERT_TRUE(history_info_map.find(1) != history_info_map.end());\nOn 2013/03/15 02:23:43, Peter Kasting wrote:\n> Tiny nit: I might factor these find() calls into temps to avoid duplicating the\n> work... or you could use count() instead of find() for the asserts\n\nDid the former (though frankly don't think it was worth the time to type such a minor optimization for a unit test...).\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc\nFile chrome/browser/history/url_index_private_data.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc#newcode81\nchrome/browser/history/url_index_private_data.cc:81: // UpdateRecentVisitsFromHistoryDBTask (a helper class)  -----------------------\nOn 2013/03/15 02:23:43, Peter Kasting wrote:\n> Tiny nit: I probably wouldn't put anything other than the class name itself in\n> any of these dividers\n\nOkay.\n\nI did it originally because I thought labels such as\n// URLIndexPrivateData::AddHistoryMatch\nor\n// URLIndexPrivateData::HistoryItemFactorGreater\ncould easily be misread as a function not a class.\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc#newcode334\nchrome/browser/history/url_index_private_data.cc:334: visits->resize(size);\nOn 2013/03/15 02:23:43, Peter Kasting wrote:\n> Nit: I think reserve() + using push_back() might be slightly cheaper than\n> resize() + assignment.  (2 places)\n\nI believe you're right.  Done in both places.\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc#newcode343\nchrome/browser/history/url_index_private_data.cc:343: // remove the URL URLIndexPrivateData before the historyDB call\nOn 2013/03/15 02:23:43, Peter Kasting wrote:\n> Nit: removes; also you seem to be missing a preposition\n\nDone.\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc#newcode721\nchrome/browser/history/url_index_private_data.cc:721: // DCHECK(!content::BrowserThread::CurrentlyOn(content::BrowserThread::UI));\nOn 2013/03/15 02:23:43, Peter Kasting wrote:\n> We shouldn't have commented-out DCHECKs... did you need to comment this out for\n> some reason?\n\nGood point.  I forgot out this.\n\nI think I have to remove this DCHECK.  The motivation is right.  However, unit tests call IndexRow() (via UpdateURL) while in the main test setup routines.  The main unit test functions seems to run on the UI thread.  And the threading system is set up, so I cannot do the trick I've used elsewhere\nDCHECK(!IsOnKnownThread || !CurrentlyOn(UI thread));\n\nUnless you have an idea of how to phrase this type of DCHECK, tell me.  Otherwise I'll remove and the accompanying comment.\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/test/data/History/url_history_provider_test.db.txt\nFile chrome/test/data/History/url_history_provider_test.db.txt (right):\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/test/data/History/url_history_provider_test.db.txt#newcode39\nchrome/test/data/History/url_history_provider_test.db.txt:39: found in visit_database.cc and is equivalent to:\nOn 2013/03/15 02:23:43, Peter Kasting wrote:\n> visit_database.h\n\nDone.  (Ah, yes, I wrote that comment before I moved the #define from the .cc to the .h.)","disapproval":false,"date":"2013-03-18 23:42:53.305700","approval":false},{"sender":"mpearson@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"Scott,\n\nSince this is a large change, I don't feel comfortable TBRing it.  Can you look over it to whatever extent you desire?\n\nthanks,\nmark","disapproval":false,"date":"2013-03-18 23:43:48.514150","approval":false},{"sender":"pkasting@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"I didn't look again, since my comments were all about minor things.\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc\nFile chrome/browser/history/url_index_private_data.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc#newcode721\nchrome/browser/history/url_index_private_data.cc:721: // DCHECK(!content::BrowserThread::CurrentlyOn(content::BrowserThread::UI));\nOn 2013/03/18 23:42:53, Mark P wrote:\n> On 2013/03/15 02:23:43, Peter Kasting wrote:\n> > We shouldn't have commented-out DCHECKs... did you need to comment this out\n> for\n> > some reason?\n> \n> Good point.  I forgot out this.\n> \n> I think I have to remove this DCHECK.  The motivation is right.  However, unit\n> tests call IndexRow() (via UpdateURL) while in the main test setup routines. \n> The main unit test functions seems to run on the UI thread.  And the threading\n> system is set up, so I cannot do the trick I've used elsewhere\n> DCHECK(!IsOnKnownThread || !CurrentlyOn(UI thread));\n> \n> Unless you have an idea of how to phrase this type of DCHECK, tell me. \n> Otherwise I'll remove and the accompanying comment.\n\nHmm.  At the least, I might leave in a comment in place of the old one, like:\n\nWe'd like to check that we're on the history DB thread.  However, its name is in an anonymous namespace, and anyway, unittest code actually calls this on the UI thread.  So we don't do any thread checks.\n\nAnother way might be to add some sort of \"&& !testing\" kind of check, but I'm not sure what a runtime flag for this is -- and the compile-time #ifdef UNIT_TEST won't work here in a .cc file that gets compiled once.  I suppose you could work around THAT by defining a relevant thread-checking function in the .h file under #ifdeefs, but at that point I'm not sure it's worth it.","disapproval":false,"date":"2013-03-19 02:54:50.877420","approval":false},{"sender":"mpearson@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"Now just waiting for Scott.\n\n--mark\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc\nFile chrome/browser/history/url_index_private_data.cc (right):\n\nhttps://codereview.chromium.org/12321041/diff/21001/chrome/browser/history/url_index_private_data.cc#newcode721\nchrome/browser/history/url_index_private_data.cc:721: // DCHECK(!content::BrowserThread::CurrentlyOn(content::BrowserThread::UI));\nOn 2013/03/19 02:54:50, Peter Kasting wrote:\n> On 2013/03/18 23:42:53, Mark P wrote:\n> > On 2013/03/15 02:23:43, Peter Kasting wrote:\n> > > We shouldn't have commented-out DCHECKs... did you need to comment this out\n> > for\n> > > some reason?\n> > \n> > Good point.  I forgot out this.\n> > \n> > I think I have to remove this DCHECK.  The motivation is right.  However, unit\n> > tests call IndexRow() (via UpdateURL) while in the main test setup routines. \n> > The main unit test functions seems to run on the UI thread.  And the threading\n> > system is set up, so I cannot do the trick I've used elsewhere\n> > DCHECK(!IsOnKnownThread || !CurrentlyOn(UI thread));\n> > \n> > Unless you have an idea of how to phrase this type of DCHECK, tell me. \n> > Otherwise I'll remove and the accompanying comment.\n> \n> Hmm.  At the least, I might leave in a comment in place of the old one, like:\n> \n> We'd like to check that we're on the history DB thread.  However, its name is in\n> an anonymous namespace, and anyway, unittest code actually calls this on the UI\n> thread.  So we don't do any thread checks.\n\nUpdated to use a comment much like your suggestion.\n\n> Another way might be to add some sort of \"&& !testing\" kind of check, but I'm\n> not sure what a runtime flag for this is -- and the compile-time #ifdef\n> UNIT_TEST won't work here in a .cc file that gets compiled once.  I suppose you\n> could work around THAT by defining a relevant thread-checking function in the .h\n> file under #ifdeefs, but at that point I'm not sure it's worth it.\n\nI couldn't find a run-time flag for \"is running unit tests\".  I know there are workaround (icky function defines in the .h, conditioned on #if defined(UNIT_TEST)) but these seem heavy-handed.  I'll pass and simply leave the comment.","disapproval":false,"date":"2013-03-19 18:57:04.260430","approval":false},{"sender":"sky@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"Since Peter reviewed this I'm LGTMing. If you want me to do an in depth review just ask.","disapproval":false,"date":"2013-03-19 22:57:49.685250","approval":true},{"sender":"commit-bot@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/mpearson@chromium.org/12321041/41001","disapproval":false,"date":"2013-03-19 23:11:34.257120","approval":false},{"sender":"commit-bot@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/mpearson@chromium.org/12321041/27006","disapproval":false,"date":"2013-03-19 23:29:17.627330","approval":false},{"sender":"commit-bot@chromium.org","recipients":["mpearson@chromium.org","pkasting@chromium.org","sky@chromium.org","chromium-reviews@chromium.org","browser-components-watch@chromium.org"],"text":"Change committed as 189211","disapproval":false,"date":"2013-03-20 08:59:54.723010","approval":false}],"owner_email":"mpearson@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"Mark P","subject":"Omnibox HistoryQuick: Store Recent Visits Information","created":"2013-02-21 07:43:10.958900","patchsets":[1,2001,5,7001,3004,12001,18002,20001,21001,35001,41001,27006],"modified":"2013-03-20 08:59:54.811120","closed":true,"commit":false,"issue":12321041}