{"description":"Implement Clipboard::ReadImage for Windows.\r\n\r\nBUG=75237\r\nTEST=Local HTTP testing with data-transfer-items-image-png.html\n\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=81508","cc":["chromium-reviews@chromium.org"],"reviewers":["dimich@chromium.org","tony@chromium.org","jam@chromium.org"],"messages":[{"sender":"dcheng@chromium.org","recipients":["dcheng@chromium.org","dimich@chromium.org","tony@chromium.org","chromium-reviews@chromium.org"],"text":"At some point, I think we still want to consider rolling a fast, space-inefficient implementation of DEFLATE.\n\nReducing the number of copies will also help, and is something I plan on working on this week. The Windows version incurs one copy for converting from a bottom-up DIB to a top-down DIB, another for sending it over to the renderer, a third for registering the Blob, and a fourth copy for actually reading the data out. Three of these copies are over IPC.","disapproval":false,"date":"2011-04-12 01:24:26.847389","approval":false},{"sender":"tony@chromium.org","recipients":["dcheng@chromium.org","dimich@chromium.org","tony@chromium.org","chromium-reviews@chromium.org"],"text":"Can we write a unit test for this?\n\nhttp://codereview.chromium.org/6824063/diff/6001/ui/base/clipboard/clipboard_win.cc\nFile ui/base/clipboard/clipboard_win.cc (right):\n\nhttp://codereview.chromium.org/6824063/diff/6001/ui/base/clipboard/clipboard_win.cc#newcode24\nui/base/clipboard/clipboard_win.cc:24: #include \"ui/gfx/codec/png_codec.h\"\nNit: sorting\n\nhttp://codereview.chromium.org/6824063/diff/6001/ui/base/clipboard/clipboard_win.cc#newcode489\nui/base/clipboard/clipboard_win.cc:489: &png_data);\nWhat thread does this happen on?  Seems like this could be slow.  Can we do this work on another thread?\n\nAlternately, we could use shared memory to pass the raw bitmap to the renderer (thus saving a copy) and have the renderer do the encoding.\n\nWe also have third_party/snappy, which might be a useful fast compression/decompression algorithm.","disapproval":false,"date":"2011-04-12 17:30:54.167140","approval":false},{"sender":"dcheng@chromium.org","recipients":["dcheng@chromium.org","dimich@chromium.org","tony@chromium.org","chromium-reviews@chromium.org"],"text":"http://codereview.chromium.org/6824063/diff/6001/ui/base/clipboard/clipboard_win.cc\nFile ui/base/clipboard/clipboard_win.cc (right):\n\nhttp://codereview.chromium.org/6824063/diff/6001/ui/base/clipboard/clipboard_win.cc#newcode24\nui/base/clipboard/clipboard_win.cc:24: #include \"ui/gfx/codec/png_codec.h\"\nOn 2011/04/12 17:30:54, tony wrote:\n> Nit: sorting\n\nDone.\n\nhttp://codereview.chromium.org/6824063/diff/6001/ui/base/clipboard/clipboard_win.cc#newcode489\nui/base/clipboard/clipboard_win.cc:489: &png_data);\nOn 2011/04/12 17:30:54, tony wrote:\n> What thread does this happen on?  Seems like this could be slow.  Can we do this\n> work on another thread?\n> \n\nThis occurs on the IO thread.\n\n> Alternately, we could use shared memory to pass the raw bitmap to the renderer\n> (thus saving a copy) and have the renderer do the encoding.\n> \n\nI am already working on a follow-up patch to reduce the number of copies this will require. It will go through the BlobRegistry and make use of the Blob code that's already been built.\n\n> We also have third_party/snappy, which might be a useful fast\n> compression/decompression algorithm.\n\nIs snappy compatible with deflate?","disapproval":false,"date":"2011-04-12 21:04:54.985500","approval":false},{"sender":"tony@chromium.org","recipients":["dcheng@chromium.org","dimich@chromium.org","tony@chromium.org","chromium-reviews@chromium.org"],"text":"http://codereview.chromium.org/6824063/diff/6001/ui/base/clipboard/clipboard_win.cc\nFile ui/base/clipboard/clipboard_win.cc (right):\n\nhttp://codereview.chromium.org/6824063/diff/6001/ui/base/clipboard/clipboard_win.cc#newcode489\nui/base/clipboard/clipboard_win.cc:489: &png_data);\nHow long does it take to PNG compress, say, an 8 megapixel image?  If it's more than a few seconds, then I think we need to move this off of the IO thread.\n\nI think it's fine optimizing the memory use in a follow up patch.\n\nA unittest would be nice so someone could run this through purify or wine+valgrind.","disapproval":false,"date":"2011-04-12 21:14:17.563723","approval":false},{"sender":"dcheng@chromium.org","recipients":["dcheng@chromium.org","dimich@chromium.org","tony@chromium.org","chromium-reviews@chromium.org"],"text":"http://codereview.chromium.org/6824063/diff/6001/ui/base/clipboard/clipboard_win.cc\nFile ui/base/clipboard/clipboard_win.cc (right):\n\nhttp://codereview.chromium.org/6824063/diff/6001/ui/base/clipboard/clipboard_win.cc#newcode489\nui/base/clipboard/clipboard_win.cc:489: &png_data);\nOn 2011/04/12 21:14:17, tony wrote:\n> How long does it take to PNG compress, say, an 8 megapixel image?  If it's more\n> than a few seconds, then I think we need to move this off of the IO thread.\n> \n\nWith Z_DEFAULT_COMPRESSION, a 2560x1600 screenshot takes ~840-850ms on my machine. Z_NO_COMPRESSION takes ~650ms and Z_BEST_SPEED takes ~470-480ms. I suspect this may be due to the amount of data being copied around, and I think that reducing the number of copies of data will significantly improve this.\n\nI am planning on refactoring this function, since Clipboard::ReadImage must execute on the UI thread on Linux. I haven't figured out an appropriate strategy though (one route I am considering is using a sync IPC on Linux to grab the raw bitmap data on the UI thread from the IO thread, though I am not sure if this will cause deadlock issues).\n\n> I think it's fine optimizing the memory use in a follow up patch.\n> \n> A unittest would be nice so someone could run this through purify or\n> wine+valgrind.\n\nHow would you structure such a unit test? I agree it'd be nice, but I'm not entirely sure it belongs within the scope of this change (there are a few other things here that could use a test of that sort as well then; for example,Clipboard::WriteBitmapFromHandle).","disapproval":false,"date":"2011-04-12 23:30:54.292416","approval":false},{"sender":"tony@chromium.org","recipients":["dcheng@chromium.org","dimich@chromium.org","tony@chromium.org","chromium-reviews@chromium.org"],"text":"840-850ms sounds OK to me.  I wouldn't bother with the png_codec changes until after you've done the other speed improvements.\n\nLike you said, it sounds like you'll have to do some refactoring on Linux anyway, so maybe there will be an easy way to offload this to the file thread then.\n\nFor testing, you could make a private function that takes the HBITMAP and does most of the work.  You could then have a FRIEND_TEST that passes in a fake HBITMAP to the test.","disapproval":false,"date":"2011-04-13 00:41:17.534050","approval":false},{"sender":"dcheng@chromium.org","recipients":["dcheng@chromium.org","dimich@chromium.org","tony@chromium.org","chromium-reviews@chromium.org"],"text":"Mind taking another look? I added a DEPS file for the zlib header (is there a better way to to do this?) and redirect the ReadImage IPC on Windows to the FILE thread instead.","disapproval":false,"date":"2011-04-13 22:23:07.712882","approval":false},{"sender":"tony@chromium.org","recipients":["dcheng@chromium.org","dimich@chromium.org","tony@chromium.org","chromium-reviews@chromium.org"],"text":"LGTM.\n\nThe DEPS change seems fine to me.  ui_base depends on ui_gfx which depends on zlib, so it seems fine to include directly from zlib.","disapproval":false,"date":"2011-04-13 23:06:10.085191","approval":true},{"sender":"dcheng@chromium.org","recipients":["dcheng@chromium.org","dimich@chromium.org","tony@chromium.org","jam@chromium.org","chromium-reviews@chromium.org"],"text":"jam, mind taking a look? The presubmit script would like a LGTM from an OWNER.","disapproval":false,"date":"2011-04-13 23:27:19.181346","approval":false},{"sender":"jam@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"lgtm\n\n\nRegarding this comment\n\n\"I am planning on refactoring this function, since Clipboard::ReadImage\nmust execute on the UI thread on Linux. I haven't figured out an\nappropriate strategy though (one route I am considering is using a sync\nIPC on Linux to grab the raw bitmap data on the UI thread from the IO\nthread, though I am not sure if this will cause deadlock issues).\"\n\nwe don't do sync messages between threads (it wouldn't work anyways, since\nIO thread can't send sync messages).  Why not just have the clipboard filter\noverride the thread to dispatch to UI for linux?\n\nOn Wed, Apr 13, 2011 at 4:27 PM, <dcheng@chromium.org> wrote:\n\n> jam, mind taking a look? The presubmit script would like a LGTM from an\n> OWNER.\n>\n>\n> http://codereview.chromium.org/6824063/\n>\n","disapproval":false,"date":"2011-04-13 23:34:15.391448","approval":true}],"owner_email":"dcheng@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"dcheng","subject":"Implement Clipboard::ReadImage for Windows.","created":"2011-04-12 00:26:46.502830","patchsets":[1,2001,3001,6001,4002,8001,11001,14002,18001],"modified":"2011-05-09 13:49:24.106604","closed":true,"commit":false,"issue":6824063}